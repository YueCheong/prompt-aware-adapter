| distributed init (rank 0, world 4): env://
| distributed init (rank 2, world 4): env://
| distributed init (rank 1, world 4): env://
| distributed init (rank 3, world 4): env://
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/coco_captions/coco_karpathy_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.79s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.61s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.44s)
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.45s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.45s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.30s)
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_train.json
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_val.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/okvqa/okvqa_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/aokvqa/aokvqa_v1p0_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
len(exist_annotation):11106
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/gqa/train_balanced_questions.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/gqa/images/train2014
trainable params: 27262976 || all params: 8057524224 || trainable%: 0.33835425426081844
Position interpolate from 16x16 to 32x32
model arch:
 MiniGPTv4(
  (llama_model): PeftModelForCausalLM(
    (base_model): LoraModel(
      (model): LlamaForCausalLM(
        (model): LlamaModel(
          (embed_tokens): Embedding(128256, 4096)
          (layers): ModuleList(
            (0-31): 32 x LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear(
                  in_features=4096, out_features=4096, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=4096, bias=False)
                )
                (k_proj): Linear(in_features=4096, out_features=1024, bias=False)
                (v_proj): Linear(
                  in_features=4096, out_features=1024, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=1024, bias=False)
                )
                (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (up_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (down_proj): Linear(in_features=14336, out_features=4096, bias=False)
                (act_fn): SiLU()
              )
              (input_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
              (post_attention_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
            )
          )
          (norm): LlamaRMSNorm((4096,), eps=1e-05)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (lm_head): CastOutputToFloat(
          (0): Linear(in_features=4096, out_features=128256, bias=False)
        )
      )
    )
  )
  (visual_encoder): VisionTransformer(
    (patch_embed): PatchEmbed(
      (proj): Conv2d(3, 1408, kernel_size=(14, 14), stride=(14, 14))
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0-38): 39 x Block(
        (norm1): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=1408, out_features=4224, bias=False)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=1408, out_features=1408, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=1408, out_features=6144, bias=True)
          (act): GELU(approximate='none')
          (fc2): Linear(in_features=6144, out_features=1408, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (ln_vision): LayerNorm((1408,), eps=1e-05, elementwise_affine=True)
  (local_attn): LocalAttention(
    (txt): Linear(in_features=4096, out_features=1408, bias=True)
    (img): Linear(in_features=1408, out_features=1408, bias=True)
  )
  (llama_proj): Linear(in_features=5632, out_features=4096, bias=True)
)
batch sizes [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]]
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_B.weight
module.local_attn.txt.weight
module.local_attn.txt.bias
module.local_attn.img.weight
module.local_attn.img.bias
module.llama_proj.weight
module.llama_proj.bias
instruction_input prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of the reflection of the man shaving ', '<Img><ImageHere></Img> [refer] the location of horse on the left is ', '<Img><ImageHere></Img> [refer] could you tell me the location for the tallest giraffe among the two ? ', '<Img><ImageHere></Img> [refer] give me the location of a grilled table near the person with a laptop ', '<Img><ImageHere></Img> [refer] give me the location of a man in a white shirt looks nervous as an older woman buttons him up ', '<Img><ImageHere></Img> [refer] could you tell me the location for a silver van with people facing it ? ']
| distributed init (rank 2, world 4): env://
| distributed init (rank 0, world 4): env://
| distributed init (rank 1, world 4): env://
| distributed init (rank 3, world 4): env://
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/coco_captions/coco_karpathy_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.43s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.51s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.25s)
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.54s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.45s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.23s)
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_train.json
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_val.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/okvqa/okvqa_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/aokvqa/aokvqa_v1p0_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
len(exist_annotation):11106
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/gqa/train_balanced_questions.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/gqa/images/train2014
trainable params: 27262976 || all params: 8057524224 || trainable%: 0.33835425426081844
Position interpolate from 16x16 to 32x32
model arch:
 MiniGPTv4(
  (llama_model): PeftModelForCausalLM(
    (base_model): LoraModel(
      (model): LlamaForCausalLM(
        (model): LlamaModel(
          (embed_tokens): Embedding(128256, 4096)
          (layers): ModuleList(
            (0-31): 32 x LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear(
                  in_features=4096, out_features=4096, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=4096, bias=False)
                )
                (k_proj): Linear(in_features=4096, out_features=1024, bias=False)
                (v_proj): Linear(
                  in_features=4096, out_features=1024, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=1024, bias=False)
                )
                (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (up_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (down_proj): Linear(in_features=14336, out_features=4096, bias=False)
                (act_fn): SiLU()
              )
              (input_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
              (post_attention_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
            )
          )
          (norm): LlamaRMSNorm((4096,), eps=1e-05)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (lm_head): CastOutputToFloat(
          (0): Linear(in_features=4096, out_features=128256, bias=False)
        )
      )
    )
  )
  (visual_encoder): VisionTransformer(
    (patch_embed): PatchEmbed(
      (proj): Conv2d(3, 1408, kernel_size=(14, 14), stride=(14, 14))
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0-38): 39 x Block(
        (norm1): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=1408, out_features=4224, bias=False)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=1408, out_features=1408, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=1408, out_features=6144, bias=True)
          (act): GELU(approximate='none')
          (fc2): Linear(in_features=6144, out_features=1408, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (ln_vision): LayerNorm((1408,), eps=1e-05, elementwise_affine=True)
  (local_attn): LocalAttention(
    (txt): Linear(in_features=4096, out_features=1408, bias=True)
    (img): Linear(in_features=1408, out_features=1408, bias=True)
  )
  (llama_proj): Linear(in_features=5632, out_features=4096, bias=True)
)
batch sizes [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]]
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_B.weight
module.local_attn.txt.weight
module.local_attn.txt.bias
module.local_attn.img.weight
module.local_attn.img.bias
module.llama_proj.weight
module.llama_proj.bias
instruction_input prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of the reflection of the man shaving ', '<Img><ImageHere></Img> [refer] the location of horse on the left is ', '<Img><ImageHere></Img> [refer] could you tell me the location for the tallest giraffe among the two ? ', '<Img><ImageHere></Img> [refer] give me the location of a grilled table near the person with a laptop ', '<Img><ImageHere></Img> [refer] give me the location of a man in a white shirt looks nervous as an older woman buttons him up ', '<Img><ImageHere></Img> [refer] could you tell me the location for a silver van with people facing it ? ']
this is encode_img_txt function!
prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of the reflection of the man shaving ', '<Img><ImageHere></Img> [refer] the location of horse on the left is ', '<Img><ImageHere></Img> [refer] could you tell me the location for the tallest giraffe among the two ? ', '<Img><ImageHere></Img> [refer] give me the location of a grilled table near the person with a laptop ', '<Img><ImageHere></Img> [refer] give me the location of a man in a white shirt looks nervous as an older woman buttons him up ', '<Img><ImageHere></Img> [refer] could you tell me the location for a silver van with people facing it ? ']
| distributed init (rank 0, world 4): env://| distributed init (rank 1, world 4): env://

| distributed init (rank 3, world 4): env://
| distributed init (rank 2, world 4): env://
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/coco_captions/coco_karpathy_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.43s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.49s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.25s)
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.46s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.51s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.23s)
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_train.json
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_val.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/okvqa/okvqa_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/aokvqa/aokvqa_v1p0_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
len(exist_annotation):11106
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/gqa/train_balanced_questions.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/gqa/images/train2014
trainable params: 27262976 || all params: 8057524224 || trainable%: 0.33835425426081844
Position interpolate from 16x16 to 32x32
model arch:
 MiniGPTv4(
  (llama_model): PeftModelForCausalLM(
    (base_model): LoraModel(
      (model): LlamaForCausalLM(
        (model): LlamaModel(
          (embed_tokens): Embedding(128256, 4096)
          (layers): ModuleList(
            (0-31): 32 x LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear(
                  in_features=4096, out_features=4096, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=4096, bias=False)
                )
                (k_proj): Linear(in_features=4096, out_features=1024, bias=False)
                (v_proj): Linear(
                  in_features=4096, out_features=1024, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=1024, bias=False)
                )
                (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (up_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (down_proj): Linear(in_features=14336, out_features=4096, bias=False)
                (act_fn): SiLU()
              )
              (input_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
              (post_attention_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
            )
          )
          (norm): LlamaRMSNorm((4096,), eps=1e-05)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (lm_head): CastOutputToFloat(
          (0): Linear(in_features=4096, out_features=128256, bias=False)
        )
      )
    )
  )
  (visual_encoder): VisionTransformer(
    (patch_embed): PatchEmbed(
      (proj): Conv2d(3, 1408, kernel_size=(14, 14), stride=(14, 14))
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0-38): 39 x Block(
        (norm1): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=1408, out_features=4224, bias=False)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=1408, out_features=1408, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=1408, out_features=6144, bias=True)
          (act): GELU(approximate='none')
          (fc2): Linear(in_features=6144, out_features=1408, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (ln_vision): LayerNorm((1408,), eps=1e-05, elementwise_affine=True)
  (local_attn): LocalAttention(
    (txt): Linear(in_features=4096, out_features=1408, bias=True)
    (img): Linear(in_features=1408, out_features=1408, bias=True)
  )
  (llama_proj): Linear(in_features=5632, out_features=4096, bias=True)
)
batch sizes [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]]
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_B.weight
module.local_attn.txt.weight
module.local_attn.txt.bias
module.local_attn.img.weight
module.local_attn.img.bias
module.llama_proj.weight
module.llama_proj.bias
instruction_input prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of the reflection of the man shaving ', '<Img><ImageHere></Img> [refer] the location of horse on the left is ', '<Img><ImageHere></Img> [refer] could you tell me the location for the tallest giraffe among the two ? ', '<Img><ImageHere></Img> [refer] give me the location of a grilled table near the person with a laptop ', '<Img><ImageHere></Img> [refer] give me the location of a man in a white shirt looks nervous as an older woman buttons him up ', '<Img><ImageHere></Img> [refer] could you tell me the location for a silver van with people facing it ? ']
this is encode_img_txt function!
prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of the reflection of the man shaving ', '<Img><ImageHere></Img> [refer] the location of horse on the left is ', '<Img><ImageHere></Img> [refer] could you tell me the location for the tallest giraffe among the two ? ', '<Img><ImageHere></Img> [refer] give me the location of a grilled table near the person with a laptop ', '<Img><ImageHere></Img> [refer] give me the location of a man in a white shirt looks nervous as an older woman buttons him up ', '<Img><ImageHere></Img> [refer] could you tell me the location for a silver van with people facing it ? ']
processed prompt_list:['from this image, tell me the location of the reflection of the man shaving', 'the location of horse on the left is', 'could you tell me the location for the tallest giraffe among the two ?', 'give me the location of a grilled table near the person with a laptop', 'give me the location of a man in a white shirt looks nervous as an older woman buttons him up', 'could you tell me the location for a silver van with people facing it ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.1576e-04,  1.0095e-03, -4.2414e-04,  ..., -6.1241e-04,
          -3.7534e-04,  2.1578e-04],
         [-7.0914e-04,  1.0180e-03, -4.5321e-04,  ..., -5.2575e-04,
          -4.4196e-04,  2.7604e-04],
         [-6.7874e-04,  9.2512e-04, -5.4501e-04,  ..., -7.1182e-04,
          -4.3788e-04,  6.4471e-04],
         ...,
         [-9.3640e-04,  2.9447e-04, -1.0366e-03,  ..., -5.6222e-04,
          -4.5770e-04,  4.7202e-04],
         [-9.5512e-04,  3.9773e-04, -7.1301e-04,  ..., -6.0577e-04,
          -1.6062e-04,  5.0616e-04],
         [-8.4816e-04,  3.1015e-04, -5.5133e-04,  ..., -7.6634e-04,
          -4.8201e-06,  5.1850e-04]],

        [[-7.2095e-04,  6.3143e-04, -7.4762e-04,  ..., -4.2857e-04,
          -5.6809e-04,  3.5595e-04],
         [-7.6834e-04,  4.0632e-04, -6.1734e-04,  ..., -8.4432e-05,
          -4.4728e-04,  4.1704e-04],
         [-9.2949e-04, -2.1859e-04, -5.5419e-05,  ..., -5.3963e-04,
          -3.4184e-04, -2.4485e-04],
         ...,
         [-7.7183e-04,  1.5197e-04, -6.8650e-04,  ..., -4.0174e-04,
          -5.6473e-04,  9.4441e-04],
         [-8.6048e-04, -5.8683e-05, -7.8204e-05,  ..., -2.3247e-04,
           7.5247e-06,  2.1857e-04],
         [-8.9711e-04,  8.7893e-05, -1.7127e-04,  ..., -1.4441e-04,
          -2.2620e-06,  2.1964e-04]],

        [[-3.6728e-04,  3.6040e-04, -6.3930e-04,  ..., -4.3694e-04,
          -5.4878e-04, -1.9312e-04],
         [-7.4486e-04,  5.4782e-04, -1.0576e-03,  ...,  8.1863e-05,
           5.3878e-04,  6.5586e-04],
         [-6.9229e-04, -5.9503e-04, -7.8860e-04,  ..., -7.1565e-04,
          -8.5583e-05, -2.9039e-05],
         ...,
         [-4.7084e-04, -2.8537e-04, -1.8690e-04,  ..., -1.8538e-05,
           2.3769e-04,  7.5431e-04],
         [-4.1998e-04,  4.9115e-06, -8.4753e-04,  ..., -5.5127e-05,
          -3.1599e-04,  4.3582e-04],
         [-5.4268e-04,  1.8930e-04, -8.1734e-04,  ..., -7.4346e-05,
          -3.7694e-04,  2.5998e-04]],

        [[-1.0473e-03, -1.6947e-04, -1.5566e-03,  ..., -1.5364e-04,
           6.5788e-04,  4.8270e-04],
         [-9.1004e-04,  2.8216e-05, -1.3727e-03,  ..., -6.2351e-04,
           7.6868e-04,  4.5621e-04],
         [-8.1499e-04,  9.0194e-04, -7.0368e-04,  ..., -3.8122e-04,
          -6.8983e-04,  4.8680e-04],
         ...,
         [-4.1891e-04, -5.0289e-05, -9.2175e-04,  ..., -5.1350e-04,
           3.5680e-04,  3.0986e-04],
         [-1.0360e-03, -2.8521e-05, -9.5457e-04,  ..., -5.7615e-06,
           1.4104e-04,  7.0891e-04],
         [-1.1578e-03, -8.2765e-05, -1.3956e-03,  ..., -5.4730e-05,
           5.3416e-04,  5.4558e-04]],

        [[-8.2988e-04,  2.6765e-04, -7.4980e-04,  ..., -1.1053e-04,
          -9.6882e-05,  4.8715e-04],
         [-4.0503e-04,  1.3866e-04, -9.4061e-04,  ..., -1.7821e-04,
          -7.4001e-04,  1.0778e-03],
         [-4.3274e-04,  3.6616e-04, -7.3470e-04,  ..., -1.4896e-04,
          -5.3783e-04,  1.9164e-04],
         ...,
         [-6.2510e-04,  7.5439e-04, -7.2682e-04,  ...,  4.7274e-04,
          -2.6073e-04,  2.0429e-04],
         [-8.7236e-04,  2.5899e-04, -5.9000e-04,  ...,  5.3032e-05,
          -1.0245e-03,  1.9889e-04],
         [-9.2366e-04,  4.0017e-04, -1.0408e-03,  ..., -1.0939e-04,
          -2.0889e-04,  8.1367e-04]],

        [[-5.1470e-04, -3.5635e-04, -8.2950e-04,  ...,  1.2179e-04,
           1.7806e-04, -2.2839e-04],
         [-5.5094e-04, -3.3550e-04, -7.8536e-04,  ...,  4.4577e-05,
          -8.2926e-05, -2.5886e-04],
         [-6.0142e-04, -5.3348e-04, -3.4370e-04,  ...,  2.1170e-05,
           1.2874e-04, -3.1567e-04],
         ...,
         [-5.1390e-04,  5.0241e-04, -1.2855e-03,  ..., -3.6304e-04,
          -6.1879e-04,  3.1179e-04],
         [-7.1707e-04,  3.5086e-04, -1.2777e-03,  ..., -3.7053e-04,
          -5.7404e-04,  3.9837e-04],
         [-1.0083e-03,  1.0571e-04, -7.9877e-04,  ..., -3.2166e-04,
          -3.5992e-04, -3.3314e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
| distributed init (rank 0, world 4): env://
| distributed init (rank 1, world 4): env://
| distributed init (rank 3, world 4): env://
| distributed init (rank 2, world 4): env://
| distributed init (rank 1, world 4): env://| distributed init (rank 3, world 4): env://

| distributed init (rank 0, world 4): env://
| distributed init (rank 2, world 4): env://
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/coco_captions/coco_karpathy_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.42s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.57s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.24s)
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.45s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.45s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.36s)
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_train.json
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_val.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/okvqa/okvqa_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/aokvqa/aokvqa_v1p0_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
len(exist_annotation):11106
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/gqa/train_balanced_questions.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/gqa/images/train2014
trainable params: 27262976 || all params: 8057524224 || trainable%: 0.33835425426081844
Position interpolate from 16x16 to 32x32
model arch:
 MiniGPTv4(
  (llama_model): PeftModelForCausalLM(
    (base_model): LoraModel(
      (model): LlamaForCausalLM(
        (model): LlamaModel(
          (embed_tokens): Embedding(128256, 4096)
          (layers): ModuleList(
            (0-31): 32 x LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear(
                  in_features=4096, out_features=4096, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=4096, bias=False)
                )
                (k_proj): Linear(in_features=4096, out_features=1024, bias=False)
                (v_proj): Linear(
                  in_features=4096, out_features=1024, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=1024, bias=False)
                )
                (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (up_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (down_proj): Linear(in_features=14336, out_features=4096, bias=False)
                (act_fn): SiLU()
              )
              (input_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
              (post_attention_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
            )
          )
          (norm): LlamaRMSNorm((4096,), eps=1e-05)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (lm_head): CastOutputToFloat(
          (0): Linear(in_features=4096, out_features=128256, bias=False)
        )
      )
    )
  )
  (visual_encoder): VisionTransformer(
    (patch_embed): PatchEmbed(
      (proj): Conv2d(3, 1408, kernel_size=(14, 14), stride=(14, 14))
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0-38): 39 x Block(
        (norm1): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=1408, out_features=4224, bias=False)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=1408, out_features=1408, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=1408, out_features=6144, bias=True)
          (act): GELU(approximate='none')
          (fc2): Linear(in_features=6144, out_features=1408, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (ln_vision): LayerNorm((1408,), eps=1e-05, elementwise_affine=True)
  (local_attn): LocalAttention(
    (txt): Linear(in_features=4096, out_features=1408, bias=True)
    (img): Linear(in_features=1408, out_features=1408, bias=True)
  )
  (llama_proj): Linear(in_features=5632, out_features=4096, bias=True)
)
batch sizes [[6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]]
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_B.weight
module.local_attn.txt.weight
module.local_attn.txt.bias
module.local_attn.img.weight
module.local_attn.img.bias
module.llama_proj.weight
module.llama_proj.bias
instruction_input prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of the reflection of the man shaving ', '<Img><ImageHere></Img> [refer] the location of horse on the left is ', '<Img><ImageHere></Img> [refer] could you tell me the location for the tallest giraffe among the two ? ', '<Img><ImageHere></Img> [refer] give me the location of a grilled table near the person with a laptop ', '<Img><ImageHere></Img> [refer] give me the location of a man in a white shirt looks nervous as an older woman buttons him up ', '<Img><ImageHere></Img> [refer] could you tell me the location for a silver van with people facing it ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.4812,  1.1013, -0.1640,  ...,  0.3608, -1.0726, -0.5798],
         [-0.6335,  1.1784,  0.0110,  ...,  0.3596, -1.0689, -0.6797],
         [-0.9590,  1.0771,  0.2317,  ...,  0.4505, -1.2043, -0.3323],
         ...,
         [-0.5079,  0.0337,  0.8604,  ...,  1.6529,  0.3925, -0.4757],
         [-0.4096,  0.0934,  0.5697,  ...,  1.4689, -0.1130, -0.4928],
         [ 0.1053,  0.7800,  0.5859,  ...,  1.0887, -0.6589, -0.4046]],

        [[-0.5389, -0.5864,  0.8339,  ...,  0.8609,  0.3799,  1.0597],
         [-0.5440, -0.4789,  0.9793,  ...,  0.5349,  0.7428,  0.9353],
         [-0.1535,  0.4599,  0.1260,  ...,  0.3663, -0.6557,  0.2065],
         ...,
         [ 0.8239, -0.2607, -0.1191,  ...,  0.2161, -0.2867, -0.5790],
         [-0.7233, -0.2126,  1.0644,  ...,  0.3130,  1.2310,  0.7746],
         [-0.7059, -0.1659,  0.7486,  ...,  0.2694,  1.1962,  0.6883]],

        [[-1.1626, -0.3525,  0.1948,  ...,  0.5248,  1.0353, -0.3758],
         [-0.2813, -0.2506,  0.2543,  ...,  0.5406, -0.2634, -0.1468],
         [-0.5292, -0.1540,  0.9126,  ..., -0.0340, -0.4323,  0.8595],
         ...,
         [-1.0088,  0.0733, -0.6834,  ...,  0.0284, -1.2915, -0.0340],
         [-0.5582, -0.5281,  0.1725,  ...,  0.3624,  0.6415,  0.3396],
         [ 0.1349, -0.3910,  0.1393,  ...,  0.3978,  0.6482, -0.0260]],

        [[-1.0162,  0.7240,  0.4400,  ...,  0.5242,  0.6908, -0.2540],
         [-0.7947,  0.0846, -0.1024,  ...,  0.4281,  0.6464, -0.8660],
         [ 0.2117,  1.1388, -0.1783,  ...,  0.5536,  0.0324,  0.2587],
         ...,
         [-0.3863,  0.3049, -0.3728,  ...,  0.2507, -0.0496,  0.1134],
         [ 0.1507,  0.7646,  0.2565,  ...,  0.2744,  1.1769, -0.5262],
         [-0.4328,  0.6493,  0.8835,  ...,  0.1571,  0.3107, -0.3956]],

        [[-0.3583, -0.5942,  0.1520,  ...,  0.7394,  0.8866,  0.5402],
         [ 0.1451,  0.5264, -0.1147,  ...,  0.7576, -1.5614, -1.4481],
         [-0.7316,  1.6027, -0.4961,  ...,  0.5801,  0.4303,  0.2208],
         ...,
         [ 0.6923, -0.4294,  0.8393,  ...,  1.5098, -0.8265, -1.1879],
         [-0.0735,  0.1990,  0.2102,  ...,  1.1821, -1.3388, -0.3244],
         [-0.0466, -0.3027,  0.6561,  ...,  1.3914,  0.8088,  0.0784]],

        [[ 0.8003, -0.2074,  0.5372,  ...,  1.2206,  0.9693,  0.8336],
         [ 0.9447,  0.2000,  0.7393,  ...,  1.4487,  0.6877,  0.6955],
         [ 0.1346, -0.2933,  0.3286,  ...,  0.9326,  0.7684,  0.6102],
         ...,
         [ 0.4906,  0.6494, -0.7954,  ...,  1.0531, -0.5453,  0.1553],
         [ 0.4708,  0.8687, -0.7724,  ...,  0.7278, -0.0266,  0.3489],
         [ 0.8171,  0.8874, -0.4236,  ...,  1.5939, -0.8488, -0.8459]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of the reflection of the man shaving ', '<Img><ImageHere></Img> [refer] the location of horse on the left is ', '<Img><ImageHere></Img> [refer] could you tell me the location for the tallest giraffe among the two ? ', '<Img><ImageHere></Img> [refer] give me the location of a grilled table near the person with a laptop ', '<Img><ImageHere></Img> [refer] give me the location of a man in a white shirt looks nervous as an older woman buttons him up ', '<Img><ImageHere></Img> [refer] could you tell me the location for a silver van with people facing it ? ']
processed prompt_list:['from this image, tell me the location of the reflection of the man shaving', 'the location of horse on the left is', 'could you tell me the location for the tallest giraffe among the two ?', 'give me the location of a grilled table near the person with a laptop', 'give me the location of a man in a white shirt looks nervous as an older woman buttons him up', 'could you tell me the location for a silver van with people facing it ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.1576e-04,  1.0095e-03, -4.2414e-04,  ..., -6.1241e-04,
          -3.7534e-04,  2.1578e-04],
         [-7.0914e-04,  1.0180e-03, -4.5321e-04,  ..., -5.2575e-04,
          -4.4196e-04,  2.7604e-04],
         [-6.7874e-04,  9.2512e-04, -5.4501e-04,  ..., -7.1182e-04,
          -4.3788e-04,  6.4471e-04],
         ...,
         [-9.3640e-04,  2.9447e-04, -1.0366e-03,  ..., -5.6222e-04,
          -4.5770e-04,  4.7202e-04],
         [-9.5512e-04,  3.9773e-04, -7.1301e-04,  ..., -6.0577e-04,
          -1.6062e-04,  5.0616e-04],
         [-8.4816e-04,  3.1015e-04, -5.5133e-04,  ..., -7.6634e-04,
          -4.8201e-06,  5.1850e-04]],

        [[-7.2095e-04,  6.3143e-04, -7.4762e-04,  ..., -4.2857e-04,
          -5.6809e-04,  3.5595e-04],
         [-7.6834e-04,  4.0632e-04, -6.1734e-04,  ..., -8.4432e-05,
          -4.4728e-04,  4.1704e-04],
         [-9.2949e-04, -2.1859e-04, -5.5419e-05,  ..., -5.3963e-04,
          -3.4184e-04, -2.4485e-04],
         ...,
         [-7.7183e-04,  1.5197e-04, -6.8650e-04,  ..., -4.0174e-04,
          -5.6473e-04,  9.4441e-04],
         [-8.6048e-04, -5.8683e-05, -7.8204e-05,  ..., -2.3247e-04,
           7.5247e-06,  2.1857e-04],
         [-8.9711e-04,  8.7893e-05, -1.7127e-04,  ..., -1.4441e-04,
          -2.2620e-06,  2.1964e-04]],

        [[-3.6728e-04,  3.6040e-04, -6.3930e-04,  ..., -4.3694e-04,
          -5.4878e-04, -1.9312e-04],
         [-7.4486e-04,  5.4782e-04, -1.0576e-03,  ...,  8.1863e-05,
           5.3878e-04,  6.5586e-04],
         [-6.9229e-04, -5.9503e-04, -7.8860e-04,  ..., -7.1565e-04,
          -8.5583e-05, -2.9039e-05],
         ...,
         [-4.7084e-04, -2.8537e-04, -1.8690e-04,  ..., -1.8538e-05,
           2.3769e-04,  7.5431e-04],
         [-4.1998e-04,  4.9115e-06, -8.4753e-04,  ..., -5.5127e-05,
          -3.1599e-04,  4.3582e-04],
         [-5.4268e-04,  1.8930e-04, -8.1734e-04,  ..., -7.4346e-05,
          -3.7694e-04,  2.5998e-04]],

        [[-1.0473e-03, -1.6947e-04, -1.5566e-03,  ..., -1.5364e-04,
           6.5788e-04,  4.8270e-04],
         [-9.1004e-04,  2.8216e-05, -1.3727e-03,  ..., -6.2351e-04,
           7.6868e-04,  4.5621e-04],
         [-8.1499e-04,  9.0194e-04, -7.0368e-04,  ..., -3.8122e-04,
          -6.8983e-04,  4.8680e-04],
         ...,
         [-4.1891e-04, -5.0289e-05, -9.2175e-04,  ..., -5.1350e-04,
           3.5680e-04,  3.0986e-04],
         [-1.0360e-03, -2.8521e-05, -9.5457e-04,  ..., -5.7615e-06,
           1.4104e-04,  7.0891e-04],
         [-1.1578e-03, -8.2765e-05, -1.3956e-03,  ..., -5.4730e-05,
           5.3416e-04,  5.4558e-04]],

        [[-8.2988e-04,  2.6765e-04, -7.4980e-04,  ..., -1.1053e-04,
          -9.6882e-05,  4.8715e-04],
         [-4.0503e-04,  1.3866e-04, -9.4061e-04,  ..., -1.7821e-04,
          -7.4001e-04,  1.0778e-03],
         [-4.3274e-04,  3.6616e-04, -7.3470e-04,  ..., -1.4896e-04,
          -5.3783e-04,  1.9164e-04],
         ...,
         [-6.2510e-04,  7.5439e-04, -7.2682e-04,  ...,  4.7274e-04,
          -2.6073e-04,  2.0429e-04],
         [-8.7236e-04,  2.5899e-04, -5.9000e-04,  ...,  5.3032e-05,
          -1.0245e-03,  1.9889e-04],
         [-9.2366e-04,  4.0017e-04, -1.0408e-03,  ..., -1.0939e-04,
          -2.0889e-04,  8.1367e-04]],

        [[-5.1470e-04, -3.5635e-04, -8.2950e-04,  ...,  1.2179e-04,
           1.7806e-04, -2.2839e-04],
         [-5.5094e-04, -3.3550e-04, -7.8536e-04,  ...,  4.4577e-05,
          -8.2926e-05, -2.5886e-04],
         [-6.0142e-04, -5.3348e-04, -3.4370e-04,  ...,  2.1170e-05,
           1.2874e-04, -3.1567e-04],
         ...,
         [-5.1390e-04,  5.0241e-04, -1.2855e-03,  ..., -3.6304e-04,
          -6.1879e-04,  3.1179e-04],
         [-7.1707e-04,  3.5086e-04, -1.2777e-03,  ..., -3.7053e-04,
          -5.7404e-04,  3.9837e-04],
         [-1.0083e-03,  1.0571e-04, -7.9877e-04,  ..., -3.2166e-04,
          -3.5992e-04, -3.3314e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
Train: data epoch: [0]  [   0/1000]  eta: 1:39:28  lr: 0.000001  loss: 5.8901  time: 5.9689  data: 0.0000  max mem: 35155
instruction_input prompt:['<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.0072, -0.8540, -0.3112,  ...,  0.0160, -0.0249,  0.5517],
         [ 0.1578, -0.8838, -0.8007,  ..., -0.0116, -0.2357,  1.1149],
         [-1.0127, -0.5538, -0.9328,  ..., -0.5298,  0.5198, -0.4236],
         ...,
         [ 0.0598, -0.0988,  0.0224,  ...,  0.2432, -0.0871,  0.0467],
         [-0.5071, -0.3615,  0.1697,  ...,  0.2068, -0.6001, -0.1309],
         [-0.4937, -0.1796,  0.0404,  ...,  0.2960, -0.5441, -0.0783]],

        [[ 0.4401, -0.7276, -0.3153,  ...,  0.0765,  1.3197,  0.1580],
         [ 0.1629, -0.8329, -0.3377,  ..., -0.2973, -0.3934, -0.4419],
         [ 0.5066,  1.1089, -0.2938,  ..., -1.8192, -0.5430,  0.0894],
         ...,
         [ 0.0585, -0.1751,  0.0331,  ...,  0.1752, -0.0797,  0.0396],
         [-0.5950, -0.0679,  0.1212,  ...,  0.7782, -0.1259,  0.0093],
         [-0.0993, -0.1429,  0.2625,  ...,  0.6546, -0.1540, -0.1155]],

        [[ 0.4460,  0.1430, -1.2890,  ...,  0.0116, -0.5153,  1.7715],
         [ 0.3305,  0.3038, -2.0351,  ..., -0.3928, -0.7201,  1.6277],
         [ 1.5524,  0.2606, -0.7943,  ..., -0.8423, -0.0669,  1.7553],
         ...,
         [ 0.0517, -0.1975,  0.0384,  ...,  0.1814, -0.1080,  0.0082],
         [ 0.0175,  0.1173,  0.3915,  ...,  0.8090, -0.1153,  0.2686],
         [-0.0214,  0.1409,  0.4296,  ...,  0.8741, -0.1275,  0.2853]],

        [[ 0.1693, -0.7756,  0.3742,  ...,  1.1794,  0.1671,  1.3689],
         [-0.2552,  0.6080,  0.5430,  ...,  0.5792,  0.1744,  0.0217],
         [ 1.2343,  0.8205, -1.2789,  ...,  0.4494, -1.3081,  1.6396],
         ...,
         [ 0.0238, -0.1746,  0.0221,  ...,  0.2820, -0.0461,  0.0276],
         [ 0.0610, -0.5995, -0.2266,  ..., -0.1353, -0.2451,  0.2788],
         [ 0.0399, -0.5747, -0.2118,  ..., -0.1042, -0.2120,  0.2674]],

        [[ 0.1698, -1.0182, -0.4932,  ...,  1.0495, -0.1449,  1.2370],
         [-0.4133,  0.2124,  0.0754,  ...,  0.2276, -0.4544, -0.4311],
         [ 0.7090,  0.2775, -1.1247,  ...,  0.1755, -0.9665,  1.3560],
         ...,
         [ 0.0313, -0.1362, -0.0330,  ...,  0.1825, -0.0913,  0.0313],
         [ 0.3533, -0.4798,  0.2528,  ...,  0.8019, -0.0851, -0.0838],
         [ 0.3553, -0.4503,  0.2489,  ...,  0.8307, -0.0565, -0.0231]],

        [[-0.2588, -0.2975,  0.1648,  ...,  0.6094, -0.6933,  1.7788],
         [-0.4391, -0.9765, -0.2609,  ...,  0.2997, -0.1659,  1.9507],
         [-0.8239,  0.2128,  0.5261,  ...,  0.3171, -0.4343,  1.2993],
         ...,
         [-0.7715, -0.2136,  0.5297,  ...,  0.3225, -0.4884,  0.7304],
         [-1.1000, -0.6813,  0.5108,  ...,  0.4434, -0.9113,  1.7337],
         [-0.3799, -0.4695,  0.5308,  ...,  0.6982, -0.5945,  1.7550]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ']
processed prompt_list:['A photo of', 'Briefly describe this image.', 'Present a short description of this image.', 'Provide a concise depiction of this image.', 'Present a short description of this image.', 'Briefly describe the content of the image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-8.0584e-04, -1.5531e-04, -6.8198e-04,  ...,  2.4678e-04,
           1.8699e-04,  5.3391e-04],
         [-5.4971e-04, -4.4385e-04, -8.4119e-04,  ...,  2.6987e-04,
           4.7827e-04,  8.1318e-04],
         [-1.9294e-04,  6.5407e-04, -3.9498e-04,  ..., -2.4761e-04,
          -3.8541e-04, -2.2153e-04],
         ...,
         [ 5.9800e-04, -1.0538e-03,  1.1329e-03,  ..., -2.8111e-04,
           2.0056e-05, -7.6986e-04],
         [-6.7412e-04,  8.3327e-04, -5.3445e-04,  ...,  9.8695e-05,
           4.3374e-04, -4.8041e-05],
         [-6.4812e-04,  8.8380e-04, -5.7352e-04,  ...,  2.7702e-04,
           4.1577e-04, -4.9357e-05]],

        [[-7.4479e-04, -4.3422e-04, -2.4516e-04,  ..., -5.4188e-04,
          -2.6521e-04,  3.1128e-04],
         [-1.4587e-03,  1.6314e-04, -1.3130e-04,  ..., -9.2923e-04,
          -4.7433e-05,  1.4823e-04],
         [-1.2593e-03, -5.6092e-04, -4.1484e-04,  ..., -5.9911e-04,
          -1.0902e-04,  7.4519e-04],
         ...,
         [ 5.9866e-04, -1.0600e-03,  1.1177e-03,  ..., -2.6807e-04,
           1.9374e-05, -7.4690e-04],
         [-6.4516e-04,  9.8632e-04, -9.9585e-04,  ...,  3.6260e-04,
           3.1543e-04,  9.4284e-05],
         [-4.0757e-04,  5.3683e-05, -1.0103e-03,  ...,  3.2091e-04,
           8.5370e-04,  1.6534e-04]],

        [[-8.4227e-04,  1.1083e-04, -1.3971e-03,  ...,  6.0639e-04,
           2.0424e-04,  5.9637e-04],
         [-1.0664e-03,  4.7870e-05, -1.1722e-03,  ...,  7.4445e-04,
           6.6385e-04,  7.7354e-04],
         [-5.4615e-04, -6.6115e-04, -8.6655e-04,  ..., -1.2447e-04,
           7.9035e-04,  4.5126e-04],
         ...,
         [ 5.6033e-04, -1.0440e-03,  1.1462e-03,  ..., -3.0004e-04,
           7.9861e-06, -7.7045e-04],
         [-5.3614e-04,  5.0955e-04, -8.6950e-04,  ...,  5.4564e-04,
           3.2173e-04,  6.1164e-04],
         [-5.1566e-04,  5.2990e-04, -8.7842e-04,  ...,  5.7406e-04,
           3.2905e-04,  6.2534e-04]],

        [[-8.3586e-04, -3.6144e-05, -5.8638e-04,  ..., -6.0206e-04,
          -1.1143e-04, -5.7688e-04],
         [-1.1525e-03,  7.4082e-04, -9.6373e-04,  ...,  3.1800e-04,
           5.9474e-04,  3.0472e-04],
         [-1.1481e-03, -2.9679e-04, -1.0453e-03,  ..., -8.3122e-05,
           1.8076e-04,  3.4480e-05],
         ...,
         [ 5.7731e-04, -1.0405e-03,  1.1414e-03,  ..., -2.9455e-04,
           1.5992e-05, -7.9192e-04],
         [-6.1015e-04,  6.7800e-04, -7.8570e-04,  ...,  6.4526e-04,
           2.2264e-04,  2.2003e-04],
         [-6.1380e-04,  6.8780e-04, -7.6417e-04,  ...,  6.6361e-04,
           2.3753e-04,  1.9306e-04]],

        [[-9.2035e-04,  3.7501e-04, -5.9257e-04,  ..., -3.4137e-04,
          -1.0246e-04, -4.6828e-04],
         [-7.7101e-04,  5.5473e-04, -9.9633e-04,  ...,  1.1325e-04,
           4.6940e-04,  2.8687e-04],
         [-8.7728e-04,  1.1904e-04, -7.0717e-04,  ..., -1.9053e-05,
           3.0676e-04,  7.8840e-05],
         ...,
         [ 5.6655e-04, -1.0516e-03,  1.1331e-03,  ..., -2.8588e-04,
           1.9511e-05, -7.6455e-04],
         [-5.0774e-04,  8.8486e-04, -8.8058e-04,  ...,  2.7192e-04,
           1.4985e-04,  2.2145e-04],
         [-5.1388e-04,  8.8670e-04, -8.8765e-04,  ...,  3.0134e-04,
           1.5518e-04,  2.1538e-04]],

        [[-7.0173e-04, -7.4395e-05, -8.3875e-04,  ..., -2.2432e-04,
           3.6300e-04,  3.6561e-04],
         [-7.7264e-04, -1.1144e-04, -6.6520e-04,  ..., -6.9051e-04,
           2.6383e-04, -4.2948e-05],
         [-5.4896e-04,  3.1499e-04, -1.0045e-03,  ..., -6.1758e-04,
          -6.1901e-04, -2.5733e-04],
         ...,
         [-4.2514e-04,  1.3953e-04, -8.8991e-04,  ..., -4.8983e-04,
          -4.7002e-04, -1.6901e-04],
         [-5.0502e-04, -1.0386e-04, -9.5191e-04,  ..., -4.7977e-04,
           2.0713e-04,  4.8477e-04],
         [-7.2655e-04, -7.2631e-05, -8.7205e-04,  ..., -3.3570e-04,
           2.6057e-04,  4.9736e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] A short image description: ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 4.5439e-01, -3.4748e-01,  8.6073e-01,  ...,  1.6789e+00,
          -3.4923e-01,  1.2840e-01],
         [-5.1216e-03, -4.7669e-01, -1.2988e-01,  ...,  6.4321e-01,
           5.9136e-02, -2.6536e-01],
         [ 8.7678e-01,  1.4292e+00, -1.0931e+00,  ..., -2.6190e-02,
          -1.1566e+00,  1.3617e+00],
         ...,
         [ 3.1870e-02, -1.6046e-01,  6.5145e-03,  ...,  1.8039e-01,
          -6.6562e-02, -1.2760e-04],
         [ 3.5536e-02, -1.3323e-01,  4.6885e-01,  ...,  3.0952e-01,
          -2.2895e-01,  2.2610e-01],
         [-1.2130e-02, -1.2929e-01,  4.2817e-01,  ...,  2.8616e-01,
          -1.5650e-01,  2.2914e-01]],

        [[ 1.2823e+00,  3.0238e-01, -8.1426e-01,  ..., -1.9437e-01,
          -1.0181e+00,  2.3327e+00],
         [ 4.8444e-01, -3.6913e-01, -7.7236e-01,  ..., -1.0477e+00,
          -1.1014e+00,  1.7193e+00],
         [ 1.0700e+00,  4.1194e-01, -4.2273e-01,  ...,  2.4290e-01,
          -7.6786e-01,  2.2127e+00],
         ...,
         [ 1.5652e-01,  2.8933e-01,  2.8671e-01,  ...,  2.8753e-01,
          -4.6116e-01,  2.8356e-01],
         [ 8.5800e-02,  3.0370e-01,  4.0271e-01,  ...,  3.6828e-01,
          -5.2812e-01,  3.9923e-01],
         [ 2.7108e-01,  3.0021e-02,  1.5449e-01,  ...,  5.2970e-01,
          -2.1353e-01, -5.1543e-03]],

        [[ 1.6563e+00,  1.3439e+00, -9.6568e-01,  ..., -1.3814e+00,
          -7.8666e-01,  1.3604e+00],
         [ 1.4839e+00,  1.1489e+00, -7.2154e-01,  ..., -9.9109e-01,
          -6.7772e-01,  1.0728e+00],
         [ 9.8699e-01,  1.8490e+00,  4.1280e-01,  ..., -1.7581e+00,
           1.4083e-02, -2.6249e-01],
         ...,
         [ 1.0721e+00,  1.6942e+00,  3.6670e-02,  ..., -1.4825e+00,
          -5.5248e-01,  1.5306e+00],
         [-4.7965e-02,  1.1243e-02,  4.8683e-02,  ..., -5.0201e-01,
          -1.0813e-01, -1.9285e-01],
         [ 2.5673e-03, -1.7277e-01, -6.2679e-02,  ..., -1.6734e-01,
          -2.0156e-01, -1.4237e-01]],

        [[ 5.8940e-01,  2.6479e-01,  2.9712e-02,  ...,  6.0673e-01,
           2.6585e-01,  3.0445e-01],
         [ 1.3428e-01, -9.6806e-02, -4.9406e-01,  ..., -8.7828e-02,
          -5.1384e-01,  1.2871e+00],
         [ 1.5077e+00,  5.3812e-01, -9.9116e-01,  ...,  3.0415e-01,
          -1.0965e+00,  8.0071e-01],
         ...,
         [ 2.2085e-02, -1.5670e-01,  4.3104e-02,  ...,  2.2434e-01,
          -5.3481e-02,  3.4373e-03],
         [-9.3709e-02, -3.7680e-01, -4.2288e-01,  ...,  7.9684e-01,
          -8.9477e-01,  9.6357e-02],
         [-9.4621e-02, -3.5131e-01, -4.1156e-01,  ...,  8.2581e-01,
          -8.6396e-01,  8.4920e-02]],

        [[ 8.1733e-01, -4.8065e-01,  3.4367e-01,  ...,  9.8573e-01,
          -2.9216e-01,  1.8950e+00],
         [-5.0028e-01, -2.8646e-01,  2.5562e-01,  ...,  5.3546e-02,
           8.0119e-02, -3.5152e-01],
         [ 5.3982e-01,  1.3913e+00, -1.3812e+00,  ..., -8.7293e-02,
          -1.2365e+00,  2.0020e+00],
         ...,
         [ 1.7952e-02, -1.4424e-01,  1.1030e-02,  ...,  2.3545e-01,
          -6.2489e-02,  4.6246e-04],
         [ 8.4022e-03,  1.9347e-01,  3.1276e-01,  ...,  5.8273e-01,
          -6.7599e-01,  1.8061e-01],
         [ 3.6758e-02,  1.8165e-01,  3.0255e-01,  ...,  6.1379e-01,
          -6.5620e-01,  1.6284e-01]],

        [[ 4.7966e-01, -5.8942e-01,  3.9340e-01,  ...,  8.0009e-01,
           7.8972e-02,  7.9948e-01],
         [ 6.3254e-01, -5.2770e-01, -2.6060e-01,  ...,  3.5061e-01,
          -6.1318e-01,  4.7517e-02],
         [-2.1962e-01, -1.6722e-01, -9.6455e-01,  ...,  6.2066e-01,
           1.4490e-01, -2.0427e-01],
         ...,
         [ 4.0156e-02, -1.1793e-01, -3.8063e-03,  ...,  2.0312e-01,
          -1.1304e-01,  2.4454e-02],
         [-4.0891e-01, -5.0975e-01,  2.8454e-01,  ...,  4.5966e-01,
           1.9664e-01,  3.2664e-01],
         [ 5.1742e-02, -1.1319e-01,  2.4912e-01,  ...,  5.6421e-01,
          -1.6393e-01, -5.9091e-02]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] A short image description: ']
processed prompt_list:['A short image caption:', 'Provide a concise depiction of this image.', 'Use a few words to illustrate what is happening in the picture.', 'Using language, provide a short account of the image.', 'Write a short description for the image.', 'A short image description:']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-3.2688e-04, -2.2684e-04, -8.3315e-04,  ..., -5.3481e-04,
          -1.1442e-05,  1.2371e-04],
         [-6.9220e-04,  4.3239e-04, -1.2792e-03,  ...,  2.5886e-04,
           4.0777e-04,  4.4052e-04],
         [-8.7246e-04, -6.8236e-04, -7.3455e-04,  ..., -1.0337e-04,
           9.4154e-05,  2.0854e-04],
         ...,
         [ 5.6665e-04, -1.0804e-03,  1.1257e-03,  ..., -2.7529e-04,
           7.9603e-06, -7.8829e-04],
         [-6.9239e-04,  1.1128e-03, -5.0788e-04,  ..., -1.5348e-04,
           4.5010e-04,  2.3147e-04],
         [-6.5860e-04,  1.0851e-03, -4.9217e-04,  ..., -1.1537e-04,
           4.5698e-04,  2.0792e-04]],

        [[-9.5080e-04,  1.6509e-04, -5.4359e-04,  ..., -6.2876e-04,
          -3.6692e-06,  5.0100e-04],
         [-1.1659e-03, -3.0149e-04, -6.4301e-04,  ..., -6.9592e-04,
          -7.7516e-05,  5.2003e-04],
         [-7.1583e-04, -1.7177e-04, -8.8736e-04,  ..., -9.7552e-04,
           8.8641e-05,  1.4230e-04],
         ...,
         [-6.0628e-04,  6.5442e-04, -7.1590e-04,  ..., -9.7888e-05,
           2.8145e-04,  2.6715e-04],
         [-7.2402e-04,  7.6361e-04, -8.6568e-04,  ..., -6.5343e-05,
           3.2386e-04,  3.1002e-04],
         [-1.5524e-04,  2.8737e-05, -1.0061e-03,  ...,  4.0511e-04,
           9.8424e-04,  1.3504e-04]],

        [[-6.9877e-04,  2.4584e-04, -4.3834e-04,  ...,  2.2554e-05,
          -1.8952e-04,  6.0789e-04],
         [-7.1785e-04,  2.5747e-04, -8.6860e-05,  ..., -1.3364e-04,
          -2.9695e-04,  6.3410e-04],
         [-1.1171e-03, -4.3138e-04,  3.3433e-04,  ..., -7.0520e-04,
           3.1321e-04,  5.5553e-05],
         ...,
         [-9.8097e-04,  1.6597e-04,  6.4843e-05,  ..., -2.8524e-04,
          -1.5771e-04,  3.6427e-04],
         [-7.4384e-04,  6.0351e-04, -6.4997e-04,  ...,  4.1245e-04,
           1.7731e-04,  1.6451e-04],
         [-8.0648e-04,  6.8802e-04, -5.7619e-04,  ...,  4.3854e-04,
           2.0411e-04,  2.2590e-04]],

        [[-9.3178e-04,  3.7158e-04, -9.0335e-04,  ..., -2.0818e-04,
           3.6684e-04,  4.1447e-04],
         [-8.1894e-04,  2.1968e-04, -7.4587e-04,  ..., -1.7176e-04,
           1.6014e-04,  1.0790e-03],
         [-1.0601e-03,  4.2047e-04, -9.7704e-04,  ...,  3.2902e-04,
           4.3480e-04,  6.6664e-04],
         ...,
         [ 5.7515e-04, -1.0425e-03,  1.1371e-03,  ..., -2.8663e-04,
           9.3928e-06, -7.7742e-04],
         [-8.8460e-04,  7.9391e-04, -6.6618e-04,  ...,  9.7339e-05,
           3.4330e-04,  2.2257e-04],
         [-8.5824e-04,  7.9748e-04, -6.6267e-04,  ...,  1.2484e-04,
           3.4700e-04,  2.1017e-04]],

        [[-8.8869e-04, -1.4189e-04, -7.5739e-04,  ..., -2.6499e-04,
           3.6585e-04, -3.9368e-04],
         [-8.7527e-04,  6.4421e-04, -1.0754e-03,  ...,  1.2647e-04,
           5.9334e-04,  4.3431e-04],
         [-9.4906e-04, -7.3178e-05, -9.6905e-04,  ..., -1.0602e-04,
           7.3488e-04, -2.5392e-04],
         ...,
         [ 5.6186e-04, -1.0427e-03,  1.1426e-03,  ..., -2.9437e-04,
           1.4671e-05, -7.7822e-04],
         [-7.7673e-04,  5.5881e-04, -8.1472e-04,  ...,  2.6564e-04,
           3.1525e-04,  2.4261e-04],
         [-7.4754e-04,  5.7098e-04, -8.0734e-04,  ...,  3.0566e-04,
           3.1136e-04,  2.3055e-04]],

        [[-6.5171e-04, -1.3884e-04, -1.0708e-03,  ..., -2.8883e-04,
          -6.8019e-04,  4.1794e-04],
         [-7.7912e-04, -4.9263e-04, -5.5768e-04,  ...,  9.1232e-05,
          -3.2547e-04,  5.2563e-04],
         [-6.1084e-04, -1.9641e-04, -7.5317e-04,  ...,  2.0346e-04,
          -3.7897e-04,  6.0684e-05],
         ...,
         [ 5.6101e-04, -1.0409e-03,  1.1239e-03,  ..., -2.8734e-04,
           1.2486e-05, -7.8117e-04],
         [-7.2864e-04,  5.0404e-04, -7.1052e-04,  ..., -1.1009e-04,
           2.7968e-04,  4.8711e-04],
         [-3.2475e-04, -5.3581e-05, -8.2781e-04,  ...,  1.7854e-04,
           8.9295e-04,  1.2327e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 4.8755e-01, -9.7985e-01, -3.3800e-02,  ...,  1.5004e+00,
           1.7034e-02,  5.9772e-01],
         [-5.2384e-02, -1.8276e-01, -2.8472e-01,  ...,  3.5078e-01,
          -3.9564e-01, -2.9236e-01],
         [ 8.4927e-01, -1.0606e+00, -3.9328e-01,  ...,  4.3610e-01,
          -7.7397e-01,  6.5798e-01],
         ...,
         [ 2.5026e-02, -1.9189e-01,  2.1720e-04,  ...,  2.0143e-01,
          -5.6226e-02,  1.7947e-02],
         [-2.0449e-01,  2.6332e-01,  2.5584e-01,  ...,  5.2984e-01,
          -3.9604e-01,  2.2147e-01],
         [-2.1100e-01,  2.5250e-01,  2.3554e-01,  ...,  5.1495e-01,
          -3.6130e-01,  1.6817e-01]],

        [[ 6.2599e-01, -6.7413e-01,  3.3431e-01,  ...,  6.4552e-01,
           4.9783e-01,  8.2286e-01],
         [ 8.9290e-01, -7.2542e-01,  4.0837e-01,  ...,  8.3242e-01,
           7.0349e-01,  6.3897e-01],
         [ 1.4338e-01, -6.4070e-01,  2.1482e-01,  ..., -1.4212e-02,
          -8.5124e-01, -4.4025e-01],
         ...,
         [-7.6514e-01,  1.6689e-01,  7.6919e-01,  ...,  3.0044e-01,
          -1.1519e+00,  7.5887e-02],
         [-2.4016e-01,  7.0685e-02,  9.3116e-01,  ...,  2.9442e-01,
          -4.1304e-01,  9.5476e-01],
         [-6.1689e-02,  1.6766e-01,  1.4654e-01,  ...,  6.0690e-01,
          -5.4268e-01,  3.5923e-02]],

        [[-3.3180e-01,  6.5344e-01,  4.2685e-02,  ...,  6.2036e-01,
          -8.1926e-02,  3.5275e-01],
         [-3.1099e-01,  7.2671e-01,  4.7914e-02,  ...,  5.3040e-01,
          -5.7843e-02,  4.7498e-01],
         [ 4.8880e-01, -2.4555e-01, -2.0236e-01,  ...,  1.4949e+00,
           7.7484e-01,  4.3520e-01],
         ...,
         [ 4.9164e-01, -1.7297e-01, -4.0004e-01,  ...,  1.7406e+00,
           1.4122e-01,  3.3873e-01],
         [-1.6072e-01, -1.3180e-01, -1.1140e-01,  ...,  9.7351e-01,
          -5.5166e-02, -3.6086e-01],
         [-5.6801e-02, -5.4269e-01,  6.3980e-02,  ...,  4.9273e-01,
          -1.0251e-01, -4.7227e-02]],

        [[ 6.5294e-01,  5.3974e-01, -7.8415e-01,  ..., -4.3996e-01,
           6.5153e-01,  1.5463e-01],
         [ 8.5010e-01,  3.9659e-01, -1.7113e+00,  ..., -1.1577e+00,
          -4.9605e-01,  6.0602e-01],
         [ 9.1491e-01,  7.9842e-01, -7.8105e-01,  ..., -1.6709e+00,
          -8.7590e-01,  2.4072e-01],
         ...,
         [ 2.0054e-03, -1.8620e-01,  7.7331e-04,  ...,  2.0492e-01,
          -6.7014e-02,  2.2283e-02],
         [ 2.2279e-02, -8.1784e-02,  1.3851e-01,  ...,  4.1561e-01,
          -2.1355e-01, -8.5618e-02],
         [ 3.8420e-02, -9.2509e-02,  1.3666e-01,  ...,  4.3473e-01,
          -1.6767e-01, -1.0496e-01]],

        [[ 7.5426e-01, -2.9154e-01, -1.2094e+00,  ...,  4.3854e-01,
          -1.0172e+00,  1.3618e+00],
         [-4.7028e-01,  5.1490e-01,  3.9843e-02,  ...,  5.9914e-01,
          -2.6386e-01, -2.4837e-02],
         [ 9.8038e-01, -3.8843e-01, -9.7339e-01,  ..., -6.7122e-01,
          -6.1838e-01,  9.9943e-01],
         ...,
         [ 6.6269e-01, -4.3430e-01, -8.3845e-01,  ...,  2.0536e-01,
          -1.0783e+00,  2.1005e+00],
         [ 4.4280e-01, -4.9121e-01,  2.8834e-01,  ...,  7.5324e-02,
          -1.6856e-01,  4.7677e-01],
         [-9.5533e-02, -5.1165e-02,  3.2459e-01,  ...,  4.7219e-01,
          -1.3915e-02, -1.7303e-01]],

        [[ 5.1194e-02, -1.2219e+00,  1.1209e+00,  ...,  5.9137e-01,
          -2.8952e-01,  9.4487e-01],
         [-3.2918e-01, -9.3416e-02, -2.6691e-01,  ...,  4.7731e-01,
           1.6742e-02, -5.6037e-02],
         [ 1.8839e+00,  4.5299e-01, -3.0240e-01,  ...,  5.7014e-01,
           1.1210e-01,  1.5057e+00],
         ...,
         [ 1.0895e-02, -1.4995e-01, -3.9414e-03,  ...,  1.8247e-01,
          -7.5852e-02,  1.5527e-02],
         [-4.2260e-01, -3.8258e-01,  4.0071e-01,  ...,  9.1286e-01,
           3.8651e-02, -3.7223e-03],
         [-4.3515e-01, -3.7967e-01,  3.4166e-01,  ...,  9.5082e-01,
           2.5052e-02, -3.2507e-02]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ']
processed prompt_list:['Could you use a few words to describe what you perceive in the photo?', 'Using language, provide a short account of the image.', 'Provide a description of what is presented in the photo.', 'Write a description for the photo.', 'Provide a description of what is presented in the photo.', 'Could you use a few words to describe what you perceive in the photo?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-8.7366e-04,  6.4548e-04, -8.7604e-04,  ..., -3.0464e-04,
           1.5149e-04, -6.2821e-05],
         [-6.8052e-04,  4.6756e-04, -1.3410e-03,  ...,  3.8428e-05,
           1.6323e-04,  2.1629e-04],
         [-1.0255e-03,  6.9756e-05, -4.9847e-04,  ..., -2.8617e-04,
           5.5995e-04,  2.5168e-05],
         ...,
         [ 5.6128e-04, -1.0647e-03,  1.1302e-03,  ..., -2.8633e-04,
           1.0438e-05, -7.7811e-04],
         [-6.3039e-04,  7.5060e-04, -6.0768e-04,  ...,  1.8611e-04,
           6.4033e-04,  2.5414e-04],
         [-6.1993e-04,  7.5575e-04, -5.8870e-04,  ...,  2.3318e-04,
           6.3933e-04,  2.4963e-04]],

        [[-1.4039e-03, -2.1201e-04, -8.3853e-04,  ..., -1.2088e-04,
           7.3716e-04,  7.2431e-04],
         [-1.4894e-03, -3.1334e-04, -6.8568e-04,  ..., -3.8685e-04,
           6.2429e-04,  7.2422e-04],
         [-1.1015e-03,  3.3749e-04, -8.6653e-04,  ..., -3.9099e-04,
          -9.8595e-04, -8.2819e-05],
         ...,
         [-1.0202e-03,  3.8390e-04, -6.4707e-04,  ..., -7.4728e-04,
          -7.4632e-04, -1.4948e-04],
         [-1.5429e-03,  9.5120e-05, -3.3566e-04,  ..., -9.3356e-04,
          -6.4784e-05, -2.2294e-06],
         [-7.5308e-04,  5.5004e-04, -9.0656e-04,  ..., -2.1377e-04,
           6.4060e-04,  3.9275e-04]],

        [[-7.0566e-04,  5.1057e-04, -7.1042e-04,  ..., -1.7784e-04,
           3.4379e-04,  3.2214e-04],
         [-6.4345e-04,  4.6855e-04, -7.3054e-04,  ..., -1.9251e-04,
           3.2196e-04,  3.0983e-04],
         [-6.6052e-04,  2.0532e-04, -1.1390e-03,  ..., -5.2048e-06,
           4.8460e-04,  4.4098e-04],
         ...,
         [-4.1800e-04,  1.4950e-04, -1.3664e-03,  ..., -2.0654e-05,
           4.7998e-04,  5.7531e-04],
         [-4.8250e-04,  6.5567e-04, -1.0343e-03,  ...,  6.9742e-05,
           2.5643e-04,  3.4278e-04],
         [-3.4745e-04,  1.0076e-04, -8.5355e-04,  ...,  2.4675e-04,
           9.4142e-04,  1.2765e-04]],

        [[-3.5055e-04,  4.5873e-04, -7.6749e-04,  ..., -2.6435e-04,
          -4.9461e-05,  2.9778e-04],
         [-6.2228e-04,  3.3526e-04, -6.5618e-04,  ...,  2.0727e-04,
           2.4595e-04,  9.5467e-04],
         [-3.8195e-04, -3.8999e-04, -1.7832e-04,  ..., -8.0269e-04,
           6.6032e-04,  7.6036e-05],
         ...,
         [ 5.7778e-04, -1.0371e-03,  1.1236e-03,  ..., -2.9688e-04,
           1.2216e-05, -7.6112e-04],
         [-6.4677e-04,  5.2263e-04, -6.1029e-04,  ...,  3.8001e-04,
           1.5281e-04, -5.0433e-05],
         [-6.3002e-04,  5.5233e-04, -6.5513e-04,  ...,  4.4765e-04,
           1.5597e-04, -5.2817e-05]],

        [[-8.8053e-04,  2.0807e-04, -1.0415e-03,  ...,  5.6711e-04,
           3.9058e-04,  8.5521e-04],
         [-1.2276e-03,  2.5583e-04, -8.3709e-04,  ...,  3.3564e-04,
           3.5560e-04,  1.1966e-04],
         [-3.1514e-04, -2.5259e-04, -2.0126e-04,  ..., -2.6008e-05,
          -4.4239e-04, -2.7909e-04],
         ...,
         [-5.7060e-04, -1.0048e-04, -4.4325e-04,  ...,  3.5842e-04,
          -3.9593e-04,  4.5615e-04],
         [-4.1306e-04,  9.1396e-04, -1.0531e-03,  ...,  5.2844e-04,
           4.3300e-04,  3.1502e-04],
         [-3.1901e-04,  8.5517e-05, -9.5275e-04,  ...,  3.2424e-04,
           9.6607e-04, -2.2627e-05]],

        [[-5.6301e-04, -9.9216e-05, -3.7835e-04,  ..., -1.1764e-03,
          -2.3048e-04, -4.5929e-05],
         [-7.7486e-04,  2.8546e-04, -1.2189e-03,  ...,  3.6010e-04,
           4.6991e-04,  3.2254e-04],
         [-7.9870e-04, -3.1130e-04, -6.3121e-04,  ..., -7.0204e-04,
           2.4631e-05,  6.2355e-04],
         ...,
         [ 5.8032e-04, -1.0402e-03,  1.1445e-03,  ..., -2.8732e-04,
           1.5602e-05, -7.7993e-04],
         [-6.4471e-04,  9.9317e-04, -5.9343e-04,  ..., -2.2408e-04,
           1.1341e-04, -6.2726e-05],
         [-6.2849e-04,  1.0073e-03, -5.8434e-04,  ..., -1.8525e-04,
           1.1915e-04, -6.9720e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the drink on the table? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the person riding? ', '<Img><ImageHere></Img> [vqa] is her hair dyed? ', '<Img><ImageHere></Img> [vqa] what number of clouds are in the sky? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this photo indoors? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the man weighing? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-4.5281e-01,  5.3307e-01,  9.0226e-01,  ...,  1.4381e+00,
           7.3393e-01,  6.1029e-01],
         [-3.2940e-01,  1.2904e+00,  6.1570e-01,  ...,  1.2647e+00,
           1.8568e-01,  1.2231e+00],
         [-6.9588e-01,  2.1897e-01, -9.3955e-02,  ...,  1.2117e+00,
          -1.1299e+00, -1.2086e-01],
         ...,
         [-4.5050e-01,  6.7848e-01,  5.9481e-01,  ...,  1.2916e+00,
          -1.5197e+00,  6.3088e-01],
         [-3.6658e-01,  4.9909e-01,  9.9420e-01,  ...,  1.3543e+00,
           5.6888e-01, -3.7696e-02],
         [-3.1455e-01,  3.4761e-01,  1.2834e+00,  ...,  1.1979e+00,
           6.1649e-01,  4.9229e-02]],

        [[-3.6427e-01, -3.7328e-01,  7.3067e-01,  ...,  1.3516e+00,
           8.5273e-01,  8.2594e-01],
         [-4.6503e-01, -3.6290e-01,  6.1925e-01,  ...,  1.2788e+00,
           9.2447e-01,  7.8728e-01],
         [ 9.8754e-03, -1.1258e+00,  2.8134e-03,  ...,  1.4777e-01,
          -3.7344e-01,  2.8135e-02],
         ...,
         [-8.9054e-01, -7.7846e-01,  2.9693e-01,  ...,  8.5328e-01,
          -1.0617e+00,  4.9230e-01],
         [-3.9146e-01, -4.1230e-01,  1.8887e-01,  ...,  9.7926e-01,
          -8.4982e-01,  9.8479e-02],
         [-5.7686e-01, -4.7919e-01,  7.2691e-01,  ...,  1.4043e+00,
           9.1999e-01,  1.0391e+00]],

        [[-1.0868e-01,  8.1980e-01,  2.6019e-01,  ...,  1.5047e+00,
          -3.5834e-01, -3.9106e-01],
         [-3.2144e-01,  1.1740e+00,  8.8323e-01,  ..., -1.9284e-01,
          -3.0722e-01,  1.2472e-01],
         [-1.7033e-01,  1.4695e+00,  8.1223e-01,  ...,  8.6461e-02,
          -2.7843e-01, -7.8491e-02],
         ...,
         [ 3.0593e-01,  1.1892e+00,  8.2561e-01,  ...,  2.0550e-01,
          -2.9214e-01, -6.4957e-02],
         [-7.7864e-02, -5.4598e-01,  7.4674e-01,  ...,  3.6881e-01,
           8.4896e-01,  4.7520e-01],
         [ 9.9639e-01,  9.2182e-01, -1.2235e-01,  ...,  4.1829e-01,
          -5.5840e-01, -3.0958e-01]],

        [[-4.1484e-01, -3.4511e-01, -4.2236e-01,  ...,  2.2592e-01,
           4.8743e-01,  1.0059e+00],
         [-4.2983e-01, -7.5937e-01, -4.5835e-01,  ...,  3.0769e-01,
           4.4938e-01,  1.0155e+00],
         [-3.0667e-01,  4.5361e-01,  2.7626e-01,  ...,  3.1984e-01,
          -6.1905e-01,  3.2689e-01],
         ...,
         [-2.6021e-01, -3.8341e-01, -8.4960e-01,  ...,  9.3322e-01,
          -1.9642e-01,  1.7340e-02],
         [-2.1852e-01, -3.2889e-01, -1.2626e-01,  ...,  9.4338e-01,
           7.3310e-01,  1.1894e+00],
         [-6.4013e-01, -1.8071e-01, -3.9115e-01,  ...,  7.0451e-01,
           7.7417e-01,  1.3984e+00]],

        [[-4.4366e-02,  5.7090e-03,  2.5034e-02,  ..., -2.8627e-01,
           1.2971e+00,  5.3875e-01],
         [-7.2716e-02, -1.0505e-01, -4.5134e-02,  ..., -2.8829e-01,
           7.3180e-01,  9.3872e-01],
         [-7.6274e-02,  1.2856e+00, -5.4808e-01,  ...,  8.7533e-01,
          -1.2727e+00,  1.4596e+00],
         ...,
         [-1.2116e-01,  2.5938e-01,  9.3909e-02,  ...,  4.5830e-01,
           1.5196e-01, -3.7193e-01],
         [-3.3147e-01,  1.5868e+00, -3.8920e-01,  ...,  9.4298e-01,
          -7.8241e-01,  1.5993e+00],
         [-3.7134e-01,  1.1243e+00, -4.1808e-01,  ..., -3.3911e-01,
          -8.3514e-01,  5.0391e-01]],

        [[-1.1644e-02, -1.6364e-01,  1.3546e+00,  ...,  1.0167e+00,
           9.3897e-01,  1.2299e+00],
         [ 1.9100e-03,  2.4541e-01,  4.9031e-01,  ...,  8.7016e-01,
           1.3707e+00,  7.3117e-01],
         [-1.0341e-01, -2.8171e-01,  1.0107e+00,  ...,  1.1948e+00,
          -1.0753e+00,  7.6596e-01],
         ...,
         [ 4.2716e-01,  2.1297e-01,  7.3046e-03,  ...,  1.2884e-01,
           2.6801e-01, -1.4363e+00],
         [ 1.6736e-01, -8.3915e-03,  1.1093e+00,  ...,  1.3473e+00,
          -1.1506e+00,  8.2297e-01],
         [-5.6084e-01, -1.1941e+00,  2.6349e+00,  ...,  1.5616e+00,
          -1.4955e+00,  3.1793e-02]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the drink on the table? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the person riding? ', '<Img><ImageHere></Img> [vqa] is her hair dyed? ', '<Img><ImageHere></Img> [vqa] what number of clouds are in the sky? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this photo indoors? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the man weighing? ']
processed prompt_list:['Based on the image, respond to this question with a short answer: what is the drink on the table?', 'Based on the image, respond to this question with a short answer: what is the person riding?', 'is her hair dyed?', 'what number of clouds are in the sky?', 'Based on the image, respond to this question with a short answer: is this photo indoors?', 'Based on the image, respond to this question with a short answer: what is the man weighing?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-9.5857e-04,  4.4427e-05, -7.3894e-04,  ..., -4.4784e-04,
           4.5880e-04,  4.1664e-04],
         [-1.1109e-03,  1.4230e-04, -7.1935e-04,  ..., -4.7703e-04,
           3.7322e-04,  3.6965e-04],
         [-3.5093e-04,  6.7234e-04, -6.6424e-04,  ..., -1.3950e-05,
          -2.0296e-04,  4.6711e-04],
         ...,
         [-1.1900e-03,  7.2653e-04, -7.6108e-05,  ..., -2.7119e-04,
          -5.0125e-04,  5.3282e-04],
         [-8.2848e-04,  1.4367e-04, -6.2184e-04,  ..., -5.3470e-04,
           3.7663e-04,  5.5137e-04],
         [-8.5266e-04,  6.1398e-05, -8.2786e-04,  ..., -4.7783e-04,
           3.2279e-05,  6.8289e-04]],

        [[-6.8780e-04, -9.3381e-05, -1.1414e-03,  ...,  1.9411e-04,
           5.8837e-05,  4.3135e-04],
         [-5.6341e-04, -6.4325e-05, -1.1410e-03,  ...,  2.0281e-04,
           1.4358e-04,  4.2694e-04],
         [-3.1700e-04,  2.0568e-04, -9.5363e-04,  ..., -2.2358e-06,
          -2.6588e-04,  8.5641e-05],
         ...,
         [-5.7555e-04, -3.6121e-05, -7.4054e-04,  ..., -1.9109e-04,
          -5.0217e-05,  4.8697e-05],
         [-7.7367e-04, -5.5972e-04, -8.3193e-04,  ..., -1.0232e-04,
          -1.6249e-04,  1.3002e-04],
         [-5.6628e-04, -9.9419e-05, -1.0235e-03,  ..., -2.5285e-05,
           9.2246e-05,  2.5872e-04]],

        [[-2.2808e-04,  4.4905e-04, -9.4459e-04,  ..., -5.3374e-04,
          -6.7749e-04, -3.0980e-04],
         [-4.8751e-04,  2.2797e-04, -8.2288e-04,  ..., -1.2640e-03,
          -4.6287e-04, -1.9196e-04],
         [-4.2429e-04,  2.6518e-04, -9.4032e-04,  ..., -1.1439e-03,
          -4.4938e-04, -3.4354e-04],
         ...,
         [-4.1340e-04,  4.5533e-04, -9.1781e-04,  ..., -8.7921e-04,
          -9.0447e-04,  4.1101e-04],
         [-9.3990e-04, -4.5990e-05, -9.4894e-04,  ..., -7.1682e-04,
          -3.0157e-04, -1.1285e-04],
         [-8.8029e-04,  1.1690e-04, -8.2299e-04,  ..., -7.6286e-04,
          -4.8182e-04, -1.8728e-04]],

        [[-3.1533e-04,  2.9203e-04, -7.9617e-04,  ..., -1.6159e-04,
           2.3376e-04,  4.7472e-05],
         [-4.7266e-04,  3.6699e-04, -6.8639e-04,  ..., -4.7623e-04,
           1.4589e-04, -1.4661e-04],
         [-4.9019e-04,  3.1346e-04, -7.4220e-04,  ..., -5.6546e-04,
           1.6971e-04,  3.5895e-04],
         ...,
         [-8.4931e-04,  9.0006e-04, -5.6110e-04,  ..., -3.6385e-04,
          -6.3866e-04,  7.8994e-04],
         [-1.0001e-04,  4.0812e-04, -8.6618e-04,  ..., -3.3772e-04,
           2.8064e-04,  1.2486e-04],
         [-2.5023e-04,  2.4404e-04, -7.4402e-04,  ..., -5.1425e-04,
           3.2634e-04,  1.0785e-05]],

        [[-5.2878e-04,  4.7928e-05, -1.0044e-03,  ...,  1.7582e-04,
           2.5609e-05,  1.9420e-04],
         [-5.9567e-04, -8.0565e-05, -8.4561e-04,  ...,  5.6437e-05,
           1.0872e-04,  6.0380e-05],
         [-6.6869e-04,  4.7551e-04, -3.4404e-04,  ...,  1.2863e-04,
          -7.2473e-05, -1.5086e-04],
         ...,
         [-9.4051e-04,  2.8474e-04, -7.0371e-04,  ..., -2.4543e-04,
          -3.4442e-04,  2.0325e-04],
         [-7.2546e-04, -4.0238e-05, -1.1852e-04,  ..., -9.0802e-05,
          -2.5282e-04, -2.6089e-04],
         [-4.0019e-04,  6.0601e-05, -5.3819e-04,  ...,  1.7435e-04,
          -1.0309e-04, -4.2093e-04]],

        [[-1.3099e-03,  2.8494e-04, -1.0097e-03,  ..., -4.2573e-04,
          -2.1406e-04, -1.7641e-04],
         [-1.2734e-03,  4.6151e-04, -5.0190e-04,  ..., -6.5725e-04,
          -1.9568e-05, -2.9469e-04],
         [-1.0736e-03,  4.2063e-04, -1.9751e-04,  ..., -6.1459e-04,
          -1.9372e-04, -4.8014e-04],
         ...,
         [-9.2424e-04,  6.2364e-04, -3.3329e-04,  ..., -3.0523e-05,
          -4.6498e-04,  3.7910e-04],
         [-6.6815e-04,  6.3050e-04, -2.3864e-04,  ..., -1.0647e-03,
           4.1879e-05, -3.2216e-04],
         [-5.5529e-04,  2.5786e-04,  1.5658e-04,  ..., -1.3193e-03,
          -3.4723e-04, -2.1163e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [identify] what is it in {<0><80><26><98>} ', '<Img><ImageHere></Img> [identify] this {<50><36><77><90>} is ', '<Img><ImageHere></Img> [identify] describe this object in {<31><0><84><53>} ', '<Img><ImageHere></Img> [identify] this {<63><15><78><68>} is ', '<Img><ImageHere></Img> [identify] the object in {<1><18><20><58>} is ', '<Img><ImageHere></Img> [identify] this {<53><63><85><100>} is ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.3369e-01,  1.5391e+00,  6.4574e-01,  ..., -8.7727e-01,
          -2.1197e-01,  7.5405e-02],
         [-1.0819e-01,  6.0727e-01,  3.8381e-01,  ...,  5.0125e-01,
          -1.2445e+00,  1.6406e-02],
         [ 3.7003e-01,  2.0467e+00,  6.2868e-02,  ...,  4.7089e-01,
          -1.2702e-02, -2.7793e-01],
         ...,
         [-5.6379e-01,  1.2357e+00, -3.9873e-02,  ...,  8.5281e-01,
          -3.1906e-01,  1.1133e-01],
         [-6.8862e-01,  9.0525e-01,  9.1855e-01,  ...,  9.4786e-01,
          -5.3685e-02, -7.3440e-01],
         [-9.5730e-01,  1.3232e+00, -1.3640e-01,  ...,  5.9353e-01,
           7.1652e-01, -2.6027e-01]],

        [[ 3.0723e-01,  9.9142e-01, -3.8350e-01,  ...,  6.9405e-02,
          -1.0317e-01,  4.4779e-01],
         [ 3.0419e-01,  1.3909e+00, -1.7784e-01,  ..., -6.3413e-02,
          -3.1200e-01,  7.5835e-01],
         [ 5.5297e-01,  9.6336e-01,  7.1975e-01,  ..., -2.1922e-01,
          -6.8604e-01,  4.8078e-01],
         ...,
         [-7.7721e-01, -8.0686e-01,  1.4711e-01,  ...,  7.1734e-01,
           4.9603e-01,  7.2193e-01],
         [-6.9215e-01,  4.1140e-02, -4.9295e-01,  ...,  1.1788e+00,
          -4.5812e-01,  1.1956e+00],
         [ 2.6640e-01, -1.4221e-01,  9.8396e-01,  ...,  1.1700e+00,
           6.2185e-01,  9.7202e-01]],

        [[ 1.2621e+00, -9.0982e-02,  5.0255e-01,  ...,  7.9231e-01,
           5.2231e-01,  2.5923e-01],
         [-7.5245e-01,  8.5605e-01,  9.4047e-01,  ..., -5.0753e-01,
           3.8244e-01, -8.6137e-01],
         [-3.7278e-01,  1.1543e+00,  3.1746e-01,  ..., -3.4174e-01,
          -2.1802e-01, -7.7751e-01],
         ...,
         [-6.4726e-01,  1.9339e+00,  7.6214e-01,  ...,  1.3057e+00,
          -8.5848e-01, -5.7016e-01],
         [ 3.4777e-01, -5.6385e-02,  4.7807e-04,  ...,  1.0435e+00,
           2.2374e-01, -2.6228e-01],
         [-1.1155e+00,  6.1084e-01,  4.7556e-01,  ...,  9.1849e-01,
          -1.3865e+00, -1.0301e+00]],

        [[-4.2031e-01, -5.6892e-01,  7.0219e-01,  ...,  9.2924e-01,
           3.5771e-01,  8.7269e-01],
         [-1.3222e-01, -2.7382e-01,  1.2814e+00,  ...,  6.2528e-01,
          -1.5667e-02,  6.7729e-01],
         [-5.1858e-01,  2.5854e-01,  4.0305e-01,  ...,  7.4449e-01,
          -1.3220e-01, -3.9405e-01],
         ...,
         [-9.3318e-01,  7.1400e-01,  6.3245e-01,  ...,  1.0852e+00,
          -1.0422e+00, -4.0337e-01],
         [ 1.7958e-01,  2.9088e-01,  5.0124e-01,  ...,  5.8266e-01,
          -1.1009e-01,  4.1768e-01],
         [ 7.5920e-02, -1.1553e-01,  9.0620e-01,  ...,  1.0730e+00,
           3.8278e-01,  1.0783e+00]],

        [[ 8.1903e-01,  6.0499e-01,  1.5177e+00,  ...,  1.0755e+00,
           6.5509e-01,  5.7187e-01],
         [-1.0914e+00,  2.5958e-01,  6.3667e-01,  ..., -4.3979e-01,
           1.7678e-01, -4.3153e-01],
         [ 1.1544e-01,  3.3338e-01,  1.7927e-01,  ...,  4.6304e-01,
          -2.0351e-01, -5.8028e-01],
         ...,
         [-1.0949e+00, -1.3246e+00,  1.0060e+00,  ...,  4.6668e-03,
          -1.2245e+00,  8.2698e-01],
         [ 2.8083e-01, -4.5987e-01, -6.1008e-03,  ...,  5.1516e-01,
           1.3499e-01,  1.2355e-02],
         [ 7.8524e-01,  3.6633e-01,  7.4235e-01,  ...,  7.3843e-01,
           7.0068e-01,  1.2546e-01]],

        [[-3.1534e-01, -9.9981e-01,  3.0054e-01,  ...,  5.6898e-01,
           3.8433e-01,  1.6478e+00],
         [-5.1633e-02, -9.0465e-01,  4.1764e-01,  ...,  1.9039e-02,
           7.6091e-02,  1.2378e+00],
         [ 4.1866e-02, -1.3949e+00,  2.3298e-01,  ...,  1.2211e+00,
          -5.0937e-01,  1.4000e-01],
         ...,
         [ 4.2932e-01, -5.3602e-02,  2.6982e-01,  ...,  4.2518e-01,
           9.4543e-02,  3.5138e-01],
         [-1.0227e+00, -7.8633e-01,  6.2227e-01,  ...,  9.5050e-01,
           5.8077e-01,  1.1891e+00],
         [-5.6885e-01, -9.6678e-01,  6.5661e-01,  ...,  1.0233e+00,
           7.8065e-01,  1.4621e+00]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [identify] what is it in {<0><80><26><98>} ', '<Img><ImageHere></Img> [identify] this {<50><36><77><90>} is ', '<Img><ImageHere></Img> [identify] describe this object in {<31><0><84><53>} ', '<Img><ImageHere></Img> [identify] this {<63><15><78><68>} is ', '<Img><ImageHere></Img> [identify] the object in {<1><18><20><58>} is ', '<Img><ImageHere></Img> [identify] this {<53><63><85><100>} is ']
processed prompt_list:['what is it in {<0><80><26><98>}', 'this {<50><36><77><90>} is', 'describe this object in {<31><0><84><53>}', 'this {<63><15><78><68>} is', 'the object in {<1><18><20><58>} is', 'this {<53><63><85><100>} is']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-9.2802e-04,  5.2686e-04, -5.8272e-04,  ..., -1.2088e-03,
          -2.2791e-04, -6.2245e-05],
         [-7.9006e-04, -1.8394e-05, -4.3003e-04,  ..., -9.8698e-05,
          -2.8359e-04, -9.8698e-05],
         [-1.1265e-03, -7.3207e-05, -1.1160e-03,  ..., -6.5094e-04,
          -6.2330e-04,  3.1808e-05],
         ...,
         [-6.5609e-04,  1.8389e-04, -6.0328e-04,  ..., -5.0432e-04,
          -1.0581e-03,  8.1404e-04],
         [-1.6002e-04,  3.7541e-04, -5.9875e-04,  ..., -9.9221e-04,
          -4.8660e-04,  4.3504e-04],
         [-9.2308e-04,  1.7954e-04, -8.0061e-04,  ..., -7.9060e-04,
          -9.4357e-04,  6.9517e-05]],

        [[-9.6078e-04,  6.0097e-04, -1.2972e-03,  ...,  5.5760e-04,
          -1.4107e-04,  3.3218e-04],
         [-7.9874e-04,  4.0651e-04, -1.0180e-03,  ...,  5.8657e-04,
           7.3499e-05,  6.1083e-04],
         [-6.1617e-04,  6.8510e-05, -5.8046e-04,  ..., -2.0190e-04,
          -2.3011e-04,  9.5759e-04],
         ...,
         [-7.4384e-04, -2.1499e-04, -6.1963e-04,  ..., -5.1921e-04,
          -2.4176e-04,  2.4699e-04],
         [-1.1727e-03,  3.2698e-04,  3.0665e-04,  ..., -1.0521e-04,
          -1.2427e-03,  8.3553e-04],
         [-7.2741e-04,  2.9676e-05, -1.1566e-03,  ...,  1.3235e-04,
          -1.7461e-04,  6.8231e-04]],

        [[-1.0699e-03,  2.6628e-04, -1.3314e-03,  ..., -8.0645e-04,
          -1.6381e-04,  8.5174e-05],
         [-4.7422e-04,  9.3652e-04, -5.6964e-04,  ..., -1.0191e-03,
          -5.1811e-04,  4.9140e-04],
         [-7.1229e-04,  8.3116e-04, -4.7812e-04,  ..., -1.0197e-03,
          -9.0659e-04,  6.6693e-04],
         ...,
         [-1.4114e-03,  2.8176e-04, -5.7921e-04,  ..., -9.3587e-04,
           7.9178e-04,  1.7512e-04],
         [-1.3611e-03,  5.1973e-05, -9.4484e-04,  ..., -9.2620e-04,
          -1.1595e-04, -3.7427e-05],
         [-9.2209e-04,  5.5716e-04, -1.0201e-03,  ..., -1.3427e-03,
          -6.2377e-04, -3.0356e-04]],

        [[-8.9850e-04,  3.7016e-04, -1.0205e-03,  ..., -9.6531e-05,
          -3.9041e-04,  5.3405e-04],
         [-6.1348e-04,  2.2815e-04, -8.0924e-04,  ..., -7.7923e-04,
          -3.8676e-04,  5.0220e-05],
         [-7.7819e-04,  2.8912e-04, -5.6674e-04,  ..., -3.9029e-04,
          -1.0366e-03,  4.5335e-04],
         ...,
         [-3.9205e-04,  5.5837e-04, -3.4862e-04,  ..., -7.9364e-04,
          -1.0175e-03, -1.8242e-04],
         [-7.3956e-04,  7.8972e-04, -9.3735e-04,  ..., -2.2454e-04,
           3.2272e-04,  3.5282e-04],
         [-9.5343e-04,  4.1099e-04, -1.1077e-03,  ...,  1.8538e-04,
          -2.8241e-04,  7.4007e-04]],

        [[-1.8146e-04,  9.3629e-04, -1.5885e-03,  ..., -6.1850e-04,
          -4.4748e-04,  4.9404e-04],
         [-6.0724e-04,  4.4167e-04, -1.2164e-03,  ..., -5.9111e-04,
          -3.8451e-04,  3.5296e-04],
         [-7.3339e-04,  2.8105e-04, -1.1013e-03,  ..., -1.0259e-04,
          -3.0276e-04,  4.0797e-04],
         ...,
         [-7.5108e-04, -3.5092e-04, -7.9937e-04,  ..., -2.0498e-04,
          -5.4789e-04, -6.3526e-05],
         [-1.1629e-03,  1.9879e-04, -8.9086e-04,  ..., -3.6582e-04,
          -3.5007e-05,  1.5993e-04],
         [-7.2958e-04,  3.1335e-04, -1.1245e-03,  ..., -3.0743e-04,
          -5.6745e-04,  5.0677e-04]],

        [[-5.5723e-04,  2.7767e-04, -8.1706e-04,  ..., -1.5668e-04,
          -4.3946e-04,  9.8266e-05],
         [-5.1160e-04,  4.0490e-04, -6.0782e-04,  ..., -2.8105e-04,
          -5.0874e-04,  3.0903e-05],
         [-3.2485e-04,  1.6290e-04, -9.1972e-04,  ..., -7.5503e-04,
          -4.2539e-04,  9.2164e-04],
         ...,
         [-4.5139e-04,  4.5592e-04, -7.0497e-04,  ..., -3.0517e-06,
           2.8027e-04,  2.4667e-04],
         [-7.7434e-04,  2.9995e-05, -7.4295e-04,  ..., -5.4728e-05,
          -7.1048e-05,  9.7149e-05],
         [-4.3494e-04,  1.8528e-04, -9.7487e-04,  ..., -2.9574e-05,
          -2.8238e-05,  9.6323e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] where in the image is the red van, on the right side or on the left? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is the man to the left or to the right of the dark vehicle? ', '<Img><ImageHere></Img> [vqa] which color is the shirt that the girl is wearing? ', '<Img><ImageHere></Img> [vqa] who is wearing a scarf? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is the woman sleeping? ', '<Img><ImageHere></Img> [vqa] what is located in between the windows? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.6505, -1.3493,  1.0585,  ...,  0.8725,  0.0310,  0.1940],
         [-0.6798, -1.3147,  1.0090,  ...,  0.9608,  0.1959,  0.2806],
         [-0.4390,  0.1192,  0.9931,  ...,  0.1793, -1.2814,  0.1706],
         ...,
         [-0.9697, -0.7806,  0.9875,  ...,  0.9549,  0.1933,  0.9316],
         [-0.3245,  0.0195,  0.4028,  ...,  0.6502, -0.9884,  0.1975],
         [-0.6085, -1.6002,  0.8517,  ...,  0.0649,  0.2556,  0.6075]],

        [[-0.4442, -0.6224,  0.6615,  ...,  1.2614, -0.0871,  0.8507],
         [-0.1110, -0.5852,  0.5933,  ...,  1.0133, -0.2750,  1.0150],
         [-0.6070, -0.8678,  0.5563,  ...,  1.1536, -0.5405,  0.4699],
         ...,
         [ 0.1899,  0.4226,  0.4044,  ...,  1.3559, -1.3705,  0.7349],
         [ 0.2466,  0.1746,  0.8685,  ...,  0.9174,  1.0333,  1.6721],
         [-0.0081, -0.8471,  0.4340,  ...,  1.1214,  0.1375,  1.5568]],

        [[-0.1208, -0.9935,  0.1433,  ...,  0.0719,  0.1985,  1.9290],
         [ 0.0663, -0.7670,  0.8051,  ...,  0.4195,  0.6938,  1.9348],
         [ 0.4030,  0.7999, -0.2645,  ...,  0.4247, -0.2421,  1.3232],
         ...,
         [-0.1789, -0.9882,  0.7309,  ..., -0.2226,  0.1176,  1.1941],
         [ 0.2085, -0.5944, -0.2845,  ..., -0.5882, -1.0517,  1.1815],
         [-0.9218, -0.8551,  0.2691,  ...,  0.0443, -0.8385,  1.1583]],

        [[-0.2949, -1.1791,  0.4462,  ...,  0.4999,  0.0547,  1.6422],
         [ 0.0803, -0.1904,  1.1018,  ...,  0.0719, -0.5294, -0.9707],
         [-0.1041, -0.3485,  1.1471,  ...,  0.4689, -0.8348, -0.8685],
         ...,
         [ 0.3904,  0.3743,  0.0425,  ...,  0.7089, -0.4628,  0.0515],
         [-0.3801, -0.2502,  0.3027,  ..., -0.1205, -1.2068, -0.0116],
         [ 0.3054, -0.2798,  0.6821,  ...,  0.1317,  0.9088,  1.0179]],

        [[ 0.7345,  0.1793,  0.6033,  ...,  0.2767,  0.7607,  0.1997],
         [ 0.6929,  0.0734,  0.5433,  ...,  0.3647,  0.6705,  0.2180],
         [-1.2080,  1.9395, -0.6467,  ...,  1.0629, -1.2498,  0.0224],
         ...,
         [-1.1252,  1.1117,  1.4396,  ...,  1.2570, -1.6347,  0.3047],
         [-1.0123, -0.4317,  1.0788,  ...,  0.3490, -0.9904,  0.3322],
         [-0.9825,  1.0039, -0.1921,  ...,  0.6764, -0.9128,  0.2078]],

        [[-0.7305,  0.1087,  1.6394,  ...,  0.6183, -0.3303,  0.8305],
         [-0.2506,  0.2794,  0.6596,  ...,  0.2649, -0.2707,  0.9582],
         [ 0.1926,  0.6577,  0.4252,  ...,  0.3063, -0.8444,  0.2625],
         ...,
         [-0.1545,  0.4255,  0.3899,  ...,  0.2994, -0.5698,  0.3585],
         [ 0.4482,  0.1675,  0.9040,  ...,  0.7461,  0.1881,  0.7343],
         [ 0.3530, -0.1940,  0.8812,  ...,  0.6084,  0.2366,  0.7397]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] where in the image is the red van, on the right side or on the left? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is the man to the left or to the right of the dark vehicle? ', '<Img><ImageHere></Img> [vqa] which color is the shirt that the girl is wearing? ', '<Img><ImageHere></Img> [vqa] who is wearing a scarf? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is the woman sleeping? ', '<Img><ImageHere></Img> [vqa] what is located in between the windows? ']
processed prompt_list:['where in the image is the red van, on the right side or on the left?', 'Based on the image, respond to this question with a short answer: is the man to the left or to the right of the dark vehicle?', 'which color is the shirt that the girl is wearing?', 'who is wearing a scarf?', 'Based on the image, respond to this question with a short answer: is the woman sleeping?', 'what is located in between the windows?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.8605e-04,  5.0084e-04, -6.7351e-04,  ..., -4.0759e-04,
          -9.7544e-05,  3.4489e-06],
         [-4.8453e-04,  5.6723e-04, -7.5456e-04,  ..., -4.7213e-04,
          -1.3537e-04,  6.7865e-05],
         [-6.5301e-04,  6.1652e-05, -5.6047e-04,  ...,  1.2807e-04,
          -4.5219e-04,  3.5810e-08],
         ...,
         [-8.1991e-04, -3.4020e-04, -3.2276e-04,  ..., -6.8039e-04,
          -4.3002e-05,  2.2708e-04],
         [-5.1452e-04,  3.8398e-04, -9.0590e-04,  ...,  4.9304e-04,
          -5.0498e-04,  3.2766e-04],
         [-1.9590e-04,  4.2426e-04, -4.2594e-04,  ..., -7.0193e-04,
          -3.1038e-04,  2.3756e-04]],

        [[-1.2369e-04,  3.3955e-05, -1.7899e-04,  ..., -4.9380e-04,
           3.8414e-04, -2.9423e-04],
         [-2.3523e-05,  8.0429e-05, -1.6454e-04,  ..., -5.0087e-04,
           2.3998e-04, -3.5284e-04],
         [-4.3099e-04, -6.0638e-05,  3.7356e-04,  ..., -6.8589e-04,
           4.7703e-04, -3.6596e-04],
         ...,
         [-3.9135e-05,  3.5872e-04, -3.2632e-05,  ..., -4.8192e-04,
           3.0646e-04,  2.2952e-05],
         [-5.2838e-04, -4.1727e-06, -6.4845e-04,  ..., -2.4448e-05,
           1.9975e-04, -4.6930e-04],
         [-3.8379e-05,  2.2932e-04, -2.4453e-04,  ..., -3.6335e-04,
           1.4995e-04, -2.9301e-04]],

        [[-8.5970e-04,  9.6473e-05, -6.4252e-04,  ..., -1.5029e-04,
          -2.8300e-04, -4.2581e-04],
         [-1.1064e-03,  9.2810e-05, -1.0134e-03,  ...,  1.7815e-04,
          -4.0350e-04, -1.3669e-05],
         [-8.7344e-04,  5.3853e-04, -9.7549e-04,  ..., -5.8980e-04,
          -4.2235e-04,  1.0454e-03],
         ...,
         [-4.0397e-04,  6.7003e-04, -3.8661e-04,  ..., -6.0964e-04,
           3.6022e-04,  8.4170e-04],
         [-4.6214e-04,  8.2185e-05, -9.5525e-05,  ..., -7.7326e-04,
          -4.0378e-04, -3.0730e-05],
         [-8.5597e-04,  2.7268e-04, -6.7705e-04,  ..., -6.4365e-04,
          -2.3745e-06,  9.4531e-05]],

        [[-2.6350e-04,  2.3119e-04, -9.8843e-04,  ..., -3.9038e-04,
           3.4357e-04,  2.1527e-04],
         [-7.4488e-04,  8.6150e-04, -5.5878e-04,  ..., -5.7925e-04,
          -6.8301e-04, -3.5935e-04],
         [-5.4689e-04,  6.4931e-04, -5.3689e-04,  ..., -6.9123e-04,
          -6.9314e-04, -3.4228e-04],
         ...,
         [-7.0838e-04,  4.9529e-04, -6.6231e-04,  ..., -7.3286e-04,
          -4.8713e-04,  9.3587e-04],
         [-3.9922e-04,  2.5286e-04, -6.7906e-04,  ...,  4.3695e-05,
          -3.0849e-04,  3.2305e-04],
         [-6.2425e-04,  4.0743e-04, -9.4353e-04,  ..., -3.9123e-04,
           6.1413e-05,  5.5230e-04]],

        [[-8.8577e-04,  3.0033e-05, -9.7488e-04,  ..., -6.9756e-04,
           2.5253e-04,  4.4646e-04],
         [-8.9932e-04, -3.1872e-05, -9.1362e-04,  ..., -7.3776e-04,
           1.8456e-04,  4.9136e-04],
         [-6.5844e-04,  3.0707e-04, -4.4714e-04,  ..., -2.6347e-04,
          -2.6800e-04,  7.8899e-04],
         ...,
         [-9.0667e-04,  3.0860e-05,  5.2421e-04,  ..., -3.1205e-04,
          -6.4171e-04, -5.4407e-05],
         [-8.9209e-04,  8.3743e-04, -1.8750e-04,  ...,  9.3486e-04,
          -4.1040e-04, -5.9316e-07],
         [-6.7149e-04, -4.3097e-05, -9.0054e-04,  ..., -3.5879e-04,
           2.1623e-04,  2.0209e-04]],

        [[-1.2400e-03,  2.5722e-04, -5.7682e-04,  ..., -9.1562e-04,
          -4.1894e-04,  2.5290e-04],
         [-1.1322e-03,  3.6315e-04, -8.8030e-04,  ..., -1.0026e-03,
          -4.1329e-04, -2.3615e-04],
         [-3.9119e-04,  5.3460e-04, -3.3599e-04,  ..., -4.2565e-04,
          -8.5179e-04,  5.1821e-04],
         ...,
         [-9.5765e-04,  3.7202e-04, -4.8627e-04,  ..., -1.0426e-03,
          -1.9321e-04, -2.5945e-04],
         [-1.0833e-03,  2.2824e-04, -8.7096e-04,  ..., -2.0951e-04,
          -2.6344e-04,  3.5483e-04],
         [-9.9790e-04,  1.9874e-04, -9.3296e-04,  ..., -1.0086e-04,
          -2.6642e-04,  3.3160e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.2808, -0.2637, -0.5799,  ...,  0.2491, -0.3660,  1.2840],
         [ 0.6672,  0.5334, -1.5899,  ..., -0.4275, -1.3662,  0.5093],
         [ 0.8107,  0.7378, -0.2313,  ..., -0.2395, -1.1974,  0.4570],
         ...,
         [ 0.0495, -0.1670,  0.0491,  ...,  0.1843, -0.0602,  0.0052],
         [ 0.1745, -0.1881,  0.0786,  ...,  0.8908, -0.5518,  0.4799],
         [ 0.1840, -0.2070,  0.0690,  ...,  0.8748, -0.5345,  0.4827]],

        [[ 1.0626,  0.4552, -0.1100,  ...,  0.3377, -0.6083,  1.7568],
         [-0.3015,  0.5841, -0.6475,  ...,  0.4605, -0.5831, -0.5345],
         [ 0.7040,  0.8331, -0.0942,  ...,  0.3765, -0.2320,  1.6091],
         ...,
         [ 0.8568,  0.6859,  0.5961,  ..., -0.1998, -0.4098,  1.1175],
         [ 0.0718, -0.0340, -0.1282,  ...,  0.1177, -0.5197, -0.1749],
         [ 0.0630, -0.0194, -0.1125,  ...,  0.1353, -0.4516, -0.1786]],

        [[ 0.9267, -0.1318,  0.4284,  ...,  0.0622, -0.5446,  2.4009],
         [-0.4554, -0.0553,  0.3309,  ...,  0.8473, -0.7863,  0.1908],
         [ 0.6082,  1.5189, -0.4507,  ..., -0.3341, -0.3672,  2.0495],
         ...,
         [ 1.3028,  0.0366,  1.1178,  ..., -0.7787, -0.7287,  1.1654],
         [ 0.1759,  0.4061,  0.5461,  ...,  0.5028, -0.2462,  0.4761],
         [-0.4262, -0.2960,  0.3453,  ...,  0.4340, -0.0806, -0.2992]],

        [[ 0.4875, -0.8350, -0.1263,  ...,  0.7873,  0.2408,  0.5203],
         [-0.0404, -0.6460, -0.6551,  ...,  0.5037, -0.0725,  1.2194],
         [ 1.1082, -0.1094,  0.2207,  ..., -1.7463, -0.1683,  0.2738],
         ...,
         [ 0.0478, -0.1581,  0.0350,  ...,  0.2079, -0.0950,  0.0366],
         [-0.2229,  0.0790, -0.3868,  ...,  0.4772,  0.0186,  0.5061],
         [-0.2964,  0.0974, -0.2705,  ...,  0.5460,  0.0364,  0.5317]],

        [[-0.1257, -1.0196,  0.4996,  ..., -0.2221, -0.2116,  0.8689],
         [-0.3411,  0.0481, -0.2556,  ...,  0.3462, -0.4838, -0.1342],
         [ 0.8671,  1.1161, -1.3627,  ..., -0.0178, -0.8389,  1.3036],
         ...,
         [ 0.0482, -0.1546, -0.0139,  ...,  0.2035, -0.0875,  0.0369],
         [ 0.1477, -0.2574,  0.5117,  ...,  1.0320,  0.3936,  0.0244],
         [ 0.1295, -0.2687,  0.5275,  ...,  1.0738,  0.4061,  0.0257]],

        [[ 0.2419, -0.5895,  0.7460,  ...,  1.5143,  0.1968,  1.6523],
         [-0.2398, -0.2696, -0.0750,  ...,  0.4563, -0.2139, -0.5016],
         [ 1.2523, -0.7789, -0.1497,  ...,  0.7677, -1.2362,  1.5684],
         ...,
         [ 0.0354, -0.1449,  0.0413,  ...,  0.1576, -0.1083,  0.0259],
         [ 0.2027, -0.4143, -0.2879,  ...,  0.6380,  0.5648,  0.3755],
         [ 0.1881, -0.3968, -0.2951,  ...,  0.7144,  0.5814,  0.3380]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ']
processed prompt_list:['A short image caption:', 'A photo of', 'Can you briefly explain what you see in the image?', 'Could you use a few words to describe what you perceive in the photo?', 'Please provide a short depiction of the picture.', 'Briefly describe the content of the image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.3641e-04,  7.8152e-04, -7.3850e-04,  ..., -3.6835e-05,
           1.3396e-04,  2.1106e-05],
         [-9.4505e-04,  2.6733e-04, -8.1698e-04,  ..., -1.6509e-04,
           3.7373e-04,  7.0986e-04],
         [-5.8974e-04, -6.1567e-06, -6.7967e-04,  ..., -5.5330e-04,
           9.2248e-04,  1.4185e-05],
         ...,
         [ 5.7412e-04, -1.0401e-03,  1.1257e-03,  ..., -2.9129e-04,
           1.4172e-05, -7.5609e-04],
         [-6.2271e-04,  7.3765e-04, -1.0013e-03,  ...,  1.5769e-04,
           2.2776e-04,  1.5176e-04],
         [-6.0929e-04,  7.5461e-04, -9.9728e-04,  ...,  1.9589e-04,
           2.3579e-04,  1.4746e-04]],

        [[-7.4630e-04,  6.1696e-05, -1.0690e-03,  ..., -4.2431e-04,
           1.7955e-04,  2.7677e-04],
         [-1.0174e-03,  3.3382e-04, -8.5657e-04,  ...,  5.0252e-04,
           6.8193e-04,  2.6934e-04],
         [-1.1466e-04,  4.5291e-04, -7.3010e-04,  ..., -5.0138e-04,
          -2.3350e-04, -1.3549e-04],
         ...,
         [-7.0655e-04, -3.2946e-04, -4.2665e-04,  ..., -8.9284e-04,
           9.3143e-05,  1.8164e-04],
         [-2.9876e-04,  1.5328e-04, -9.4361e-04,  ...,  3.1225e-04,
           1.0161e-03,  1.0233e-04],
         [-2.4315e-04,  1.0115e-04, -9.1720e-04,  ...,  3.0210e-04,
           1.0323e-03,  7.7420e-05]],

        [[-4.2682e-04, -1.1094e-04, -7.1114e-04,  ...,  1.4275e-04,
           3.6909e-05,  3.9275e-04],
         [-8.1856e-04,  4.0381e-04, -1.0993e-03,  ...,  3.5645e-04,
           3.0339e-04,  4.4825e-05],
         [-8.2305e-04,  9.4104e-05, -8.4120e-04,  ..., -3.4274e-04,
           2.3562e-04,  8.7058e-05],
         ...,
         [-5.7373e-04, -8.6094e-05, -9.5680e-05,  ..., -4.6367e-04,
           3.9550e-04,  5.3917e-04],
         [-6.1056e-04,  7.5986e-04, -1.0570e-03,  ...,  5.8939e-05,
           3.4702e-04,  4.5220e-04],
         [-2.9291e-04,  7.0011e-05, -1.0534e-03,  ...,  4.1494e-04,
           7.0023e-04,  2.1644e-05]],

        [[-9.9222e-04, -5.6115e-04, -1.3464e-03,  ...,  3.7683e-05,
           2.0770e-04,  5.0513e-04],
         [-1.1478e-03, -5.3262e-04, -1.3149e-03,  ...,  3.3989e-04,
           6.1854e-04,  8.4497e-04],
         [-5.8694e-04, -3.3953e-04, -6.9569e-04,  ..., -7.7547e-04,
           4.9577e-04,  4.5612e-04],
         ...,
         [ 5.7592e-04, -1.0600e-03,  1.1338e-03,  ..., -2.8867e-04,
           4.1071e-06, -8.0088e-04],
         [-7.5593e-04,  8.2949e-04, -4.0952e-04,  ...,  9.7398e-05,
           3.9363e-04,  1.3417e-04],
         [-6.7581e-04,  8.4228e-04, -4.3134e-04,  ...,  2.0025e-04,
           3.4787e-04,  5.5162e-05]],

        [[-1.0535e-03, -2.0793e-04, -2.2040e-04,  ..., -7.8658e-04,
           1.0497e-04,  5.7711e-04],
         [-7.7851e-04,  4.4806e-04, -8.8755e-04,  ..., -2.2710e-06,
           2.9331e-04,  1.9867e-04],
         [-9.5672e-04, -6.6684e-05, -8.2788e-04,  ...,  5.3800e-05,
           5.1582e-04,  4.7216e-04],
         ...,
         [ 5.5880e-04, -1.0601e-03,  1.1619e-03,  ..., -2.8836e-04,
           1.2312e-05, -7.6958e-04],
         [-7.6353e-04,  6.6868e-04, -1.0733e-03,  ...,  5.3475e-04,
           4.0303e-05,  7.4589e-05],
         [-7.5048e-04,  6.7615e-04, -1.0836e-03,  ...,  5.4416e-04,
           6.3672e-05,  6.0277e-05]],

        [[-8.2730e-04, -4.9176e-05, -1.1421e-03,  ..., -3.1006e-04,
          -1.6229e-04,  1.3098e-04],
         [-8.6007e-04,  3.8278e-04, -7.1332e-04,  ...,  6.2261e-04,
           2.9207e-04,  2.7355e-04],
         [-8.8710e-04, -1.1790e-04, -9.8883e-04,  ..., -2.1013e-04,
           5.3815e-04,  5.5622e-04],
         ...,
         [ 5.8047e-04, -1.0250e-03,  1.1298e-03,  ..., -2.8622e-04,
           1.2550e-05, -7.7915e-04],
         [-5.3096e-04,  9.0121e-04, -6.6417e-04,  ...,  5.0204e-04,
           1.2385e-04,  4.8734e-04],
         [-5.0524e-04,  9.0005e-04, -6.7918e-04,  ...,  5.4079e-04,
           1.4219e-04,  4.6756e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] An image that shows  ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.2259,  0.5552, -0.4784,  ...,  1.1745, -0.4435, -0.9602],
         [-0.3263,  0.2992, -0.3173,  ...,  0.4274, -0.2455, -0.9110],
         [-0.6973,  0.2064, -0.0715,  ...,  0.8575, -0.6744, -0.7314],
         ...,
         [-0.2100, -0.3328,  0.9382,  ...,  0.6077, -0.7783, -1.0039],
         [ 0.2743,  0.5002,  0.2657,  ...,  0.2843, -0.3168, -0.0421],
         [ 0.2361,  0.0754,  1.1050,  ..., -0.2686, -0.8157, -0.3155]],

        [[ 0.3942,  0.1474,  0.4979,  ...,  0.9445,  0.9028,  0.1112],
         [ 0.4956,  0.3770,  0.0949,  ...,  0.3840, -0.7328,  0.2504],
         [ 0.8687,  0.0388, -0.0768,  ...,  0.6200, -0.6893,  0.3703],
         ...,
         [-0.7486,  0.9145,  0.4284,  ...,  0.8560, -0.6529, -0.0785],
         [-0.5441,  0.8922,  0.4296,  ...,  0.6860, -0.4516, -0.2442],
         [-0.6113,  0.4816,  0.0831,  ...,  0.9640, -0.9390,  0.1472]],

        [[-0.0197, -0.3491,  0.4893,  ...,  1.0626, -1.0169, -0.8125],
         [ 0.8172, -0.2410,  0.8772,  ...,  1.2328, -1.1325, -0.9883],
         [ 1.1704,  0.2247, -0.6340,  ...,  0.3024, -1.1034, -1.3798],
         ...,
         [ 0.2561,  0.3720,  0.1273,  ...,  0.4460, -0.0230,  0.3405],
         [ 0.4884,  0.8868,  1.0493,  ...,  1.2825,  0.5856, -0.1657],
         [ 0.1961,  0.1881,  1.0028,  ...,  1.3141, -0.1170, -0.0354]],

        [[-0.9322, -0.8538,  0.3676,  ...,  0.5875,  0.1194,  0.4732],
         [ 0.7417, -0.2985, -0.7102,  ...,  0.8076, -1.3528,  0.0718],
         [-0.9368,  1.1983, -0.0706,  ..., -0.0702, -0.9951,  0.4159],
         ...,
         [ 0.1417, -0.0717,  0.3959,  ...,  0.1730, -0.7366,  0.0316],
         [-0.8541, -0.5312,  0.5435,  ...,  0.8209,  0.4675,  0.3962],
         [-0.8298, -0.5813,  0.4486,  ...,  0.7306,  0.4916,  0.3142]],

        [[ 0.8019,  0.1985,  0.1515,  ...,  0.8361, -0.3639,  0.3461],
         [ 0.4843, -0.1706,  0.6091,  ...,  0.5328, -1.1252, -0.3758],
         [-0.2202,  0.4337, -0.2679,  ...,  0.2114, -0.5217, -0.6511],
         ...,
         [ 0.2292,  0.2860, -0.4292,  ...,  0.4263, -0.4815,  0.1506],
         [ 0.6590,  0.8694,  0.1144,  ...,  0.5491,  0.0634, -0.0913],
         [ 0.2089, -0.5102, -0.0916,  ...,  1.0187,  0.0653,  0.6377]],

        [[-0.6494, -0.1886,  0.7201,  ...,  0.0434,  0.3106,  0.1768],
         [-0.5305,  0.0336,  0.2743,  ...,  0.0721, -0.3449, -0.6886],
         [-0.8180, -0.2160,  0.6062,  ...,  0.1945, -0.4663, -1.1094],
         ...,
         [-0.4246, -0.0380,  0.2975,  ..., -0.0437, -1.0611, -0.8219],
         [-0.3968,  0.4874, -0.2007,  ..., -0.0092, -0.4858, -0.4339],
         [-0.4850, -0.1955,  0.6304,  ...,  0.0731,  0.1949,  0.0863]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] An image that shows  ']
processed prompt_list:['Could you use a few words to describe what you perceive in the photo?', 'Could you use a few words to describe what you perceive in the photo?', 'Briefly describe this image.', 'Provide a concise depiction of this image.', 'A short image description:', 'An image that shows']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-9.3817e-04,  8.7987e-04, -8.0422e-04,  ..., -6.2689e-04,
          -7.2230e-04,  4.0452e-04],
         [-8.9580e-04,  8.5777e-04, -6.2095e-04,  ..., -4.5368e-04,
          -7.0470e-04,  2.8015e-04],
         [-8.1936e-04,  6.7104e-04, -8.2080e-04,  ..., -5.6880e-04,
          -9.2160e-04,  9.9540e-05],
         ...,
         [ 2.5824e-04,  2.8012e-04, -6.9958e-04,  ..., -1.3411e-04,
          -1.9335e-05,  1.9820e-04],
         [-4.2332e-04,  8.2131e-04, -6.4596e-04,  ...,  5.7669e-04,
          -6.6078e-04,  7.9169e-04],
         [ 1.6739e-04,  2.7212e-04, -3.1191e-04,  ..., -2.0939e-05,
          -4.2128e-04,  4.6346e-04]],

        [[-6.3002e-04,  3.2904e-04, -1.0394e-03,  ..., -2.9694e-04,
           6.0981e-05,  1.1685e-04],
         [-6.1975e-04,  8.6862e-05, -9.7409e-04,  ..., -3.7123e-04,
          -4.1308e-04,  3.5625e-04],
         [-7.9677e-04,  1.4141e-04, -8.9922e-04,  ..., -3.1690e-04,
          -7.4864e-04,  2.0646e-04],
         ...,
         [-5.6783e-04,  2.3313e-04, -7.7670e-04,  ..., -8.0634e-04,
          -4.1392e-04,  6.0655e-04],
         [-6.0145e-04,  2.2638e-04, -9.4720e-04,  ..., -9.4097e-04,
          -5.5357e-04,  6.0912e-04],
         [-4.0006e-04,  2.5007e-04, -6.4630e-04,  ..., -5.8851e-04,
          -3.1885e-04,  2.1758e-04]],

        [[-4.5243e-04,  8.1572e-04, -9.4848e-04,  ..., -3.8653e-04,
          -6.6092e-04,  4.0882e-04],
         [-3.8138e-04,  7.1354e-04, -1.1480e-03,  ..., -5.2428e-04,
          -6.5714e-04,  4.1221e-04],
         [-5.3894e-05,  7.2880e-04, -7.9151e-04,  ..., -2.0560e-04,
          -4.6845e-04,  2.6748e-04],
         ...,
         [-5.3823e-04,  5.6588e-04, -6.8936e-04,  ..., -1.7448e-04,
           2.3765e-04,  4.4217e-04],
         [-7.2291e-04,  5.4852e-04, -6.9568e-04,  ..., -7.8168e-04,
          -3.2252e-04,  5.8501e-05],
         [-3.3343e-04,  1.7388e-04, -7.3851e-04,  ..., -7.9965e-04,
          -1.4569e-04,  1.4629e-04]],

        [[-3.8465e-04,  4.2964e-04, -7.1360e-04,  ..., -4.1464e-04,
          -1.2508e-04,  4.2868e-04],
         [-3.5661e-04,  3.5709e-04, -8.6760e-04,  ..., -2.5680e-04,
          -2.0713e-04,  5.6696e-04],
         [-5.9328e-04,  4.3886e-04, -3.4405e-04,  ..., -2.0075e-04,
          -8.1019e-04,  9.4762e-04],
         ...,
         [-4.3897e-04,  9.8851e-05, -1.2260e-04,  ..., -5.0086e-04,
           5.4335e-05,  5.3085e-04],
         [-4.7963e-04,  2.4542e-04, -7.0003e-04,  ..., -3.0641e-04,
          -2.2981e-04,  2.8330e-04],
         [-4.2647e-04,  3.0972e-04, -7.7431e-04,  ..., -3.0710e-04,
          -2.1514e-04,  3.7215e-04]],

        [[-8.6798e-04, -5.6858e-04, -3.1239e-04,  ..., -5.6339e-04,
           1.9988e-04, -1.9881e-04],
         [-6.3480e-04,  5.9411e-04, -8.2725e-04,  ..., -2.6833e-04,
          -2.8006e-04, -2.7671e-04],
         [-5.3514e-04,  6.0119e-04, -1.3996e-03,  ..., -6.9884e-04,
          -4.7746e-05,  1.5114e-04],
         ...,
         [-8.4253e-04,  4.4530e-04, -5.6740e-04,  ...,  4.8671e-04,
           2.5871e-04,  1.1442e-04],
         [-9.9813e-04, -1.5290e-04, -7.3838e-04,  ..., -4.4612e-04,
          -2.7155e-06, -4.6084e-04],
         [-1.1272e-03, -6.1046e-04, -5.9721e-04,  ...,  5.0280e-05,
           2.1331e-04, -2.6311e-04]],

        [[-8.9239e-04, -3.5209e-05, -9.2287e-04,  ..., -3.2381e-04,
          -1.7631e-04,  3.4024e-04],
         [-1.0260e-03,  6.6569e-05, -8.0930e-04,  ..., -2.1507e-04,
          -1.4159e-04,  2.2590e-04],
         [-6.7488e-04,  6.5149e-04, -5.2358e-04,  ..., -3.0403e-04,
          -4.5223e-04,  4.1142e-04],
         ...,
         [-9.9741e-04,  1.7267e-04, -3.2128e-04,  ..., -4.7656e-04,
          -5.3777e-04,  2.1434e-04],
         [-6.9458e-04, -2.0769e-05, -7.1266e-04,  ..., -2.0124e-04,
          -1.4665e-04,  2.0088e-04],
         [-8.0751e-04,  6.8424e-05, -9.6806e-04,  ..., -2.8608e-04,
          -2.4356e-04,  4.2495e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.0225, -0.5232,  1.0228,  ...,  1.4494,  0.7666,  1.4900],
         [-0.9485,  0.1335,  0.3208,  ...,  0.2126, -0.1088, -0.4638],
         [ 1.4353,  0.2401, -0.5139,  ...,  0.4392, -0.1858,  1.9162],
         ...,
         [ 0.0220, -0.1410,  0.0330,  ...,  0.1812, -0.0511,  0.0387],
         [-0.1015,  0.1205, -0.2903,  ...,  0.6911, -0.5649,  0.4414],
         [-0.1350,  0.1373, -0.2104,  ...,  0.7163, -0.5384,  0.4599]],

        [[ 0.8538, -1.1470, -0.0815,  ...,  1.1552, -0.1126,  1.9902],
         [ 0.5046, -0.6936, -0.3431,  ...,  0.7616, -0.9025,  1.2501],
         [-0.8881, -1.0216, -0.0327,  ..., -0.1612, -1.2555, -0.0523],
         ...,
         [-1.2738, -0.7790,  0.0877,  ...,  0.5492, -0.0236,  0.5131],
         [-1.5953, -0.4357,  0.4866,  ...,  0.9531, -0.5266, -0.4757],
         [-1.6348, -0.4151,  0.4820,  ...,  0.9433, -0.4681, -0.5738]],

        [[ 0.7482, -0.8012,  0.9113,  ...,  1.4480, -0.9579,  0.1328],
         [-0.1562, -0.2655, -0.1514,  ...,  0.1596, -0.1132,  0.1428],
         [ 1.6129,  0.3710, -0.5841,  ...,  0.0070, -1.0887,  0.5128],
         ...,
         [ 0.0172, -0.1633,  0.0129,  ...,  0.1838, -0.0950,  0.0129],
         [ 0.2865,  0.2302,  0.7768,  ...,  0.8928, -0.3902, -0.0210],
         [ 0.2678,  0.2641,  0.6969,  ...,  0.8960, -0.4287, -0.0607]],

        [[ 0.1860, -0.8295,  0.7151,  ...,  0.5822, -0.0187,  1.5207],
         [-0.2862,  0.0030,  0.5793,  ...,  0.9886, -0.3561,  0.1458],
         [ 1.2700,  0.2396, -1.3425,  ..., -0.2029, -1.2317,  1.1244],
         ...,
         [ 0.0475, -0.1370,  0.0365,  ...,  0.2469, -0.0744,  0.0332],
         [-0.3956, -0.3977,  0.1201,  ..., -0.4279,  0.0376, -0.0226],
         [-0.4138, -0.3777,  0.1638,  ..., -0.3972,  0.1232, -0.0475]],

        [[-0.1667,  0.1875, -0.2144,  ...,  0.5048,  0.0757,  0.3232],
         [-0.3158,  0.2262,  0.0055,  ...,  0.7069, -0.4403, -0.1731],
         [ 0.3785, -0.0801, -0.3098,  ..., -0.4282, -0.8205,  0.5298],
         ...,
         [ 0.4342,  0.6837,  0.2227,  ..., -0.0418, -1.2522,  1.2864],
         [ 0.1794, -0.1420,  0.1713,  ...,  0.6750,  0.0968,  0.5669],
         [ 0.1776, -0.0818,  0.1666,  ...,  0.7121,  0.0429,  0.5709]],

        [[-0.6294,  0.1530,  0.2887,  ...,  0.6228, -0.4108, -0.0376],
         [-0.8048,  0.2392,  0.1600,  ...,  0.5643, -0.6037, -0.2897],
         [ 0.7104, -0.2365, -1.1849,  ..., -0.2552, -1.6466,  2.3291],
         ...,
         [ 0.0479, -0.1435,  0.0095,  ...,  0.1701, -0.1186,  0.0058],
         [ 0.3399,  0.2088, -0.2734,  ...,  0.4394, -0.2632,  0.1549],
         [ 0.3445,  0.2110, -0.2874,  ...,  0.4356, -0.2788,  0.1278]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ']
processed prompt_list:['A photo of', 'Present a short description of this image.', 'Using language, provide a short account of the image.', 'Provide a description of what is presented in the photo.', 'Using language, provide a short account of the image.', 'Write a description for the photo.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.1011e-03,  3.5966e-04, -4.1281e-04,  ..., -5.0433e-04,
           3.3368e-04,  1.4908e-04],
         [-1.1560e-03,  3.7890e-04, -1.2073e-03,  ...,  2.7353e-04,
           3.7343e-04,  1.4842e-04],
         [-1.1126e-03,  2.0027e-04, -1.1088e-03,  ...,  7.9702e-06,
           7.2299e-04,  6.1583e-04],
         ...,
         [ 5.4459e-04, -1.0507e-03,  1.1276e-03,  ..., -2.6807e-04,
           1.2577e-05, -7.6036e-04],
         [-5.0677e-04,  7.6703e-04, -5.8736e-04,  ...,  6.3287e-05,
           5.1910e-04,  3.2858e-05],
         [-4.9960e-04,  7.7974e-04, -6.2190e-04,  ...,  1.0636e-04,
           5.0861e-04,  1.1702e-05]],

        [[-6.4752e-04,  1.9271e-05, -1.2580e-03,  ...,  1.9072e-04,
          -4.7086e-05,  8.5023e-04],
         [-7.4606e-04,  3.2231e-04, -1.1300e-03,  ...,  1.9446e-04,
          -2.4671e-04,  5.9770e-04],
         [-2.1713e-04,  6.1195e-04, -6.7751e-04,  ..., -4.6846e-04,
          -3.4945e-04,  1.4503e-04],
         ...,
         [-3.9180e-04,  2.3247e-04, -7.3037e-04,  ..., -1.3260e-04,
          -1.6797e-04,  3.9036e-04],
         [-3.7958e-04,  3.4823e-04, -4.8489e-04,  ..., -2.1229e-04,
          -2.8959e-04,  1.0435e-04],
         [-3.9431e-04,  3.7899e-04, -4.5656e-04,  ..., -6.7036e-06,
          -2.7652e-04,  1.3479e-04]],

        [[-2.3631e-04, -1.0088e-04, -8.2750e-04,  ...,  1.5230e-04,
          -1.5551e-04,  2.3506e-05],
         [-9.3456e-04,  3.9855e-04, -9.6988e-04,  ...,  1.2756e-04,
          -2.5178e-05,  3.6108e-04],
         [-8.6110e-04, -1.2480e-04, -9.4073e-04,  ...,  3.8192e-04,
           4.1839e-05,  5.8217e-04],
         ...,
         [ 5.8295e-04, -1.0679e-03,  1.1307e-03,  ..., -2.7864e-04,
          -1.7357e-06, -7.9739e-04],
         [-7.3147e-04,  8.3834e-04, -7.2150e-04,  ...,  4.3580e-04,
           1.6648e-04,  1.4760e-04],
         [-6.7637e-04,  8.6637e-04, -7.3005e-04,  ...,  5.1060e-04,
           1.7218e-04,  1.1655e-04]],

        [[-4.1858e-04, -4.8826e-04, -4.6574e-04,  ..., -7.1011e-04,
           2.8087e-04, -5.7027e-04],
         [-6.8582e-04,  4.4194e-04, -9.4752e-04,  ...,  2.4994e-05,
           5.9368e-04,  1.1595e-04],
         [-6.9523e-04, -4.4489e-04, -6.0320e-04,  ...,  1.4818e-04,
           6.0797e-04,  6.1751e-05],
         ...,
         [ 5.8092e-04, -1.0699e-03,  1.1315e-03,  ..., -2.9164e-04,
           2.2922e-05, -8.1357e-04],
         [-4.6472e-04,  6.2406e-04, -6.2549e-04,  ...,  1.7822e-04,
           3.0372e-04,  2.0315e-04],
         [-4.2965e-04,  6.5183e-04, -6.3237e-04,  ...,  2.7227e-04,
           3.3707e-04,  2.2242e-04]],

        [[-5.6556e-04,  5.1480e-04, -6.6709e-04,  ..., -4.8679e-04,
          -1.7970e-04,  4.4033e-04],
         [-1.1094e-03,  4.9172e-04, -1.1862e-03,  ...,  1.8072e-04,
           4.1142e-04,  3.6121e-04],
         [-7.9357e-04, -2.0722e-04, -8.6515e-04,  ..., -5.9267e-04,
           4.3878e-04,  2.6985e-04],
         ...,
         [-1.3555e-03, -1.7495e-04, -8.9507e-04,  ..., -5.3752e-04,
           2.3956e-04,  9.8506e-04],
         [-5.7205e-04,  1.0086e-03, -9.9055e-04,  ...,  5.4077e-04,
          -3.6712e-06,  2.9787e-04],
         [-5.4076e-04,  1.0199e-03, -9.5925e-04,  ...,  6.0996e-04,
          -1.3152e-05,  3.2702e-04]],

        [[-6.1355e-04,  4.3757e-04, -9.2888e-04,  ...,  5.6836e-05,
           3.6765e-04,  3.2485e-04],
         [-6.1918e-04,  2.0802e-04, -7.4843e-04,  ...,  5.9548e-05,
           1.9756e-04,  4.0206e-06],
         [-9.9810e-04, -6.3472e-04, -8.6290e-04,  ..., -2.0363e-04,
           7.3339e-04,  5.9393e-04],
         ...,
         [ 5.9887e-04, -1.0306e-03,  1.1524e-03,  ..., -2.9778e-04,
          -2.8209e-06, -7.7598e-04],
         [-7.2521e-04,  9.4291e-04, -6.9058e-04,  ...,  6.5880e-04,
           1.7348e-04,  5.7865e-04],
         [-7.0427e-04,  9.4994e-04, -6.8388e-04,  ...,  6.8246e-04,
           2.1401e-04,  5.6958e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 4.6631e-01, -2.0968e-01,  1.1489e-01,  ..., -8.2449e-02,
          -4.6280e-01,  9.3251e-01],
         [ 9.0371e-01,  3.4125e-01, -8.1075e-01,  ...,  4.2538e-02,
          -1.5928e+00,  8.4665e-01],
         [ 7.4964e-01,  9.8174e-01, -9.4865e-01,  ..., -5.6773e-02,
          -1.4521e+00,  4.0991e-01],
         ...,
         [ 8.5884e-01,  6.3208e-01, -3.4618e-01,  ..., -1.3553e-01,
          -1.1712e+00,  9.4985e-01],
         [ 2.1752e-01, -1.9722e-01, -2.5278e-01,  ...,  5.9738e-01,
          -1.0496e-01,  2.6766e-01],
         [-5.4623e-02,  6.0912e-01,  3.8978e-01,  ...,  5.3044e-01,
          -4.7791e-01,  1.0829e-01]],

        [[ 1.2351e+00, -1.0436e+00, -7.2688e-01,  ...,  1.7930e-01,
          -1.3100e+00,  2.8730e+00],
         [ 5.7931e-01, -3.0393e-01,  3.6525e-01,  ..., -4.7833e-02,
          -1.6936e+00,  9.5983e-01],
         [ 1.2562e+00,  1.0459e+00, -2.1821e-01,  ..., -1.6246e-01,
          -4.0232e-01,  8.1277e-01],
         ...,
         [ 1.4279e-01,  7.0362e-02,  1.2469e+00,  ...,  2.9130e-01,
          -4.8879e-01,  1.1372e-02],
         [ 9.1617e-02,  1.5640e-01,  3.5495e-01,  ...,  8.9794e-02,
           4.5038e-02, -9.6656e-02],
         [ 6.7524e-02,  1.3475e-01,  3.5246e-01,  ...,  9.7869e-02,
           9.3121e-02, -9.5644e-02]],

        [[ 1.8166e-01, -5.7178e-01,  2.7559e-03,  ...,  5.0812e-01,
           5.2532e-01, -1.2694e-02],
         [ 3.6975e-01,  2.3679e-01, -7.2234e-01,  ...,  3.3505e-02,
          -3.3763e-01,  8.7991e-01],
         [ 6.9092e-01, -7.3720e-01,  4.9493e-02,  ..., -6.9498e-01,
          -8.0197e-01,  7.5591e-01],
         ...,
         [ 2.2323e-02, -1.2972e-01,  4.4989e-03,  ...,  1.9758e-01,
          -8.0406e-02,  1.6183e-02],
         [ 3.3725e-01, -2.5285e-02, -1.1123e-01,  ...,  7.9756e-01,
          -8.3732e-03, -5.1269e-02],
         [ 3.4891e-01, -6.8074e-02, -7.9888e-02,  ...,  7.8787e-01,
          -1.0435e-02, -2.5983e-02]],

        [[ 1.1157e+00, -6.9694e-01, -5.9498e-01,  ...,  1.3167e-01,
           1.3161e-02,  1.4472e+00],
         [ 7.6663e-01, -2.8607e-01, -1.2815e+00,  ..., -4.0030e-02,
          -5.3569e-01,  1.6910e+00],
         [ 8.7182e-01, -2.5403e-01, -1.1783e+00,  ..., -6.4875e-01,
          -6.5874e-02,  1.9773e+00],
         ...,
         [ 2.9780e-02, -1.5247e-01,  3.0152e-02,  ...,  2.1176e-01,
          -6.2194e-02,  3.5318e-02],
         [ 4.8376e-01,  2.3569e-01,  4.2740e-02,  ...,  1.3787e-01,
          -2.9437e-01, -2.2901e-01],
         [ 4.8911e-01,  1.9151e-01,  4.3264e-02,  ...,  1.5737e-01,
          -2.7891e-01, -1.7831e-01]],

        [[ 1.0178e+00,  4.7305e-01,  2.4614e-01,  ..., -3.3985e-01,
          -1.1691e+00,  1.1053e+00],
         [ 7.5280e-01,  5.0607e-01,  1.7768e+00,  ..., -1.3452e-01,
          -3.2192e-01,  1.0935e+00],
         [ 3.5201e-02, -2.0131e-01,  3.2121e-02,  ...,  2.2042e-01,
          -4.4576e-02, -6.8766e-03],
         ...,
         [ 6.8720e-01,  8.8146e-01,  3.7103e-01,  ...,  1.0637e+00,
          -9.2097e-01, -4.1114e-01],
         [ 2.0307e-01, -7.5170e-04,  1.8736e+00,  ..., -1.5813e-03,
          -4.2018e-01,  7.0133e-01],
         [ 2.0236e-01, -1.0249e-01,  1.8423e+00,  ...,  3.0718e-01,
          -2.6085e-01,  4.0608e-01]],

        [[ 5.0140e-01, -1.3358e+00, -3.2905e-03,  ...,  9.3776e-01,
           5.7247e-02,  5.9393e-01],
         [-8.9781e-02, -8.8091e-01, -1.1863e+00,  ...,  1.1855e-01,
          -5.5552e-02,  9.2101e-01],
         [ 8.1244e-01, -3.5794e-01,  2.7525e-01,  ..., -6.5920e-01,
          -6.0029e-01,  1.1705e+00],
         ...,
         [ 2.3706e-02, -1.5284e-01,  2.6309e-02,  ...,  2.2175e-01,
          -5.8811e-02,  2.2820e-02],
         [ 7.4943e-02, -5.7573e-01,  7.2942e-02,  ...,  4.0909e-01,
          -6.0925e-02,  2.4320e-01],
         [ 3.3915e-02, -4.6532e-01,  4.6008e-02,  ...,  4.4777e-01,
          -6.7333e-02,  2.4677e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ']
processed prompt_list:['Summarize this image in a few words.', 'Briefly describe the content of the image.', 'Can you briefly explain what you see in the image?', 'Use a few words to illustrate what is happening in the picture.', 'An image that shows', 'Summarize this image in a few words.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.6181e-04,  4.4034e-04, -7.4757e-04,  ..., -1.4217e-04,
           1.0394e-04, -4.2758e-05],
         [-1.1688e-03, -1.3177e-04, -8.6607e-04,  ..., -2.2988e-04,
           3.2152e-06,  5.3282e-04],
         [-6.7804e-04,  1.0490e-04, -7.4164e-04,  ..., -4.1863e-04,
          -1.8122e-04,  1.9916e-04],
         ...,
         [-3.1532e-04,  3.3674e-04, -8.1199e-04,  ..., -5.6021e-04,
           2.7115e-05,  7.6725e-04],
         [-4.5034e-04,  7.3956e-04, -8.0705e-04,  ...,  3.7905e-04,
           3.7548e-04,  1.0272e-04],
         [-7.9620e-04,  7.5713e-04, -9.9299e-04,  ..., -2.0143e-04,
           4.0668e-04,  3.6022e-04]],

        [[-1.3174e-03,  2.6625e-04, -6.2204e-04,  ..., -6.3395e-04,
           2.8530e-04, -1.6539e-04],
         [-1.1214e-03,  3.1114e-05, -5.1068e-04,  ..., -9.8421e-04,
           4.4399e-04,  2.9536e-04],
         [-5.0373e-04,  6.2217e-04, -9.4943e-04,  ..., -7.5393e-04,
           5.5082e-04, -4.7115e-04],
         ...,
         [-9.9578e-04,  4.7526e-04, -8.5189e-04,  ...,  6.7239e-05,
           2.4299e-04,  4.1546e-04],
         [-2.6116e-04,  3.9507e-05, -1.1996e-03,  ...,  5.3943e-04,
           7.9560e-04,  5.0616e-05],
         [-1.8089e-04, -2.9237e-05, -1.1457e-03,  ...,  5.1628e-04,
           8.1721e-04,  1.5131e-05]],

        [[-2.4863e-04,  4.6529e-04, -8.3801e-04,  ..., -6.8530e-04,
          -2.6868e-04,  8.2918e-05],
         [-9.8560e-04, -2.0700e-04, -6.0263e-04,  ..., -4.0207e-04,
           7.8552e-05,  6.2841e-04],
         [-2.8102e-04, -2.7390e-04, -1.0022e-04,  ..., -6.7977e-04,
           5.5493e-04, -1.1437e-05],
         ...,
         [ 5.5443e-04, -1.0389e-03,  1.1249e-03,  ..., -2.7958e-04,
           4.7820e-06, -7.6382e-04],
         [-6.5111e-04,  5.3018e-04, -8.6593e-04,  ...,  4.1281e-04,
           6.1697e-04,  1.8578e-04],
         [-6.4727e-04,  5.4816e-04, -8.7393e-04,  ...,  4.5285e-04,
           5.9938e-04,  2.0426e-04]],

        [[-1.0471e-03, -1.7165e-04, -1.3072e-03,  ..., -2.9142e-04,
           1.2216e-04,  3.0242e-04],
         [-1.2649e-03, -8.1739e-05, -1.2496e-03,  ..., -1.6038e-04,
           4.5893e-04,  6.3530e-04],
         [-8.2164e-04, -5.1394e-04, -5.7062e-04,  ..., -8.6832e-04,
           9.3548e-04,  3.4080e-04],
         ...,
         [ 5.7688e-04, -1.0607e-03,  1.1424e-03,  ..., -2.9485e-04,
           1.2664e-05, -7.7582e-04],
         [-4.4874e-04,  1.1574e-03, -5.8914e-04,  ...,  1.4551e-04,
           5.6068e-04,  2.9101e-04],
         [-4.2313e-04,  1.1783e-03, -6.1999e-04,  ...,  2.1726e-04,
           5.5832e-04,  3.0715e-04]],

        [[-6.0331e-04,  6.9810e-04, -1.1962e-03,  ...,  1.0041e-04,
           5.6113e-04,  6.2274e-04],
         [-9.7823e-04,  4.1314e-04, -6.8761e-04,  ..., -9.0581e-05,
           1.4472e-04,  1.4187e-04],
         [ 5.5445e-04, -1.0196e-03,  1.1249e-03,  ..., -2.5702e-04,
          -1.0367e-05, -7.3723e-04],
         ...,
         [-8.7190e-04,  1.2748e-04, -3.6508e-04,  ..., -9.2327e-04,
          -7.6154e-04,  3.9171e-04],
         [-1.0403e-03,  4.8590e-04, -3.5527e-04,  ..., -2.4652e-04,
           1.8903e-05, -9.1672e-05],
         [-9.2085e-04,  5.1741e-04, -1.7931e-04,  ..., -3.2738e-04,
          -1.3353e-04, -6.9088e-05]],

        [[-4.1446e-04,  2.1056e-04, -8.1279e-04,  ...,  2.6776e-04,
           1.9619e-04,  8.5456e-05],
         [-8.8770e-04, -6.9228e-04, -1.1164e-03,  ...,  3.3069e-04,
           5.5868e-04,  5.1588e-04],
         [-5.5121e-04, -4.4931e-04, -6.7586e-04,  ..., -6.6211e-04,
           5.6400e-04,  3.2561e-04],
         ...,
         [ 5.5577e-04, -1.0454e-03,  1.1219e-03,  ..., -2.7316e-04,
           6.4723e-06, -7.8923e-04],
         [-5.8479e-04,  9.0450e-04, -6.4465e-04,  ...,  1.9804e-05,
           4.7624e-04,  2.3598e-04],
         [-5.7239e-04,  8.8970e-04, -6.5124e-04,  ...,  5.0262e-05,
           5.0541e-04,  2.2480e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] give me the location of the tablet on the table on the left ', '<Img><ImageHere></Img> [refer] could you tell me the location for girl right ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for back sandwich ? ', '<Img><ImageHere></Img> [refer] where can I locate the second stem glass next to sink ? ', '<Img><ImageHere></Img> [refer] where is bananas on left middle ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of horse butt ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.3369e-01,  1.5391e+00,  6.4574e-01,  ..., -8.7727e-01,
          -2.1197e-01,  7.5405e-02],
         [-1.0819e-01,  6.0727e-01,  3.8381e-01,  ...,  5.0125e-01,
          -1.2445e+00,  1.6406e-02],
         [ 3.7003e-01,  2.0467e+00,  6.2868e-02,  ...,  4.7089e-01,
          -1.2702e-02, -2.7793e-01],
         ...,
         [-5.6379e-01,  1.2357e+00, -3.9873e-02,  ...,  8.5281e-01,
          -3.1906e-01,  1.1133e-01],
         [-6.8862e-01,  9.0525e-01,  9.1855e-01,  ...,  9.4786e-01,
          -5.3685e-02, -7.3440e-01],
         [-9.5730e-01,  1.3232e+00, -1.3640e-01,  ...,  5.9353e-01,
           7.1652e-01, -2.6027e-01]],

        [[ 3.0723e-01,  9.9142e-01, -3.8350e-01,  ...,  6.9405e-02,
          -1.0317e-01,  4.4779e-01],
         [ 3.0419e-01,  1.3909e+00, -1.7784e-01,  ..., -6.3413e-02,
          -3.1200e-01,  7.5835e-01],
         [ 5.5297e-01,  9.6336e-01,  7.1975e-01,  ..., -2.1922e-01,
          -6.8604e-01,  4.8078e-01],
         ...,
         [-7.7721e-01, -8.0686e-01,  1.4711e-01,  ...,  7.1734e-01,
           4.9603e-01,  7.2193e-01],
         [-6.9215e-01,  4.1140e-02, -4.9295e-01,  ...,  1.1788e+00,
          -4.5812e-01,  1.1956e+00],
         [ 2.6640e-01, -1.4221e-01,  9.8396e-01,  ...,  1.1700e+00,
           6.2185e-01,  9.7202e-01]],

        [[ 1.2621e+00, -9.0982e-02,  5.0255e-01,  ...,  7.9231e-01,
           5.2231e-01,  2.5923e-01],
         [-7.5245e-01,  8.5605e-01,  9.4047e-01,  ..., -5.0753e-01,
           3.8244e-01, -8.6137e-01],
         [-3.7278e-01,  1.1543e+00,  3.1746e-01,  ..., -3.4174e-01,
          -2.1802e-01, -7.7751e-01],
         ...,
         [-6.4726e-01,  1.9339e+00,  7.6214e-01,  ...,  1.3057e+00,
          -8.5848e-01, -5.7016e-01],
         [ 3.4777e-01, -5.6385e-02,  4.7807e-04,  ...,  1.0435e+00,
           2.2374e-01, -2.6228e-01],
         [-1.1155e+00,  6.1084e-01,  4.7556e-01,  ...,  9.1849e-01,
          -1.3865e+00, -1.0301e+00]],

        [[-4.2031e-01, -5.6892e-01,  7.0219e-01,  ...,  9.2924e-01,
           3.5771e-01,  8.7269e-01],
         [-1.3222e-01, -2.7382e-01,  1.2814e+00,  ...,  6.2528e-01,
          -1.5667e-02,  6.7729e-01],
         [-5.1858e-01,  2.5854e-01,  4.0305e-01,  ...,  7.4449e-01,
          -1.3220e-01, -3.9405e-01],
         ...,
         [-9.3318e-01,  7.1400e-01,  6.3245e-01,  ...,  1.0852e+00,
          -1.0422e+00, -4.0337e-01],
         [ 1.7958e-01,  2.9088e-01,  5.0124e-01,  ...,  5.8266e-01,
          -1.1009e-01,  4.1768e-01],
         [ 7.5920e-02, -1.1553e-01,  9.0620e-01,  ...,  1.0730e+00,
           3.8278e-01,  1.0783e+00]],

        [[ 8.1903e-01,  6.0499e-01,  1.5177e+00,  ...,  1.0755e+00,
           6.5509e-01,  5.7187e-01],
         [-1.0914e+00,  2.5958e-01,  6.3667e-01,  ..., -4.3979e-01,
           1.7678e-01, -4.3153e-01],
         [ 1.1544e-01,  3.3338e-01,  1.7927e-01,  ...,  4.6304e-01,
          -2.0351e-01, -5.8028e-01],
         ...,
         [-1.0949e+00, -1.3246e+00,  1.0060e+00,  ...,  4.6668e-03,
          -1.2245e+00,  8.2698e-01],
         [ 2.8083e-01, -4.5987e-01, -6.1008e-03,  ...,  5.1516e-01,
           1.3499e-01,  1.2355e-02],
         [ 7.8524e-01,  3.6633e-01,  7.4235e-01,  ...,  7.3843e-01,
           7.0068e-01,  1.2546e-01]],

        [[-3.1534e-01, -9.9981e-01,  3.0054e-01,  ...,  5.6898e-01,
           3.8433e-01,  1.6478e+00],
         [-5.1633e-02, -9.0465e-01,  4.1764e-01,  ...,  1.9039e-02,
           7.6091e-02,  1.2378e+00],
         [ 4.1866e-02, -1.3949e+00,  2.3298e-01,  ...,  1.2211e+00,
          -5.0937e-01,  1.4000e-01],
         ...,
         [ 4.2932e-01, -5.3602e-02,  2.6982e-01,  ...,  4.2518e-01,
           9.4543e-02,  3.5138e-01],
         [-1.0227e+00, -7.8633e-01,  6.2227e-01,  ...,  9.5050e-01,
           5.8077e-01,  1.1891e+00],
         [-5.6885e-01, -9.6678e-01,  6.5661e-01,  ...,  1.0233e+00,
           7.8065e-01,  1.4621e+00]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] give me the location of the tablet on the table on the left ', '<Img><ImageHere></Img> [refer] could you tell me the location for girl right ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for back sandwich ? ', '<Img><ImageHere></Img> [refer] where can I locate the second stem glass next to sink ? ', '<Img><ImageHere></Img> [refer] where is bananas on left middle ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of horse butt ']
processed prompt_list:['give me the location of the tablet on the table on the left', 'could you tell me the location for girl right ?', 'could you tell me the location for back sandwich ?', 'where can I locate the second stem glass next to sink ?', 'where is bananas on left middle ?', 'from this image, tell me the location of horse butt']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-9.2765e-04,  5.2596e-04, -5.8376e-04,  ..., -1.2089e-03,
          -2.2842e-04, -6.0958e-05],
         [-7.8939e-04, -1.9312e-05, -4.3111e-04,  ..., -9.8792e-05,
          -2.8400e-04, -9.8019e-05],
         [-1.1266e-03, -7.4227e-05, -1.1180e-03,  ..., -6.5248e-04,
          -6.2482e-04,  3.2791e-05],
         ...,
         [-6.5530e-04,  1.8262e-04, -6.0438e-04,  ..., -5.0492e-04,
          -1.0603e-03,  8.1568e-04],
         [-1.5976e-04,  3.7471e-04, -6.0049e-04,  ..., -9.9353e-04,
          -4.8772e-04,  4.3681e-04],
         [-9.2312e-04,  1.7836e-04, -8.0207e-04,  ..., -7.9111e-04,
          -9.4409e-04,  7.0652e-05]],

        [[-9.5934e-04,  5.9959e-04, -1.2963e-03,  ...,  5.5628e-04,
          -1.4097e-04,  3.3191e-04],
         [-7.9722e-04,  4.0526e-04, -1.0177e-03,  ...,  5.8580e-04,
           7.3225e-05,  6.1003e-04],
         [-6.1565e-04,  6.7373e-05, -5.8136e-04,  ..., -2.0188e-04,
          -2.3057e-04,  9.5846e-04],
         ...,
         [-7.4405e-04, -2.1563e-04, -6.2036e-04,  ..., -5.1950e-04,
          -2.4263e-04,  2.4762e-04],
         [-1.1748e-03,  3.2662e-04,  3.0625e-04,  ..., -1.0576e-04,
          -1.2449e-03,  8.3752e-04],
         [-7.2657e-04,  2.9063e-05, -1.1563e-03,  ...,  1.3232e-04,
          -1.7512e-04,  6.8199e-04]],

        [[-1.0689e-03,  2.6508e-04, -1.3311e-03,  ..., -8.0569e-04,
          -1.6401e-04,  8.5688e-05],
         [-4.7399e-04,  9.3511e-04, -5.7108e-04,  ..., -1.0191e-03,
          -5.1860e-04,  4.9236e-04],
         [-7.1150e-04,  8.2984e-04, -4.7910e-04,  ..., -1.0193e-03,
          -9.0667e-04,  6.6760e-04],
         ...,
         [-1.4112e-03,  2.8049e-04, -5.8048e-04,  ..., -9.3638e-04,
           7.9221e-04,  1.7617e-04],
         [-1.3615e-03,  5.1031e-05, -9.4652e-04,  ..., -9.2644e-04,
          -1.1688e-04, -3.6480e-05],
         [-9.2300e-04,  5.5752e-04, -1.0226e-03,  ..., -1.3447e-03,
          -6.2518e-04, -3.0259e-04]],

        [[-8.9821e-04,  3.6933e-04, -1.0220e-03,  ..., -9.6679e-05,
          -3.9053e-04,  5.3436e-04],
         [-6.1389e-04,  2.2747e-04, -8.1074e-04,  ..., -7.7976e-04,
          -3.8750e-04,  5.1148e-05],
         [-7.7863e-04,  2.8827e-04, -5.6837e-04,  ..., -3.9076e-04,
          -1.0379e-03,  4.5484e-04],
         ...,
         [-3.9280e-04,  5.5848e-04, -3.5049e-04,  ..., -7.9517e-04,
          -1.0204e-03, -1.8170e-04],
         [-7.3858e-04,  7.8820e-04, -9.3706e-04,  ..., -2.2413e-04,
           3.2158e-04,  3.5331e-04],
         [-9.5304e-04,  4.1035e-04, -1.1092e-03,  ...,  1.8518e-04,
          -2.8301e-04,  7.4025e-04]],

        [[-1.8149e-04,  9.3720e-04, -1.5918e-03,  ..., -6.1941e-04,
          -4.4886e-04,  4.9572e-04],
         [-6.0749e-04,  4.4160e-04, -1.2197e-03,  ..., -5.9275e-04,
          -3.8574e-04,  3.5461e-04],
         [-7.3376e-04,  2.8047e-04, -1.1028e-03,  ..., -1.0264e-04,
          -3.0362e-04,  4.0889e-04],
         ...,
         [-7.5037e-04, -3.5177e-04, -8.0008e-04,  ..., -2.0504e-04,
          -5.4868e-04, -6.2491e-05],
         [-1.1649e-03,  1.9819e-04, -8.9339e-04,  ..., -3.6695e-04,
          -3.5810e-05,  1.6104e-04],
         [-7.3056e-04,  3.1306e-04, -1.1269e-03,  ..., -3.0761e-04,
          -5.6917e-04,  5.0840e-04]],

        [[-5.5684e-04,  2.7676e-04, -8.1791e-04,  ..., -1.5657e-04,
          -4.3986e-04,  9.8910e-05],
         [-5.1190e-04,  4.0380e-04, -6.0904e-04,  ..., -2.8119e-04,
          -5.0904e-04,  3.1726e-05],
         [-3.2402e-04,  1.6177e-04, -9.2016e-04,  ..., -7.5421e-04,
          -4.2541e-04,  9.2160e-04],
         ...,
         [-4.5045e-04,  4.5473e-04, -7.0445e-04,  ..., -3.2887e-06,
           2.7921e-04,  2.4687e-04],
         [-7.7353e-04,  2.9058e-05, -7.4359e-04,  ..., -5.5087e-05,
          -7.1865e-05,  9.7998e-05],
         [-4.3427e-04,  1.8427e-04, -9.7486e-04,  ..., -2.9500e-05,
          -2.9055e-05,  9.6881e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.5601, -0.2488,  0.5510,  ...,  0.7015, -0.1689,  1.2098],
         [-0.0686,  0.3166,  0.7390,  ...,  0.2568, -1.8172,  0.8787],
         [-0.0196,  1.3162, -0.6674,  ...,  0.8002, -0.5844,  1.1446],
         ...,
         [ 0.0171,  0.7240,  0.6633,  ...,  0.6342, -0.0843,  0.6729],
         [ 0.2487, -0.2215,  0.1755,  ...,  0.6562, -0.3634, -0.0444],
         [ 0.1911, -0.2091,  0.1510,  ...,  0.6494, -0.1778, -0.0169]],

        [[ 0.0363, -0.3654,  0.0156,  ...,  1.7218, -0.7233, -0.1879],
         [-0.1151, -0.2400,  0.4038,  ...,  1.6959, -0.5369, -0.6643],
         [-0.0664, -0.3660, -0.0440,  ...,  1.7766, -0.2248, -0.9368],
         ...,
         [ 0.0469, -0.4072,  0.0096,  ...,  1.5198, -0.8856, -0.0942],
         [ 0.2016, -0.7474, -0.2263,  ...,  1.5147, -0.7403, -0.0217],
         [ 0.3675, -0.6549, -0.1498,  ...,  1.0510, -0.6547,  0.2929]],

        [[-0.0172, -0.6489,  0.6057,  ...,  0.6156,  0.6199,  1.8084],
         [ 0.3986, -0.2547, -1.3393,  ...,  0.3591, -0.3228,  1.2866],
         [ 0.8350, -0.5623,  0.4737,  ...,  0.4579, -0.8174,  1.4772],
         ...,
         [ 0.0590, -0.2119,  0.0267,  ...,  0.1534, -0.0745, -0.0095],
         [ 0.1035, -0.5502,  0.5066,  ...,  0.7246, -0.1138, -0.2869],
         [ 0.1183, -0.5657,  0.4716,  ...,  0.7406, -0.0574, -0.2480]],

        [[ 0.1781, -0.2251, -0.0141,  ...,  0.1777,  0.4555,  0.6733],
         [ 0.1227, -0.2359,  1.3531,  ...,  0.8817, -0.5666,  0.8465],
         [ 0.8480, -0.0432,  0.4002,  ..., -1.3205, -0.1812,  0.1394],
         ...,
         [ 0.0598, -0.1534, -0.0115,  ...,  0.2082, -0.0533,  0.0202],
         [ 0.4319, -0.2053,  0.4473,  ...,  0.4040, -0.1677, -0.2204],
         [ 0.3501, -0.0711,  0.3748,  ...,  0.4268, -0.1804, -0.2395]],

        [[-0.0848,  0.2415, -0.2395,  ...,  0.7098, -0.5385,  0.2428],
         [-0.0568,  0.2669, -0.2873,  ...,  0.7167, -0.5606,  0.1955],
         [ 1.2772,  1.7687, -1.6584,  ..., -0.2385, -1.1253,  1.7771],
         ...,
         [ 0.0404, -0.1851,  0.0231,  ...,  0.2034, -0.0832, -0.0062],
         [ 0.0354,  0.1561,  0.5964,  ...,  1.1697,  0.0868, -0.2087],
         [ 0.0361,  0.1423,  0.5761,  ...,  1.1582,  0.1179, -0.2292]],

        [[ 0.3339, -0.7429, -0.6347,  ...,  1.4896, -0.3470,  2.2492],
         [-0.0437,  0.0624,  0.1604,  ...,  0.3580, -0.3049,  0.1873],
         [ 1.0262,  1.0243, -1.7968,  ...,  0.5390, -0.6027,  1.8733],
         ...,
         [ 0.0609, -0.2127,  0.0256,  ...,  0.2011, -0.0473,  0.0133],
         [-0.0579,  0.2120,  0.0592,  ...,  0.3269, -0.3584, -0.1576],
         [-0.0898,  0.2152,  0.1025,  ...,  0.4235, -0.3898, -0.1131]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ']
processed prompt_list:['Provide a concise depiction of this image.', 'Could you use a few words to describe what you perceive in the photo?', 'An image that shows', 'Provide a description of what is presented in the photo.', 'An image that shows', 'Use a few words to illustrate what is happening in the picture.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.6018e-04,  3.2580e-04, -1.2413e-03,  ...,  5.7546e-05,
          -3.2080e-04,  2.3018e-04],
         [-7.8668e-04,  2.9388e-04, -3.8194e-04,  ..., -7.0739e-04,
          -3.6082e-04,  4.7666e-04],
         [-5.6475e-04, -8.7736e-05, -1.2895e-03,  ..., -1.4881e-04,
          -4.2880e-04,  1.7833e-04],
         ...,
         [-6.6538e-04,  5.5901e-04, -9.6491e-04,  ..., -1.4583e-04,
           1.7243e-04,  5.3469e-04],
         [-5.2946e-04,  1.9561e-05, -1.0266e-03,  ...,  2.8541e-04,
           8.9067e-04,  1.6088e-04],
         [-4.0527e-04, -1.0310e-04, -1.0069e-03,  ...,  2.8714e-04,
           9.4603e-04,  9.7931e-05]],

        [[-1.0687e-03, -3.3701e-04, -1.0249e-03,  ..., -1.7006e-04,
           4.4021e-04,  2.5717e-04],
         [-8.0817e-04, -4.5806e-04, -9.0991e-04,  ..., -2.0777e-04,
           3.2910e-04,  1.6192e-04],
         [-6.7505e-04, -2.6276e-04, -1.1800e-03,  ..., -1.5968e-04,
           3.1340e-04,  2.0543e-04],
         ...,
         [-1.3719e-03,  6.8984e-06, -6.2928e-04,  ..., -9.8534e-05,
           4.7672e-04,  2.7442e-04],
         [-1.4107e-03,  5.8272e-05, -8.8762e-04,  ..., -4.1406e-05,
           5.2496e-04,  1.8954e-04],
         [-1.5649e-03,  1.8396e-04, -1.1304e-03,  ..., -4.5782e-05,
           5.5854e-04,  2.4552e-04]],

        [[-5.4510e-04, -1.4464e-04, -6.4742e-04,  ..., -1.1638e-03,
          -1.3508e-04,  4.4947e-05],
         [-1.0340e-03, -1.4621e-04, -1.1792e-03,  ...,  1.3371e-05,
           6.8613e-04,  6.2019e-04],
         [-7.7279e-04, -5.4205e-04, -4.7817e-04,  ..., -1.1651e-03,
           4.2883e-04,  2.4838e-04],
         ...,
         [ 5.9932e-04, -1.0618e-03,  1.1137e-03,  ..., -2.6993e-04,
           3.1146e-05, -7.5316e-04],
         [-6.0025e-04,  6.7427e-04, -7.8578e-04,  ...,  1.8494e-04,
          -2.8174e-06,  3.8939e-05],
         [-5.4119e-04,  6.7685e-04, -7.6507e-04,  ...,  2.7937e-04,
           4.8469e-06,  3.5811e-05]],

        [[-7.7178e-04,  4.1629e-04, -7.4832e-04,  ..., -7.8040e-05,
          -1.4698e-04,  2.9229e-04],
         [-9.2776e-04, -3.1252e-04, -4.6627e-04,  ..., -3.4833e-04,
           1.3752e-04,  6.1262e-04],
         [-5.9543e-04, -6.6273e-06, -5.6805e-05,  ..., -7.6528e-04,
           2.1565e-04,  5.9734e-04],
         ...,
         [ 6.0446e-04, -1.0558e-03,  1.1503e-03,  ..., -2.7246e-04,
           1.1143e-05, -7.8122e-04],
         [-8.9837e-04,  9.5434e-04, -7.4801e-04,  ...,  7.2927e-05,
           1.3850e-04,  1.6091e-04],
         [-8.8818e-04,  9.6410e-04, -7.4110e-04,  ...,  1.6820e-04,
           1.2573e-04,  1.6381e-04]],

        [[-9.5184e-04,  8.4942e-04, -1.0824e-03,  ...,  4.5675e-05,
           4.6997e-04,  4.6901e-04],
         [-9.8598e-04,  8.2355e-04, -1.0565e-03,  ...,  7.5020e-05,
           4.4035e-04,  4.4655e-04],
         [-1.1380e-03, -2.1378e-04, -5.4854e-04,  ..., -3.0659e-04,
           7.1206e-04, -2.0685e-06],
         ...,
         [ 5.7257e-04, -1.0453e-03,  1.1338e-03,  ..., -2.9099e-04,
           1.3964e-05, -7.4397e-04],
         [-8.4861e-04,  3.9369e-04, -5.4391e-04,  ...,  3.1087e-04,
           4.4708e-04,  3.2748e-04],
         [-8.3571e-04,  4.1809e-04, -5.4812e-04,  ...,  3.2650e-04,
           4.7219e-04,  3.0538e-04]],

        [[-7.8376e-04,  2.1576e-04, -7.6287e-04,  ..., -1.8645e-04,
          -2.0662e-04, -2.6228e-04],
         [-6.5180e-04,  5.7151e-04, -1.2257e-03,  ..., -6.3007e-05,
           9.4777e-05,  6.7935e-05],
         [-8.4797e-04,  2.9061e-04, -7.2867e-04,  ...,  1.1715e-04,
           3.2712e-04, -1.7310e-04],
         ...,
         [ 5.5912e-04, -1.0529e-03,  1.1239e-03,  ..., -2.9921e-04,
           1.2006e-05, -7.5607e-04],
         [-7.6685e-04,  5.6482e-04, -8.5601e-04,  ...,  3.8437e-04,
           5.6957e-04, -1.5146e-05],
         [-7.5278e-04,  5.7786e-04, -8.2862e-04,  ...,  4.0388e-04,
           5.5273e-04, -2.5095e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 7.9002e-01, -1.2642e+00, -1.2476e-01,  ...,  1.5734e+00,
          -3.5687e-01,  1.4308e+00],
         [-3.6865e-01, -7.8717e-02,  4.7629e-01,  ...,  5.5241e-01,
          -8.2109e-01, -1.1741e-01],
         [ 5.7480e-01,  4.8931e-01, -5.8014e-01,  ...,  3.1343e-02,
          -6.5776e-01,  1.1711e+00],
         ...,
         [ 2.1965e-02, -1.8125e-01, -1.0818e-02,  ...,  1.7270e-01,
          -8.7892e-02,  1.6439e-02],
         [ 4.1414e-01, -1.8599e-01, -5.0006e-01,  ...,  1.1127e+00,
          -2.7501e-01,  6.3791e-02],
         [ 4.5013e-01, -1.8370e-01, -5.0306e-01,  ...,  1.1154e+00,
          -2.5560e-01,  1.0713e-01]],

        [[ 6.2328e-01, -1.2837e+00, -7.0588e-01,  ...,  1.9349e-01,
           1.8940e-02,  1.2623e+00],
         [ 1.8296e-01, -5.3709e-01, -1.6392e+00,  ..., -1.7218e-01,
          -5.1246e-01,  9.3408e-01],
         [ 7.7129e-01, -3.7677e-01, -4.7860e-01,  ..., -1.0463e+00,
          -2.2590e-01,  1.0775e+00],
         ...,
         [ 4.7936e-02, -1.3239e-01,  4.7445e-03,  ...,  2.1029e-01,
          -1.1086e-01,  2.6109e-02],
         [-2.4732e-01, -2.1833e-01,  2.6436e-01,  ..., -2.7904e-01,
          -2.6877e-01,  2.2075e-01],
         [-2.4098e-01, -2.1184e-01,  3.0689e-01,  ..., -1.5031e-01,
          -2.1495e-01,  2.5280e-01]],

        [[ 3.0178e-01, -6.4992e-01,  4.8844e-01,  ...,  7.2154e-01,
           7.4564e-01,  7.5782e-01],
         [ 1.4028e-01,  3.4826e-01, -2.4060e-01,  ..., -2.3083e-01,
           2.8547e-01,  8.8135e-01],
         [ 7.6913e-01,  7.9699e-01,  1.3274e+00,  ..., -3.6711e-02,
          -3.8590e-01,  6.6021e-01],
         ...,
         [ 7.6130e-03, -2.2512e-01,  6.3056e-04,  ...,  1.6406e-01,
          -8.8300e-02,  2.7356e-02],
         [ 7.5466e-03,  5.8379e-01,  2.8107e-01,  ...,  8.7908e-01,
          -5.7208e-01,  6.2649e-02],
         [-1.0890e-02,  5.7619e-01,  2.8238e-01,  ...,  8.8356e-01,
          -5.2725e-01,  5.1405e-02]],

        [[-4.9457e-01,  1.1897e-01,  6.8140e-01,  ...,  4.6634e-01,
          -1.4062e-01,  5.8081e-01],
         [ 1.0224e-01,  9.5224e-01, -8.4265e-01,  ...,  7.2003e-01,
           2.3483e-02,  2.4501e-01],
         [ 5.9486e-01, -1.7101e-01, -2.0619e+00,  ..., -1.0215e-01,
           1.0541e-01,  1.2945e+00],
         ...,
         [-8.0014e-04, -2.0353e-01,  1.8842e-02,  ...,  2.0737e-01,
          -8.0581e-02,  3.3092e-02],
         [ 1.1171e-01,  3.2802e-01,  2.5053e-01,  ...,  5.6622e-01,
          -4.5214e-01, -1.7418e-01],
         [ 1.2669e-01,  3.3161e-01,  2.7691e-01,  ...,  5.7168e-01,
          -4.2490e-01, -1.5250e-01]],

        [[-3.1623e-01, -7.9963e-01, -2.8629e-01,  ...,  1.2307e+00,
           1.6249e-02,  1.6566e+00],
         [-6.4655e-01, -8.8757e-01,  3.8767e-01,  ...,  8.9786e-01,
          -8.5217e-01,  1.8830e+00],
         [ 4.2325e-01,  6.1768e-03, -9.5581e-01,  ..., -5.6729e-01,
          -1.3430e+00,  1.4042e+00],
         ...,
         [ 4.7033e-02, -1.9231e-01,  1.6391e-02,  ...,  1.9725e-01,
          -8.2335e-02,  2.8299e-02],
         [-1.2491e-01,  2.4988e-01,  4.1976e-01,  ...,  1.1887e+00,
          -1.5223e-02, -2.5290e-02],
         [-6.5040e-02,  2.3400e-01,  4.0811e-01,  ...,  1.1966e+00,
           3.0585e-02, -5.4692e-02]],

        [[ 1.1525e+00, -7.8192e-01, -2.7439e-01,  ...,  1.4466e-01,
          -3.6474e-01,  2.2689e+00],
         [-7.6179e-01, -3.9302e-02, -7.3491e-02,  ...,  5.4599e-01,
          -4.3495e-01, -3.9961e-01],
         [ 5.3565e-01,  1.3537e+00, -5.4302e-01,  ...,  9.9975e-02,
           3.1527e-01,  1.2015e+00],
         ...,
         [-6.4091e-01,  5.1463e-02,  2.4501e-01,  ...,  5.3720e-01,
          -3.2923e-01, -1.9536e-01],
         [ 1.6741e-01, -9.5690e-02,  2.8004e-01,  ...,  3.3800e-01,
          -4.8924e-01, -2.8194e-01],
         [ 1.5612e-01, -9.6838e-02,  2.7947e-01,  ...,  3.4397e-01,
          -4.2777e-01, -2.8749e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ']
processed prompt_list:['Provide a concise depiction of this image.', 'Could you use a few words to describe what you perceive in the photo?', 'Write a description for the photo.', 'Could you use a few words to describe what you perceive in the photo?', 'Write a description for the photo.', 'Provide a concise depiction of this image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.4212e-04, -1.0296e-04, -1.0423e-03,  ..., -6.7514e-05,
           4.2228e-04,  2.5678e-04],
         [-1.0024e-03,  5.8489e-04, -1.0842e-03,  ...,  2.4418e-04,
           2.2088e-04,  8.1171e-04],
         [-8.5136e-04, -3.8446e-04, -9.3095e-04,  ..., -1.5812e-04,
           6.1495e-04, -5.4779e-05],
         ...,
         [ 5.6143e-04, -1.0466e-03,  1.1398e-03,  ..., -2.8283e-04,
           4.6364e-06, -7.7196e-04],
         [-6.0375e-04,  8.3337e-04, -8.5239e-04,  ...,  6.1088e-04,
           3.4751e-04,  4.0955e-04],
         [-5.6651e-04,  8.4073e-04, -8.5024e-04,  ...,  6.3352e-04,
           3.4504e-04,  3.5169e-04]],

        [[-8.1049e-04,  4.8168e-05, -1.3726e-03,  ...,  3.3810e-04,
           9.3817e-05,  5.1507e-04],
         [-1.0506e-03, -1.0760e-05, -1.3226e-03,  ...,  5.4448e-04,
           3.8046e-04,  9.3380e-04],
         [-6.3980e-04, -1.8307e-04, -6.5411e-04,  ..., -2.3969e-04,
           5.7115e-04,  1.9750e-04],
         ...,
         [ 5.6346e-04, -1.0662e-03,  1.1592e-03,  ..., -2.8838e-04,
           1.5576e-06, -7.8846e-04],
         [-6.7458e-04,  9.0672e-04, -7.8993e-04,  ...,  2.4199e-04,
           5.2314e-04,  3.4156e-04],
         [-6.6454e-04,  9.4792e-04, -7.8891e-04,  ...,  3.0023e-04,
           5.2974e-04,  3.0284e-04]],

        [[-7.3912e-04,  1.6806e-04, -1.3062e-03,  ..., -4.0402e-05,
          -6.8979e-05,  3.0721e-04],
         [-9.4387e-04, -2.0210e-04, -1.3201e-03,  ...,  2.0773e-04,
           2.3621e-04,  8.4719e-04],
         [-1.0532e-03,  4.8937e-04, -5.2660e-04,  ..., -1.9181e-04,
           6.4501e-04,  7.9313e-05],
         ...,
         [ 5.7566e-04, -1.0570e-03,  1.1164e-03,  ..., -2.7251e-04,
           1.6457e-05, -7.7933e-04],
         [-8.1336e-04,  1.3088e-03, -7.9960e-04,  ...,  2.1722e-04,
           5.3949e-05,  3.2221e-04],
         [-8.1149e-04,  1.3174e-03, -8.0058e-04,  ...,  2.3146e-04,
           6.5489e-05,  3.0134e-04]],

        [[-8.2061e-04,  8.2156e-04, -1.2626e-03,  ...,  1.1958e-04,
           3.4489e-04,  5.9655e-04],
         [-1.0890e-03,  5.1940e-04, -7.4072e-04,  ..., -1.3293e-04,
          -2.7487e-04,  2.2297e-04],
         [-1.2656e-03, -2.3729e-04, -1.0895e-03,  ..., -1.8757e-04,
           3.1068e-04, -1.2037e-04],
         ...,
         [ 5.6039e-04, -1.0468e-03,  1.1474e-03,  ..., -3.0155e-04,
          -4.6413e-06, -7.7297e-04],
         [-4.5936e-04,  6.9605e-04, -7.7249e-04,  ...,  7.2216e-04,
           5.7153e-05,  2.2410e-04],
         [-4.4294e-04,  7.0738e-04, -7.6245e-04,  ...,  7.2447e-04,
           7.4121e-05,  2.2444e-04]],

        [[-7.0678e-04,  3.2133e-04, -6.6118e-04,  ..., -3.0993e-04,
           1.2646e-04, -1.8999e-04],
         [-1.0160e-03, -2.7594e-04, -9.4731e-04,  ..., -9.5923e-04,
           3.3056e-04,  3.4081e-04],
         [-9.1171e-04,  4.3522e-05, -3.6715e-04,  ..., -4.4993e-04,
           7.3051e-04,  2.0006e-04],
         ...,
         [ 5.6120e-04, -1.0377e-03,  1.1205e-03,  ..., -2.8931e-04,
          -1.4786e-06, -7.7589e-04],
         [-4.2272e-04,  5.6505e-04, -8.8949e-04,  ...,  4.3125e-04,
           2.6145e-04,  2.2424e-06],
         [-4.2167e-04,  5.7770e-04, -9.0159e-04,  ...,  4.4227e-04,
           2.7015e-04, -1.1002e-05]],

        [[-9.0508e-04,  1.5614e-04, -1.2424e-03,  ..., -8.4628e-05,
           3.5664e-04, -2.1649e-04],
         [-1.0513e-03,  6.2781e-04, -1.0893e-03,  ...,  1.7703e-04,
           6.3113e-04,  3.1604e-04],
         [-4.6902e-04,  3.6915e-04, -1.0436e-03,  ..., -1.9903e-04,
           8.9539e-05, -1.7597e-04],
         ...,
         [-8.7704e-04,  7.3706e-04, -1.2856e-03,  ...,  6.1362e-05,
           6.4516e-04,  3.7853e-04],
         [-3.7393e-04,  2.5039e-04, -1.0823e-03,  ...,  3.5136e-04,
           7.5166e-04,  1.6879e-04],
         [-3.1482e-04,  2.0374e-04, -1.0502e-03,  ...,  3.4689e-04,
           7.7980e-04,  1.4577e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of a white dish with some kind of sauce in it along with a silver spoon ', '<Img><ImageHere></Img> [refer] donut with pink frosting and sprinkles ', '<Img><ImageHere></Img> [refer] the location of sandwich half furthest to right is ', '<Img><ImageHere></Img> [refer] purse on front mans back ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of a bottle of wine that says 14 hands and has a purple horse on it ', '<Img><ImageHere></Img> [refer] where can I locate the the back of the train leaving ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-7.1341e-01, -6.7455e-01,  4.0208e-02,  ...,  9.1264e-01,
          -1.3098e+00,  2.6433e-01],
         [-2.7650e-01, -6.5665e-01,  2.0121e-01,  ...,  7.8152e-01,
          -8.9502e-01,  4.4711e-01],
         [-1.1737e+00, -4.7703e-01, -3.9251e-01,  ...,  7.5171e-01,
          -8.6414e-01,  3.6295e-01],
         ...,
         [-4.3532e-01,  5.3024e-01, -8.7244e-01,  ...,  3.6018e-01,
          -6.5276e-01,  7.2560e-01],
         [-3.9618e-01,  3.5929e-01, -5.1435e-01,  ...,  1.7694e-01,
           5.7639e-01,  8.4347e-02],
         [ 1.6734e-01, -8.1822e-02,  6.1763e-01,  ...,  3.7379e-01,
           6.0051e-01,  9.5935e-01]],

        [[-7.4869e-01,  2.7731e-01, -2.2408e-01,  ...,  5.7798e-01,
           1.3406e+00,  2.0356e-01],
         [-5.5420e-01,  6.8163e-01, -1.3808e-01,  ...,  5.3164e-01,
           1.4855e+00,  3.1180e-01],
         [-5.5466e-01,  2.1346e-01,  1.5111e+00,  ...,  6.7394e-02,
          -2.1845e-02, -1.2444e-01],
         ...,
         [-4.1527e-01,  5.2727e-01,  2.7399e-01,  ...,  4.3307e-02,
          -6.7457e-01, -4.1668e-01],
         [-1.0011e+00,  4.8477e-01, -4.6075e-01,  ...,  4.5483e-01,
           1.2976e+00,  1.2127e-01],
         [-4.3982e-01, -3.7550e-02,  5.9091e-01,  ...,  2.1890e-01,
          -6.7329e-01, -2.9547e-01]],

        [[-4.5971e-01,  8.4969e-02,  6.8376e-01,  ..., -2.3361e-01,
           4.4838e-01,  9.2646e-01],
         [-6.9328e-01,  1.9912e-01,  3.9592e-01,  ..., -5.3107e-01,
          -1.6303e-01,  3.4520e-01],
         [-6.3665e-01,  1.6133e-01,  8.5441e-01,  ..., -1.3767e-01,
           1.0202e-01,  4.7953e-01],
         ...,
         [-1.7148e+00,  8.7282e-01,  8.8088e-01,  ...,  4.2516e-01,
          -5.9498e-01, -7.2974e-01],
         [-1.0587e+00,  1.5849e-01,  4.8763e-01,  ...,  8.4012e-01,
          -1.2686e+00, -7.1733e-01],
         [-2.6093e-01, -2.6602e-01,  9.1486e-02,  ...,  1.2552e-01,
          -3.0618e-01,  1.7281e-01]],

        [[ 5.3653e-01,  1.5703e+00,  2.4164e-01,  ...,  4.5779e-01,
          -9.8063e-01,  2.3542e-01],
         [-6.3935e-01, -8.1522e-01,  4.4235e-01,  ...,  5.0724e-01,
           8.7325e-01,  1.5029e+00],
         [ 3.8087e-01, -1.1351e-02,  8.1771e-01,  ...,  2.7337e-01,
          -1.2238e-01, -2.3085e-01],
         ...,
         [-1.5095e-01, -1.2506e-03,  9.7388e-01,  ...,  6.8803e-02,
          -9.0314e-01, -1.9250e-01],
         [ 2.3294e-01,  4.7962e-01,  7.1948e-01,  ..., -5.4365e-02,
          -8.7123e-01, -5.6903e-01],
         [-6.6947e-01, -6.9454e-01,  4.6766e-01,  ...,  5.0217e-01,
           4.7177e-01,  1.4226e+00]],

        [[-9.9805e-01, -2.7498e-01,  1.2666e-01,  ...,  4.6093e-01,
          -1.8551e+00, -1.1697e+00],
         [-1.0588e+00, -4.5922e-01,  5.0861e-01,  ..., -9.4774e-02,
          -1.6229e+00, -1.3348e+00],
         [-9.4641e-01,  7.6285e-01,  1.5604e+00,  ...,  1.0710e+00,
          -8.3430e-01, -6.0053e-01],
         ...,
         [ 2.5059e-01,  9.4986e-01,  1.2040e-01,  ...,  2.5173e-02,
          -1.0627e+00,  4.2750e-01],
         [-3.8193e-01,  4.9739e-02,  2.3681e-01,  ..., -4.1890e-01,
          -5.2170e-02, -1.7750e-01],
         [-3.0650e-01, -1.8843e-01,  9.7561e-01,  ...,  1.0251e+00,
           7.6204e-01,  3.9970e-01]],

        [[-3.9488e-01, -3.7028e-01,  1.8650e+00,  ...,  3.1772e-01,
           1.3313e+00,  4.9856e-01],
         [ 1.7556e-03,  1.1341e-01,  4.3790e-01,  ...,  4.0933e-01,
           1.6999e-01,  3.5538e-01],
         [ 1.5048e-01, -7.5879e-01,  9.3972e-01,  ...,  3.2685e-01,
           1.2766e+00,  1.2625e+00],
         ...,
         [-3.0465e-01, -1.3470e+00,  4.4354e-01,  ...,  7.0999e-02,
           4.3966e-01,  4.7245e-01],
         [-8.1223e-02, -1.1279e+00,  8.3284e-01,  ...,  2.5769e-01,
           9.6302e-01,  1.1842e+00],
         [-3.1341e-02,  7.5120e-01, -1.4478e-01,  ...,  1.1662e+00,
           1.6883e-01,  3.4474e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of a white dish with some kind of sauce in it along with a silver spoon ', '<Img><ImageHere></Img> [refer] donut with pink frosting and sprinkles ', '<Img><ImageHere></Img> [refer] the location of sandwich half furthest to right is ', '<Img><ImageHere></Img> [refer] purse on front mans back ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of a bottle of wine that says 14 hands and has a purple horse on it ', '<Img><ImageHere></Img> [refer] where can I locate the the back of the train leaving ? ']
processed prompt_list:['from this image, tell me the location of a white dish with some kind of sauce in it along with a silver spoon', 'donut with pink frosting and sprinkles', 'the location of sandwich half furthest to right is', 'purse on front mans back', 'from this image, tell me the location of a bottle of wine that says 14 hands and has a purple horse on it', 'where can I locate the the back of the train leaving ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.4998e-03,  8.4520e-04, -4.8078e-04,  ..., -1.9382e-04,
          -7.1255e-04,  3.9770e-04],
         [-1.4061e-03,  6.3307e-04, -7.6533e-04,  ..., -1.1112e-04,
          -5.8994e-04,  2.5567e-04],
         [-1.2307e-03,  1.1427e-03, -2.1102e-04,  ..., -5.7571e-05,
          -8.7712e-04,  6.3977e-04],
         ...,
         [-1.0275e-03,  4.4268e-04, -1.0342e-03,  ..., -1.2796e-04,
          -6.5878e-04,  6.0058e-04],
         [-8.5596e-04,  2.0555e-04, -1.2221e-03,  ..., -3.9517e-04,
          -4.3059e-04,  5.2261e-04],
         [-9.4422e-04,  2.6863e-04, -1.1674e-03,  ..., -5.6331e-04,
          -4.0957e-04,  3.8991e-04]],

        [[-1.0480e-03,  9.6886e-05, -1.0252e-03,  ..., -7.5321e-04,
          -1.9116e-04,  1.2161e-04],
         [-1.0219e-03, -5.0281e-05, -9.3390e-04,  ..., -3.8441e-04,
          -1.0104e-04,  2.8402e-04],
         [-7.1398e-04,  2.5584e-04, -6.7638e-04,  ..., -3.6556e-04,
          -3.2772e-04, -1.2792e-04],
         ...,
         [-5.3223e-04,  6.7751e-04, -7.9526e-04,  ..., -5.8873e-04,
          -3.3163e-04, -2.3537e-04],
         [-1.3642e-03, -1.0725e-04, -8.8610e-04,  ..., -6.9210e-04,
          -1.5122e-04,  2.4429e-04],
         [-5.8552e-04,  5.8029e-04, -2.1422e-04,  ..., -2.5189e-04,
          -7.2810e-04, -6.0548e-04]],

        [[-1.2471e-03,  7.5675e-04, -1.1669e-03,  ..., -6.3071e-04,
          -1.9420e-04,  5.6148e-04],
         [-1.1024e-03,  3.4550e-04, -1.0909e-03,  ..., -8.1890e-04,
          -1.3708e-04,  6.3470e-05],
         [-1.3597e-03,  5.4023e-04, -8.4860e-04,  ..., -8.2613e-04,
          -1.7354e-04,  4.7043e-04],
         ...,
         [-5.5344e-04,  6.2577e-04, -6.8811e-04,  ..., -9.5650e-04,
          -4.6588e-04,  1.4300e-04],
         [-2.5458e-04,  3.1817e-04, -5.9824e-04,  ..., -7.5208e-04,
          -3.3627e-04, -9.6987e-05],
         [-7.7710e-04,  5.1046e-04, -1.1426e-03,  ...,  2.0354e-04,
           3.2225e-04,  5.9364e-04]],

        [[-8.2952e-04,  3.6080e-04, -8.2522e-04,  ..., -3.4360e-04,
          -2.7818e-04, -8.9483e-05],
         [-8.6895e-04,  9.8387e-05, -9.1035e-04,  ..., -2.4403e-05,
          -2.7053e-04,  6.0674e-04],
         [-4.5166e-05,  9.2621e-04, -6.3400e-04,  ..., -2.6909e-04,
          -2.1475e-04, -4.9874e-05],
         ...,
         [-1.0955e-03, -3.3989e-04, -6.5547e-04,  ..., -6.8884e-04,
          -1.7531e-04,  1.4254e-04],
         [-5.0991e-04,  3.7387e-04, -1.3052e-03,  ..., -7.1968e-04,
          -3.1204e-04,  7.4013e-04],
         [-8.8168e-04,  1.2747e-04, -8.3836e-04,  ..., -2.8755e-04,
          -2.1816e-04,  4.2323e-04]],

        [[-7.0337e-04,  9.1830e-04, -4.7592e-04,  ..., -3.5901e-05,
          -7.6147e-04, -2.3867e-04],
         [-8.2269e-04,  8.2317e-04, -5.0809e-04,  ..., -1.9065e-04,
          -7.9242e-04, -6.9070e-05],
         [-4.1712e-04,  4.5298e-04, -3.4852e-04,  ..., -9.7097e-04,
          -6.4827e-04,  8.5337e-05],
         ...,
         [-1.3881e-03,  6.7182e-04, -5.9062e-05,  ...,  9.1908e-05,
           1.5565e-05,  5.9654e-04],
         [-8.5354e-04,  2.8523e-04, -7.4221e-04,  ..., -1.4606e-04,
          -1.8994e-06,  2.6667e-04],
         [-1.0129e-03,  2.0531e-04, -1.0654e-03,  ..., -7.0820e-04,
           1.3210e-04,  2.2057e-04]],

        [[-6.0824e-04,  6.6496e-04, -6.4065e-04,  ..., -5.8679e-04,
          -6.2874e-04, -4.1090e-04],
         [-5.7032e-04,  1.0276e-03, -1.0276e-03,  ..., -1.6347e-04,
           3.0606e-04,  3.1247e-04],
         [-7.4883e-04, -3.8714e-05, -8.7157e-04,  ..., -6.7081e-05,
          -3.4373e-04, -3.3160e-04],
         ...,
         [-6.0949e-04,  2.0780e-04, -1.5249e-04,  ..., -3.1569e-04,
          -6.5802e-04, -1.0140e-04],
         [-6.1584e-04, -2.1086e-05, -6.7097e-04,  ..., -9.7414e-05,
          -3.9821e-04, -3.7273e-05],
         [-5.3451e-04,  6.9031e-04, -4.3384e-04,  ..., -9.7603e-04,
          -6.4046e-04, -4.5212e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] where can I locate the person in white to the left ? ', '<Img><ImageHere></Img> [refer] the location of back airplace is ', '<Img><ImageHere></Img> [refer] the location of girl in middle right is ', '<Img><ImageHere></Img> [refer] where is eke r ? ', '<Img><ImageHere></Img> [refer] the location of kid on right is ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of bald man cutting cake ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 2.6729e-01,  4.0668e-01,  4.9321e-01,  ...,  3.6588e-01,
          -6.5192e-01,  3.3761e-01],
         [ 4.1055e-01,  5.5106e-01,  3.6215e-01,  ...,  3.5921e-01,
          -9.5123e-01,  1.8526e-01],
         [-5.9685e-01,  9.7048e-01,  7.4727e-01,  ...,  1.1925e+00,
           1.8212e-02, -5.7731e-01],
         ...,
         [ 7.7622e-02,  3.0642e-01,  3.6965e-01,  ..., -4.3647e-01,
          -1.1976e+00, -4.9308e-01],
         [ 6.5904e-01,  3.6018e-02,  3.2916e-01,  ..., -8.4430e-01,
          -1.9389e+00, -4.0647e-01],
         [-3.1010e-01, -2.4794e-01, -8.5300e-02,  ...,  1.8809e-01,
          -1.2718e+00, -4.7807e-01]],

        [[-2.4785e-01, -6.9219e-01,  2.5772e-01,  ...,  1.0576e+00,
           9.4249e-01,  2.6996e-01],
         [-2.1541e-02, -7.1559e-01,  1.8075e-02,  ...,  5.7646e-01,
           4.0978e-02,  4.1467e-01],
         [-2.4571e-01,  2.8188e-01,  7.5846e-01,  ...,  3.0923e-01,
          -1.0097e+00,  4.7230e-02],
         ...,
         [ 8.3360e-02, -4.5717e-01, -4.5099e-01,  ...,  9.9755e-02,
           1.1831e+00, -4.9535e-01],
         [ 5.8519e-02,  3.0884e-01,  5.0542e-01,  ...,  4.7066e-01,
          -1.4903e+00,  1.7275e-01],
         [-3.0245e-01,  2.2826e-01,  6.1124e-01,  ..., -7.4306e-02,
          -1.9860e+00,  3.9608e-01]],

        [[ 7.9101e-01,  4.1465e-01, -5.4016e-01,  ...,  5.5200e-01,
          -7.1898e-01, -1.3019e+00],
         [ 6.9799e-02, -1.7439e-01,  5.4274e-01,  ...,  7.4417e-01,
           6.8117e-01,  7.3451e-01],
         [-5.3758e-01, -9.3327e-01,  9.4574e-02,  ...,  1.6551e-01,
          -9.9576e-01, -6.2716e-01],
         ...,
         [-7.6786e-01, -1.4475e+00,  3.6886e-01,  ...,  1.5931e-02,
           2.4153e-01,  5.8010e-01],
         [ 6.3628e-01,  1.0351e+00, -2.4205e-01,  ...,  8.0149e-01,
          -1.4052e-01,  2.7154e-01],
         [ 3.7168e-01,  4.5456e-01, -3.0184e-02,  ..., -5.9711e-02,
           3.0696e-04, -2.8378e-01]],

        [[-7.4514e-01, -5.8315e-01,  3.8786e-01,  ...,  6.5857e-01,
           6.0879e-01,  1.2399e+00],
         [-7.6176e-01, -7.4223e-01,  1.6317e-01,  ...,  1.8504e+00,
          -4.6617e-01, -4.8926e-01],
         [-4.0296e-01, -2.2700e-01,  5.6768e-01,  ...,  1.0171e+00,
          -1.8844e-01,  1.4601e-01],
         ...,
         [-9.4310e-01, -8.6744e-01, -2.5286e-01,  ...,  6.6276e-01,
           5.0535e-01,  1.5528e+00],
         [-4.2317e-01, -5.7068e-01,  4.7400e-01,  ...,  6.4506e-01,
           6.5651e-01,  1.0934e+00],
         [ 6.1887e-03,  1.2605e+00,  3.4889e-01,  ...,  9.5643e-02,
          -8.1109e-01, -1.1669e+00]],

        [[ 8.7062e-02, -1.1888e+00,  1.1299e+00,  ...,  1.0817e+00,
           3.2847e-01,  5.2302e-01],
         [-5.2769e-01,  9.1540e-01, -5.8290e-02,  ...,  5.6497e-01,
          -5.1522e-01, -9.7560e-01],
         [ 7.4933e-01,  6.6145e-01, -1.0638e+00,  ...,  8.8272e-01,
          -9.8840e-01,  1.0461e-02],
         ...,
         [-1.4978e-01, -9.4178e-02, -7.3672e-01,  ...,  1.7346e+00,
          -1.3003e+00,  4.1874e-01],
         [-6.1829e-01, -1.2936e+00,  3.5230e-01,  ...,  9.9298e-01,
          -4.0890e-01,  1.2317e-01],
         [-5.5867e-01, -1.7338e+00,  1.1618e+00,  ...,  1.0637e+00,
           8.0587e-02,  4.1397e-01]],

        [[-7.1645e-03,  1.3142e+00,  3.5949e-01,  ...,  8.1055e-01,
          -6.4018e-01, -1.5019e+00],
         [-4.0771e-02,  5.5110e-01,  3.8749e-01,  ...,  1.5110e+00,
          -6.0926e-01, -1.2594e+00],
         [ 4.4115e-02,  9.9409e-01,  8.0222e-02,  ...,  1.0451e+00,
          -9.9354e-01, -1.2547e+00],
         ...,
         [-1.1371e-01,  1.2433e+00,  2.4464e-01,  ...,  9.2847e-01,
          -8.5802e-01,  1.2541e-01],
         [-2.2577e-01, -1.5172e-01,  6.5690e-02,  ...,  4.9353e-01,
          -7.3378e-01, -3.8052e-01],
         [-1.4893e+00,  6.5176e-01, -1.5027e-01,  ...,  7.0563e-01,
          -1.4073e+00, -1.6604e+00]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] where can I locate the person in white to the left ? ', '<Img><ImageHere></Img> [refer] the location of back airplace is ', '<Img><ImageHere></Img> [refer] the location of girl in middle right is ', '<Img><ImageHere></Img> [refer] where is eke r ? ', '<Img><ImageHere></Img> [refer] the location of kid on right is ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of bald man cutting cake ']
processed prompt_list:['where can I locate the person in white to the left ?', 'the location of back airplace is', 'the location of girl in middle right is', 'where is eke r ?', 'the location of kid on right is', 'from this image, tell me the location of bald man cutting cake']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-3.0466e-04, -2.6470e-05, -8.6706e-04,  ..., -6.8305e-05,
          -4.8760e-04, -6.8316e-04],
         [-3.3731e-04, -1.0380e-04, -8.2278e-04,  ..., -1.9786e-05,
          -4.3735e-04, -6.9938e-04],
         [-9.0434e-04, -3.1726e-05, -4.5790e-04,  ..., -8.2308e-04,
          -6.9642e-04, -2.8894e-04],
         ...,
         [-8.8278e-04, -5.5590e-05, -6.6601e-04,  ..., -1.9728e-04,
          -6.4652e-04,  1.3044e-03],
         [-3.7174e-04, -6.9446e-04, -9.3114e-05,  ..., -6.3829e-04,
          -1.1602e-04,  3.5794e-04],
         [-5.9360e-04, -1.0545e-04, -2.1767e-04,  ...,  4.4271e-04,
          -3.3863e-04,  8.4835e-04]],

        [[-6.2400e-04, -2.1574e-04, -1.2337e-03,  ..., -5.5499e-04,
          -3.0224e-04, -2.0907e-04],
         [-6.5040e-04, -3.3827e-04, -1.4386e-03,  ..., -5.1120e-04,
           2.6558e-04, -2.1201e-04],
         [-4.1500e-04,  2.8924e-04, -8.0675e-04,  ..., -5.5760e-04,
           1.2481e-04, -1.7309e-04],
         ...,
         [-6.2772e-04,  6.9826e-04, -7.3925e-04,  ...,  7.6022e-05,
          -1.3119e-04,  8.1026e-04],
         [-6.6061e-04, -1.0060e-04, -8.8625e-04,  ..., -1.5162e-04,
           5.4402e-05, -1.6276e-04],
         [-5.9064e-04, -3.2780e-05, -6.2228e-04,  ..., -1.5365e-04,
           1.8445e-04, -5.4773e-05]],

        [[-8.0918e-04,  4.0104e-06, -7.4839e-04,  ..., -9.0225e-04,
          -3.8179e-04, -3.0605e-04],
         [-9.1414e-04,  2.0191e-04, -1.4052e-03,  ..., -2.8356e-04,
          -2.3412e-04,  6.2369e-04],
         [-5.5248e-04, -1.2086e-04, -7.2857e-04,  ..., -1.1353e-03,
          -3.4055e-05, -8.7452e-05],
         ...,
         [-7.6929e-04,  1.5971e-04, -1.0683e-03,  ..., -9.4733e-04,
          -2.6325e-04,  2.7539e-04],
         [-1.1835e-03,  6.1864e-04, -1.3074e-03,  ..., -5.6437e-04,
          -1.9981e-04,  3.2085e-04],
         [-8.8223e-04,  2.7627e-04, -5.0056e-04,  ..., -3.9226e-04,
          -7.4025e-04,  1.1563e-04]],

        [[-5.1583e-04,  1.2444e-04, -9.6231e-04,  ..., -4.2962e-04,
           3.2328e-05,  5.7805e-04],
         [-9.4434e-04,  8.9108e-04, -4.5586e-04,  ..., -7.1498e-05,
          -6.8043e-04,  2.1593e-04],
         [-6.8174e-04,  6.1323e-04, -3.4518e-04,  ...,  1.6963e-05,
          -3.8423e-04,  2.3918e-04],
         ...,
         [-3.5931e-04, -2.2302e-04, -9.1491e-04,  ..., -3.4339e-04,
          -6.8143e-05,  2.2267e-04],
         [-4.4394e-04, -1.1854e-05, -1.0955e-03,  ..., -2.4061e-04,
           1.6591e-04,  6.3277e-04],
         [-4.6445e-04,  1.1391e-03, -5.1187e-04,  ..., -1.1462e-04,
          -1.0128e-04, -1.3416e-04]],

        [[-7.5402e-04,  2.1737e-04, -1.3056e-03,  ..., -2.6203e-04,
          -1.1960e-05,  9.7591e-04],
         [-3.7079e-04,  2.2130e-04, -4.4595e-04,  ..., -2.8251e-04,
          -1.9100e-04,  1.9911e-04],
         [-5.1314e-04, -1.8582e-04, -3.6377e-04,  ..., -4.5692e-04,
          -2.7706e-04,  9.5101e-04],
         ...,
         [-6.2966e-04,  1.4075e-04, -6.5920e-04,  ...,  1.0074e-04,
          -3.8985e-04,  4.2914e-04],
         [-3.1547e-04, -3.8094e-04, -7.1586e-04,  ..., -3.0266e-04,
          -1.7102e-04,  1.8074e-04],
         [-6.6939e-04, -4.8008e-05, -9.8462e-04,  ..., -6.3900e-04,
          -4.2311e-05,  7.2683e-04]],

        [[-6.3200e-04,  1.0196e-03, -2.9715e-04,  ..., -5.8236e-04,
          -5.5181e-04,  5.2078e-04],
         [-9.4773e-04,  3.9742e-04, -5.5079e-04,  ..., -3.5635e-04,
          -6.0302e-04,  5.6978e-04],
         [-1.0262e-03,  2.1671e-05, -1.1515e-03,  ..., -2.9904e-04,
          -7.2291e-04,  1.2702e-03],
         ...,
         [-1.0952e-03,  1.9911e-05, -7.1191e-04,  ...,  2.9238e-04,
          -8.1238e-04,  1.2000e-03],
         [-7.0089e-04, -2.5430e-04, -7.7436e-04,  ..., -6.9564e-04,
          -1.0848e-04, -1.2994e-05],
         [-1.1664e-03, -3.1562e-04, -1.1797e-03,  ..., -1.8171e-04,
          -7.6729e-04,  6.1840e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.3343,  0.0403,  1.0202,  ...,  0.6458,  0.7432,  0.7551],
         [ 0.0494, -0.0172, -0.2658,  ...,  0.6415,  0.3839,  1.1073],
         [ 0.7108, -0.0583,  0.7301,  ..., -1.1656, -0.3124,  0.8052],
         ...,
         [ 0.6786,  1.6000,  1.1722,  ...,  1.3601,  1.4249, -0.4301],
         [-0.3598,  0.0884,  0.2090,  ...,  1.0584, -0.3129, -0.3492],
         [-0.3726,  0.1063,  0.2374,  ...,  1.0463, -0.2757, -0.3275]],

        [[ 1.0259, -0.2431,  0.1311,  ...,  0.8749, -0.3542,  2.4730],
         [-0.4091,  0.2253,  0.5222,  ...,  0.2375, -0.9105, -0.2157],
         [ 0.9617,  1.4648, -0.7941,  ...,  0.1386,  0.3300,  1.3971],
         ...,
         [ 0.0380, -0.1389, -0.0144,  ...,  0.2182, -0.0676, -0.0097],
         [ 0.1244, -0.0721,  0.1659,  ...,  0.2754, -0.7275, -0.2685],
         [ 0.0885, -0.0588,  0.1570,  ...,  0.2891, -0.6056, -0.2585]],

        [[ 0.7391, -1.1509, -0.3531,  ...,  0.6958,  0.1139,  1.3664],
         [ 0.4071,  0.0758, -1.1683,  ...,  0.3062, -0.7059,  1.3785],
         [ 1.0795,  0.2355, -2.2065,  ...,  0.0838, -0.1220,  1.5957],
         ...,
         [ 0.0184, -0.1463, -0.0100,  ...,  0.1920, -0.0805, -0.0029],
         [ 0.2661, -0.5050, -0.3072,  ...,  0.0202, -0.1318,  0.0316],
         [ 0.2463, -0.5597, -0.2168,  ...,  0.2162,  0.0496, -0.0607]],

        [[ 0.6198, -0.4194, -0.3097,  ...,  0.1791, -0.6101,  1.3535],
         [ 0.7038,  0.1260, -0.5158,  ..., -0.4595, -1.3595,  1.2531],
         [-0.2994,  0.7225, -0.3684,  ..., -0.1743, -0.2401,  1.2005],
         ...,
         [-0.1711,  0.4339,  0.5185,  ...,  0.3268, -0.1072,  0.4102],
         [ 0.3325, -0.0648,  0.0936,  ...,  0.1142, -0.2411,  0.3295],
         [ 0.3227, -0.0729,  0.1021,  ...,  0.1327, -0.2252,  0.3342]],

        [[-0.1177, -0.5616,  0.1099,  ...,  1.0937,  0.0055,  2.1026],
         [-0.3571, -0.2986,  0.2633,  ...,  0.8108, -0.3059,  0.2203],
         [ 0.7501,  0.6620, -1.4592,  ..., -0.0872, -1.0149,  1.7393],
         ...,
         [ 0.0407, -0.1222, -0.0130,  ...,  0.1964, -0.0667,  0.0125],
         [ 0.1169, -1.0346, -0.1785,  ...,  0.3883, -0.3593, -0.2199],
         [ 0.1861, -1.0143, -0.1597,  ...,  0.4180, -0.3554, -0.2281]],

        [[ 0.6851, -0.1682, -0.3291,  ...,  0.6277,  0.0473,  0.8775],
         [-0.4538,  0.6692, -0.2452,  ...,  0.5585, -0.3225,  0.0771],
         [ 0.5211, -0.4190,  0.1466,  ...,  0.2706, -0.1475,  1.0092],
         ...,
         [ 0.8303, -0.0831,  0.6079,  ..., -0.1845,  0.2986, -0.3010],
         [ 1.3222, -0.1941, -0.5939,  ...,  0.6623,  0.8782,  0.0720],
         [ 0.4119, -0.2309, -0.1210,  ...,  0.4939, -0.0127, -0.0165]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ']
processed prompt_list:['Provide a description of what is presented in the photo.', 'Using language, provide a short account of the image.', 'Briefly describe this image.', 'Provide a concise depiction of this image.', 'Write a description for the photo.', 'Present a short description of this image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.2254e-04,  2.0195e-04, -1.2239e-03,  ...,  1.5896e-04,
          -3.8844e-05,  3.6258e-04],
         [-8.4948e-04, -1.1973e-04, -1.0878e-03,  ...,  5.0914e-05,
           2.2192e-04,  5.5152e-04],
         [-8.2479e-04, -2.3438e-04, -5.0658e-04,  ..., -6.5688e-04,
           7.4108e-04,  3.2107e-04],
         ...,
         [-3.1053e-04,  8.7238e-05, -8.1987e-05,  ..., -5.3847e-04,
          -3.9478e-04, -1.0657e-04],
         [-4.4865e-04,  8.2134e-04, -9.6566e-04,  ...,  3.4610e-04,
           3.0266e-04,  1.2735e-04],
         [-4.3872e-04,  8.2759e-04, -9.7051e-04,  ...,  3.7463e-04,
           3.1409e-04,  1.3734e-04]],

        [[-6.8629e-04,  3.9500e-04, -1.3315e-03,  ...,  2.0539e-04,
           2.7934e-04,  4.6334e-04],
         [-1.1050e-03,  7.7423e-04, -1.1116e-03,  ...,  1.2706e-04,
           3.7998e-04,  1.1688e-04],
         [-5.0156e-04,  5.7219e-04, -8.1700e-04,  ..., -3.1067e-04,
           9.4668e-05, -3.2427e-04],
         ...,
         [ 5.6318e-04, -1.0505e-03,  1.1482e-03,  ..., -2.8420e-04,
           3.2708e-05, -7.8760e-04],
         [-3.6235e-04,  1.9321e-04, -1.1654e-03,  ...,  3.0089e-04,
           8.5335e-04,  1.1840e-04],
         [-2.5099e-04,  9.5999e-05, -1.1270e-03,  ...,  3.1845e-04,
           9.1768e-04,  6.9899e-05]],

        [[-5.6917e-04,  4.8403e-04, -1.0561e-03,  ..., -1.6047e-04,
          -1.4815e-04, -5.4705e-05],
         [-1.1642e-03, -1.1066e-04, -1.1069e-03,  ..., -1.0083e-04,
           4.6552e-04,  4.2047e-04],
         [-1.0802e-03, -3.1161e-05, -6.8799e-04,  ..., -1.2536e-04,
           2.4953e-04, -3.0272e-04],
         ...,
         [ 5.6253e-04, -1.0590e-03,  1.1600e-03,  ..., -2.7395e-04,
           1.7343e-05, -7.6828e-04],
         [-8.2040e-04,  7.4340e-04, -1.0029e-03,  ...,  4.0045e-04,
           3.1228e-04,  2.9089e-04],
         [-8.2888e-04,  7.5530e-04, -1.0093e-03,  ...,  5.0986e-04,
           3.9426e-04,  3.4276e-04]],

        [[-8.7878e-04, -1.2459e-04, -8.3964e-04,  ..., -2.3938e-04,
           3.4870e-04, -2.8616e-04],
         [-1.1885e-03, -2.2850e-04, -9.6164e-04,  ..., -2.3112e-04,
           7.0146e-04,  4.3889e-04],
         [-3.6229e-04,  6.3557e-04, -7.7149e-04,  ..., -4.0943e-04,
          -6.3772e-05,  6.1858e-05],
         ...,
         [-7.8317e-04,  9.3284e-04, -9.3522e-04,  ..., -7.4658e-05,
           2.1569e-04,  5.2148e-04],
         [-6.3001e-04,  6.0673e-04, -8.1246e-04,  ...,  3.8200e-04,
          -9.9998e-06,  3.4161e-04],
         [-6.2715e-04,  6.0386e-04, -8.1054e-04,  ...,  3.9862e-04,
          -7.4329e-07,  3.2664e-04]],

        [[-7.4209e-04, -3.2395e-04, -3.1135e-04,  ..., -2.9612e-04,
           2.6568e-04, -5.3849e-04],
         [-6.8528e-04,  7.2274e-04, -1.2947e-03,  ...,  1.3954e-04,
           3.6848e-04,  2.4708e-04],
         [-7.1307e-04, -9.7518e-05, -4.6166e-04,  ..., -1.5267e-05,
           3.9197e-04, -1.9611e-04],
         ...,
         [ 5.5452e-04, -1.0582e-03,  1.1383e-03,  ..., -2.7184e-04,
           1.7564e-05, -7.4486e-04],
         [-6.8428e-04,  7.4674e-04, -6.3885e-04,  ...,  4.6328e-04,
           4.3891e-04,  3.7266e-04],
         [-6.8161e-04,  7.2466e-04, -6.4992e-04,  ...,  4.8579e-04,
           4.3565e-04,  3.6753e-04]],

        [[-1.2547e-03,  3.0031e-04, -1.1316e-03,  ..., -1.7532e-04,
           2.0860e-04,  9.0166e-04],
         [-8.1996e-04,  6.8829e-04, -1.1779e-03,  ...,  1.7721e-05,
           2.7023e-04,  5.7706e-04],
         [-8.1548e-04,  5.7636e-05, -1.8101e-04,  ..., -8.5025e-04,
           3.9488e-04,  1.9101e-04],
         ...,
         [-8.1802e-04,  1.4350e-04, -4.5223e-04,  ..., -9.6606e-04,
           2.9082e-04,  5.7573e-05],
         [-1.2682e-03,  6.2643e-04, -5.0286e-04,  ..., -1.0728e-03,
           2.6724e-04,  5.1532e-04],
         [-9.7738e-04,  4.7827e-04, -6.8853e-04,  ...,  2.2008e-04,
           2.4316e-04,  1.4502e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] where can I locate the the space behind the guy talking on his phone ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of big elephant ', '<Img><ImageHere></Img> [refer] give me the location of red neck tie ', '<Img><ImageHere></Img> [refer] could you tell me the location for wooden surfboard ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for the wool blocking grass ? ', '<Img><ImageHere></Img> [refer] give me the location of black and yellow boot ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-1.1694e+00, -3.7379e-01,  3.1355e-01,  ...,  9.7755e-01,
          -1.5958e-01,  3.1561e-01],
         [-5.4000e-01, -4.3913e-01,  3.6938e-01,  ...,  7.5564e-01,
          -4.7822e-02,  8.7822e-02],
         [ 4.1060e-01, -1.3761e-01, -2.5574e-01,  ...,  1.6019e+00,
          -6.6586e-01, -6.3118e-01],
         ...,
         [-6.5781e-01, -6.3919e-01,  1.1770e+00,  ...,  1.1352e+00,
           3.0187e-01,  3.9304e-01],
         [-9.8888e-01, -5.8603e-01,  6.4510e-01,  ...,  1.1191e+00,
           2.8186e-01,  2.5051e-01],
         [-5.3161e-01, -7.3418e-01,  9.9569e-01,  ...,  1.2473e+00,
           5.1258e-01,  3.2284e-01]],

        [[-2.0615e-01, -4.3199e-01,  2.1628e-01,  ...,  3.9807e-01,
           3.2188e-01, -5.2290e-01],
         [ 3.1741e-01, -1.0615e-01,  8.1701e-01,  ..., -4.7418e-01,
          -5.6391e-01, -1.9838e-01],
         [ 6.3658e-02,  1.9753e-01,  2.7839e-01,  ..., -2.4171e-01,
          -3.4096e-01,  2.3566e-01],
         ...,
         [-4.8556e-01, -5.4735e-01,  6.6305e-01,  ...,  4.8192e-01,
           1.0257e+00,  5.0986e-01],
         [-1.5569e+00, -1.4718e+00,  1.8397e-01,  ...,  3.0282e-01,
           3.6450e-01,  6.3672e-01],
         [-2.1116e-01, -3.7609e-01,  2.5774e-01,  ...,  2.7637e-02,
          -3.4319e-01,  6.2252e-01]],

        [[-9.6915e-02, -9.5264e-01, -5.1382e-01,  ..., -3.8476e-01,
          -9.4695e-01,  5.4211e-02],
         [-5.4006e-01, -2.0425e-01,  3.8322e-01,  ..., -5.3232e-01,
           5.0085e-01,  1.6277e-01],
         [-3.4276e-02, -7.7183e-01,  4.3618e-01,  ..., -4.6101e-01,
          -1.3945e-01, -1.8531e-01],
         ...,
         [-8.6811e-01, -6.3623e-01,  1.8967e-01,  ...,  7.1350e-02,
          -9.7479e-01,  3.5793e-01],
         [-2.5130e-01, -7.4196e-01, -4.1864e-01,  ..., -1.6593e-01,
          -1.0725e+00,  2.5007e-01],
         [ 3.3031e-01,  7.7923e-02,  8.2285e-01,  ...,  9.6005e-01,
           6.1238e-01,  3.3597e-01]],

        [[ 9.7240e-02, -1.3737e+00,  8.8368e-01,  ...,  4.7145e-02,
          -1.0451e-02,  1.0738e+00],
         [ 1.1142e+00, -1.1353e+00, -5.8333e-01,  ..., -4.7255e-01,
          -3.8285e-01, -3.3189e-01],
         [ 3.8422e-01,  3.3392e-01,  3.9786e-01,  ..., -7.1590e-01,
          -2.5517e-01, -4.9740e-01],
         ...,
         [ 8.9815e-01,  1.7655e-01,  1.3726e-01,  ...,  6.3182e-01,
           9.5419e-02, -3.1537e-01],
         [-2.0934e-01,  5.9287e-01,  5.4549e-01,  ...,  1.4248e-01,
          -1.8699e-01,  2.8134e-01],
         [ 9.3141e-02, -1.6644e+00,  6.0351e-01,  ...,  6.5990e-03,
           4.0991e-01,  8.8869e-01]],

        [[-5.7805e-01, -1.7186e+00,  3.5288e-01,  ...,  3.3442e-01,
          -6.3513e-02,  5.1995e-01],
         [-1.6911e-01, -2.9903e-01,  1.6295e-02,  ...,  5.1966e-01,
          -2.8196e-01, -3.0307e-01],
         [ 4.4713e-01, -1.2212e-01,  8.3841e-04,  ...,  6.8436e-02,
          -1.4807e-01, -8.0454e-02],
         ...,
         [-2.4329e-01, -1.0017e+00,  1.6183e+00,  ..., -1.4367e-01,
          -1.5945e+00,  4.3205e-01],
         [-1.1238e-01, -8.3303e-01,  1.0387e+00,  ...,  2.4737e-01,
          -1.4066e+00,  9.0833e-02],
         [-8.8522e-02, -1.3354e+00,  1.1754e+00,  ...,  9.0363e-01,
           3.1660e-01,  6.6387e-01]],

        [[-1.2297e-01,  5.8955e-01,  6.1488e-01,  ...,  2.9477e-01,
           3.5087e-01, -2.5232e-02],
         [-6.2042e-01, -6.0161e-01,  9.9456e-01,  ...,  4.4860e-01,
           4.3562e-02, -3.5255e-01],
         [ 4.6683e-01,  7.3013e-01, -5.6399e-01,  ...,  1.1031e+00,
           2.3840e-01, -9.2411e-01],
         ...,
         [ 3.4709e-01, -4.3984e-01,  1.3790e+00,  ...,  7.9495e-01,
          -7.0426e-01, -8.5560e-01],
         [ 1.8599e-01, -1.3186e+00,  6.0520e-01,  ...,  1.0345e+00,
           1.2884e-01,  4.1190e-01],
         [-1.1034e-02, -1.1157e+00,  3.8475e-01,  ...,  3.6655e-01,
          -8.2660e-01,  5.6556e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] where can I locate the the space behind the guy talking on his phone ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of big elephant ', '<Img><ImageHere></Img> [refer] give me the location of red neck tie ', '<Img><ImageHere></Img> [refer] could you tell me the location for wooden surfboard ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for the wool blocking grass ? ', '<Img><ImageHere></Img> [refer] give me the location of black and yellow boot ']
processed prompt_list:['where can I locate the the space behind the guy talking on his phone ?', 'from this image, tell me the location of big elephant', 'give me the location of red neck tie', 'could you tell me the location for wooden surfboard ?', 'could you tell me the location for the wool blocking grass ?', 'give me the location of black and yellow boot']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-8.1047e-04,  2.0012e-04, -9.4047e-04,  ..., -7.0904e-04,
          -7.9404e-05,  3.9857e-04],
         [-8.0862e-04,  4.8308e-04, -1.1937e-03,  ...,  6.1920e-04,
          -1.4445e-04, -2.6147e-05],
         [-5.8625e-04, -9.7490e-05, -7.9752e-04,  ..., -3.3119e-04,
           1.6298e-04,  4.0733e-04],
         ...,
         [-6.8234e-04,  2.5903e-04, -6.6806e-04,  ..., -7.3139e-04,
          -1.0160e-04,  3.1284e-04],
         [-7.2376e-04,  8.5051e-05, -8.1572e-04,  ..., -6.5563e-04,
           1.9655e-05,  5.1030e-04],
         [-7.1352e-04,  3.2725e-04, -1.0548e-03,  ..., -4.9313e-04,
          -2.2491e-04,  7.6588e-04]],

        [[-6.2882e-04,  3.1536e-04, -1.0678e-03,  ...,  9.9893e-05,
          -3.6713e-04, -3.3129e-05],
         [-2.9670e-04,  5.7086e-04, -9.6231e-04,  ...,  7.4776e-05,
           2.9526e-04,  5.8813e-04],
         [-7.3631e-04,  3.9021e-04, -1.0680e-03,  ..., -1.8312e-04,
           2.2482e-04,  7.5980e-04],
         ...,
         [-6.9893e-04,  1.0167e-04, -1.2288e-03,  ..., -3.0032e-04,
          -3.2555e-05,  3.9742e-04],
         [-7.2707e-04, -3.3680e-05, -9.8368e-04,  ..., -4.0702e-04,
          -2.5542e-04,  1.4636e-04],
         [-1.0988e-03,  7.4501e-04, -1.1142e-03,  ..., -2.5649e-04,
          -2.9196e-04,  1.6036e-04]],

        [[-1.4514e-03,  7.7044e-04, -1.8416e-04,  ..., -1.1752e-03,
          -4.3617e-04,  6.5044e-04],
         [-1.2000e-03,  5.8622e-04, -1.0963e-03,  ..., -8.6886e-04,
          -2.9882e-04,  1.2067e-03],
         [-1.4045e-03,  6.3771e-04, -4.9716e-04,  ..., -9.2645e-04,
          -1.8058e-04,  3.4156e-04],
         ...,
         [-1.2150e-03,  7.6987e-04, -4.5492e-04,  ..., -8.3653e-04,
          -4.2945e-04,  3.2923e-04],
         [-1.3839e-03,  4.4687e-04, -1.0494e-04,  ..., -1.3125e-03,
          -4.7828e-04,  6.9624e-04],
         [-1.0988e-03,  2.9609e-04, -1.2062e-03,  ..., -2.4203e-04,
          -3.8377e-04,  1.0617e-03]],

        [[-4.9058e-04,  3.8066e-06, -8.0796e-04,  ..., -5.3721e-04,
          -2.2471e-04, -2.0446e-05],
         [-7.3528e-05, -2.1695e-04, -3.2483e-04,  ..., -7.9684e-04,
          -1.8587e-04, -1.3539e-04],
         [-3.4358e-04,  2.1611e-04,  3.4119e-04,  ..., -7.6983e-04,
          -5.3377e-04,  2.6617e-04],
         ...,
         [-9.5337e-04,  3.4323e-04, -4.3348e-04,  ..., -1.5313e-04,
          -6.9606e-04, -2.0402e-04],
         [-9.9338e-04,  2.7489e-04, -7.4978e-04,  ...,  3.5593e-04,
           6.3698e-04,  7.6956e-05],
         [-3.7597e-04, -2.2346e-04, -6.8146e-04,  ..., -5.8764e-04,
          -6.6550e-05,  1.5001e-04]],

        [[-6.8332e-04,  4.5769e-04, -1.0712e-03,  ..., -4.5197e-04,
          -4.1766e-04,  5.9743e-05],
         [-5.3332e-04,  5.8411e-04, -1.0829e-03,  ...,  1.6675e-04,
          -4.1544e-04,  3.5003e-04],
         [-7.3267e-04,  4.6252e-04, -1.0356e-03,  ...,  1.6917e-04,
          -4.2998e-04,  8.6235e-04],
         ...,
         [-2.1090e-04, -4.7843e-05, -4.1847e-04,  ...,  4.7992e-04,
          -3.4035e-04,  1.9911e-04],
         [-7.5302e-04,  3.4667e-04, -3.2351e-04,  ..., -2.1353e-05,
          -1.1985e-04, -1.6975e-04],
         [-5.3619e-04,  2.0493e-04, -9.7216e-04,  ..., -4.6471e-04,
          -5.4853e-04,  4.4571e-04]],

        [[-5.1069e-04,  3.3523e-04, -1.9888e-04,  ...,  2.6010e-04,
           9.5814e-05,  5.8344e-04],
         [-5.0288e-04,  1.1977e-04, -6.1278e-04,  ...,  1.2358e-04,
          -1.4677e-04, -3.6158e-04],
         [-3.3414e-04,  3.2889e-04, -3.7779e-04,  ...,  2.5424e-04,
          -6.6685e-04,  9.2062e-05],
         ...,
         [-9.3847e-04,  7.1384e-04, -7.2336e-04,  ..., -1.0841e-03,
          -7.7095e-05, -8.9885e-05],
         [-9.4096e-04,  4.0163e-04, -8.9315e-04,  ..., -8.6351e-04,
          -7.1481e-05,  2.4158e-04],
         [-6.6248e-04,  3.8269e-04, -8.1421e-04,  ..., -1.0090e-03,
           3.2968e-05, -9.3630e-07]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what song is in a similar language to the language found at the top of the wall? ', '<Img><ImageHere></Img> [vqa] why has the man attached ropes to the cattle? ', '<Img><ImageHere></Img> [vqa] what type of area is this skateboarder in? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: these two cats are doing what activity? ', '<Img><ImageHere></Img> [vqa] what is the man in the blue shirt holding? ', '<Img><ImageHere></Img> [vqa] if the camera man jumped over the railing closest to them where would they land? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 3.5736e-01, -3.8997e-01,  1.4911e+00,  ..., -4.4562e-01,
           8.0933e-01,  8.4201e-01],
         [ 8.5181e-03,  2.8692e-02,  1.0404e+00,  ...,  1.0322e+00,
          -1.5269e+00, -1.5174e+00],
         [-3.7577e-01,  6.5773e-01,  5.6430e-01,  ...,  4.5401e-01,
          -1.2429e-01, -9.4767e-01],
         ...,
         [-7.7682e-02, -1.5056e-01,  8.3998e-01,  ...,  9.6141e-01,
           5.8496e-01,  4.9323e-01],
         [-4.0963e-02,  8.4934e-02,  7.8368e-01,  ...,  1.6149e+00,
           9.3408e-01,  1.3150e+00],
         [-1.1919e+00, -6.6432e-01,  9.1664e-01,  ...,  1.8194e-01,
           4.6924e-01,  7.2415e-01]],

        [[ 9.4400e-02, -1.0097e+00,  6.8921e-01,  ...,  1.4936e+00,
           3.5904e-01,  1.6437e+00],
         [-3.4997e-01, -1.1473e+00,  6.1647e-01,  ...,  1.5104e+00,
           4.7715e-01,  1.3897e+00],
         [-1.8976e-01,  6.7201e-02, -1.7998e-01,  ...,  4.2427e-01,
          -5.0806e-01, -7.3212e-01],
         ...,
         [-4.4889e-01, -3.9609e-01,  4.6296e-01,  ...,  2.2320e-01,
          -8.5818e-01, -4.9092e-01],
         [-5.0782e-02,  1.1796e+00, -3.8088e-01,  ...,  2.4615e-01,
           2.0577e-01,  6.8758e-02],
         [-1.5894e-01, -8.0297e-01, -5.0794e-01,  ...,  1.0450e+00,
          -4.0674e-01, -1.9886e-01]],

        [[-2.3728e-01,  1.2200e+00, -3.3629e-03,  ..., -1.2532e-01,
           6.7950e-01, -6.6685e-01],
         [ 5.9587e-01,  5.3349e-01, -1.1464e-01,  ..., -1.3130e-01,
          -1.0330e+00, -7.0455e-01],
         [-2.0908e-01, -1.9937e-01,  5.9225e-01,  ..., -5.7000e-01,
          -1.0685e-01, -2.3406e-01],
         ...,
         [ 8.2751e-02,  1.5455e+00, -6.7843e-01,  ...,  4.6697e-01,
          -6.9706e-01, -6.3461e-01],
         [ 5.6837e-01,  1.2283e+00,  5.8208e-01,  ..., -3.9293e-01,
           6.7369e-02,  1.9673e-02],
         [ 6.6824e-02, -4.9491e-01,  2.4983e-01,  ...,  5.3399e-01,
          -9.5526e-01, -2.4050e-01]],

        [[-6.5155e-01,  4.6028e-01,  7.1255e-01,  ...,  7.3299e-01,
          -5.0309e-01, -1.7292e-03],
         [-9.8622e-01,  4.6050e-01,  9.4140e-01,  ...,  8.6174e-01,
          -7.6715e-01, -1.2419e-03],
         [-4.1352e-01,  5.0797e-01,  1.2049e-01,  ..., -1.4665e-01,
          -9.0057e-01, -7.7185e-01],
         ...,
         [-3.5999e-01,  5.8859e-01,  3.5500e-01,  ...,  7.6228e-01,
          -3.1768e-01,  1.3023e-01],
         [-8.0736e-01, -3.6937e-01,  1.0867e+00,  ...,  1.0542e+00,
           6.5417e-01,  9.2898e-02],
         [-1.8365e-01, -5.3698e-01,  9.8119e-01,  ...,  1.0127e+00,
           8.8768e-01,  3.0067e-01]],

        [[ 8.9281e-01, -2.1673e-01, -1.1173e-01,  ...,  3.4056e-01,
           9.0498e-02,  7.4479e-01],
         [ 5.0783e-01,  4.2565e-01, -2.6050e-01,  ...,  5.9494e-01,
          -4.7653e-01,  7.4054e-01],
         [-3.2621e-01, -9.3658e-02,  2.7095e-01,  ...,  5.0078e-01,
          -7.0997e-01,  5.6633e-03],
         ...,
         [ 9.6174e-03, -8.5260e-01,  4.3359e-01,  ...,  1.4087e+00,
          -8.8971e-01, -2.0902e-01],
         [-5.0480e-01,  2.3072e-01,  2.5265e-01,  ...,  6.4424e-01,
          -3.4020e-01,  6.9035e-03],
         [ 9.2431e-01, -2.1515e-01,  5.8168e-03,  ...,  2.7826e-01,
           1.2152e-01,  6.9280e-01]],

        [[ 2.0811e-01, -1.9414e-01,  7.3446e-01,  ...,  9.4968e-01,
           6.1717e-01,  9.7729e-01],
         [-2.1519e-01, -4.2635e-01,  6.9031e-01,  ...,  7.0519e-01,
           6.4527e-01,  1.3649e+00],
         [-5.7518e-01,  3.3820e-01,  8.8806e-01,  ...,  1.4986e+00,
          -5.3238e-01, -6.4448e-01],
         ...,
         [ 1.5087e-01, -5.3819e-02,  1.1673e+00,  ...,  5.4423e-01,
           3.8420e-01,  1.5618e+00],
         [ 2.7994e-01, -2.0245e-01,  8.9666e-01,  ...,  1.0389e+00,
           7.6134e-01,  1.1016e+00],
         [ 1.4159e-01,  8.1450e-01,  4.2016e-01,  ...,  1.1800e+00,
          -1.9320e-01,  1.1053e+00]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what song is in a similar language to the language found at the top of the wall? ', '<Img><ImageHere></Img> [vqa] why has the man attached ropes to the cattle? ', '<Img><ImageHere></Img> [vqa] what type of area is this skateboarder in? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: these two cats are doing what activity? ', '<Img><ImageHere></Img> [vqa] what is the man in the blue shirt holding? ', '<Img><ImageHere></Img> [vqa] if the camera man jumped over the railing closest to them where would they land? ']
processed prompt_list:['Based on the image, respond to this question with a short answer: what song is in a similar language to the language found at the top of the wall?', 'why has the man attached ropes to the cattle?', 'what type of area is this skateboarder in?', 'Based on the image, respond to this question with a short answer: these two cats are doing what activity?', 'what is the man in the blue shirt holding?', 'if the camera man jumped over the railing closest to them where would they land?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.2029e-04,  9.6253e-06, -1.0041e-03,  ..., -2.3973e-04,
           9.6713e-05,  3.4149e-04],
         [-6.3874e-04,  6.6019e-04, -5.9489e-04,  ..., -8.9900e-04,
          -2.5240e-04, -8.2941e-05],
         [-6.7825e-04,  4.7335e-04, -6.8968e-04,  ..., -7.6250e-04,
          -4.3575e-04, -7.6571e-05],
         ...,
         [ 8.8613e-05,  9.3808e-04, -1.1208e-03,  ..., -5.0155e-04,
          -4.6738e-04,  4.3654e-04],
         [ 3.6325e-05, -2.0014e-04, -1.1387e-03,  ..., -3.4449e-04,
           2.2866e-05, -1.4815e-04],
         [-3.2515e-04, -2.2552e-05, -3.1900e-04,  ..., -1.0293e-03,
           4.0378e-05,  6.6814e-05]],

        [[-4.7925e-04,  1.1011e-04, -1.2108e-03,  ...,  2.2259e-04,
          -3.9464e-05,  1.1254e-04],
         [-4.6030e-04,  1.6539e-05, -1.1238e-03,  ..., -9.7839e-05,
           3.3788e-05,  7.4979e-05],
         [-7.5389e-04, -5.3802e-05, -1.2070e-03,  ..., -1.8482e-06,
          -5.4238e-04,  4.5644e-04],
         ...,
         [-9.3840e-04, -1.7296e-04, -7.7370e-04,  ...,  9.0848e-05,
          -3.3658e-04,  1.2329e-04],
         [-8.4189e-04,  2.7712e-04, -1.2875e-03,  ...,  2.6779e-04,
          -5.3175e-04,  9.0220e-04],
         [-3.9251e-04,  6.9241e-04, -5.2951e-04,  ..., -8.6491e-05,
          -2.0094e-05,  6.8481e-04]],

        [[-5.8046e-04,  4.6629e-04, -1.3135e-03,  ..., -9.4169e-04,
          -8.5918e-04,  3.4684e-04],
         [-3.2056e-04,  2.3059e-04, -7.6076e-04,  ..., -1.1220e-04,
          -5.2100e-04, -5.2582e-05],
         [-3.1524e-04,  5.1607e-04, -1.0743e-03,  ...,  1.4673e-04,
          -6.8746e-04,  6.3240e-04],
         ...,
         [-4.9907e-04,  4.2873e-04, -6.2313e-04,  ..., -5.8795e-04,
          -1.7301e-04, -4.8362e-05],
         [-7.1926e-04,  7.3654e-04, -1.1257e-03,  ..., -5.2349e-04,
          -4.4216e-04,  4.2153e-04],
         [-8.6088e-04, -1.0490e-05, -1.0183e-03,  ..., -1.2308e-03,
          -1.7742e-04,  1.2238e-04]],

        [[-5.2820e-04,  2.5921e-05,  8.5755e-05,  ..., -4.7183e-04,
          -8.7266e-04,  2.2236e-04],
         [-5.2534e-04, -6.7892e-06,  2.1749e-04,  ..., -7.1516e-04,
          -8.8819e-04,  4.3918e-05],
         [-6.0209e-04,  3.7189e-04,  6.1962e-05,  ...,  7.0490e-05,
          -1.8607e-04,  1.4527e-04],
         ...,
         [-8.3784e-04,  5.0736e-04, -1.0689e-03,  ..., -1.9793e-05,
           4.2795e-04,  7.3038e-04],
         [-9.1373e-04,  9.6342e-05, -5.6483e-04,  ..., -4.9190e-04,
          -1.7970e-04, -7.0008e-05],
         [-6.3808e-04,  6.2214e-05, -7.1088e-04,  ..., -3.7590e-04,
          -1.0052e-04, -5.4125e-05]],

        [[-1.1328e-03, -1.5695e-04, -6.2448e-04,  ..., -1.5850e-04,
           8.5080e-05,  5.0168e-04],
         [-1.2493e-03,  6.7107e-05, -8.8574e-04,  ..., -1.7943e-04,
           2.1064e-04,  5.1787e-04],
         [-6.7323e-04,  4.1030e-04, -1.1742e-03,  ..., -3.3614e-04,
          -3.1412e-04,  7.1868e-04],
         ...,
         [-1.0016e-03, -2.4874e-04, -1.0705e-03,  ...,  4.9748e-05,
          -2.9490e-04, -2.5448e-04],
         [-1.0041e-03,  4.7202e-04, -7.5046e-04,  ...,  4.6534e-04,
          -2.9298e-04, -9.7383e-05],
         [-9.7900e-04, -1.7285e-04, -6.9568e-04,  ..., -1.4892e-04,
           5.2349e-05,  4.5641e-04]],

        [[-5.6062e-04,  5.5443e-04, -1.1393e-03,  ...,  1.4968e-04,
           6.9542e-05,  5.5015e-04],
         [-3.8513e-04,  5.2066e-04, -9.7462e-04,  ..., -3.0576e-05,
           1.7280e-04,  4.2229e-04],
         [-6.0071e-04,  2.0798e-05, -3.6782e-04,  ..., -1.0358e-04,
          -5.0107e-04,  3.8975e-04],
         ...,
         [-6.0435e-04,  3.0360e-04, -5.7915e-04,  ..., -5.6964e-04,
           2.4749e-04,  3.7469e-04],
         [-5.8274e-04,  5.0269e-04, -1.0140e-03,  ..., -3.2193e-05,
           1.0286e-04,  4.8244e-04],
         [-2.6814e-04,  8.1097e-05, -6.3161e-04,  ..., -1.8150e-04,
           3.3082e-04, -7.3172e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-9.7402e-01,  4.8913e-01,  6.1185e-02,  ...,  7.8895e-04,
          -9.4198e-01,  2.2087e-01],
         [-2.4511e-03,  7.9477e-01, -5.1637e-01,  ...,  5.4456e-02,
          -1.0014e+00, -1.2146e-02],
         [-2.4102e-01,  6.7519e-01, -4.0367e-03,  ...,  2.1209e-01,
          -1.1051e+00,  1.9165e-01],
         ...,
         [-7.3216e-01, -5.7621e-02,  1.7121e-01,  ...,  5.3915e-02,
           9.1305e-02, -5.4088e-01],
         [ 4.2938e-01, -1.1475e+00,  4.9455e-01,  ..., -3.7455e-01,
          -8.9558e-02,  1.1988e-01],
         [ 7.7187e-01, -6.2721e-01, -2.5596e-01,  ..., -2.0831e-01,
          -2.6840e-01,  1.1453e+00]],

        [[ 1.0316e+00, -1.1018e+00,  3.2744e-01,  ...,  1.2194e+00,
           2.3270e-01,  2.4192e-01],
         [ 4.5416e-01, -3.4837e-01, -5.7140e-01,  ...,  3.1729e-01,
          -8.8788e-01,  1.3624e+00],
         [ 9.9075e-01, -5.1301e-01,  6.0313e-01,  ..., -1.1594e+00,
          -3.9946e-01,  6.3559e-01],
         ...,
         [ 5.2660e-02, -1.9532e-01,  1.7803e-02,  ...,  1.7051e-01,
          -6.5881e-02,  2.5067e-02],
         [-2.4725e-01,  2.7177e-01,  2.5009e-01,  ...,  8.4385e-01,
          -2.9694e-01,  1.9659e-02],
         [-2.7773e-01,  2.2454e-01,  2.0711e-01,  ...,  8.4618e-01,
          -2.7367e-01,  3.5141e-02]],

        [[ 5.0277e-01, -5.3455e-01, -7.8431e-01,  ...,  2.8455e-03,
          -4.0890e-01,  2.0475e+00],
         [-3.2734e-01, -2.1919e-01,  3.7490e-01,  ...,  6.2408e-01,
          -2.6478e-01,  1.0082e-01],
         [ 1.2023e+00,  5.0059e-01, -1.4808e+00,  ..., -5.6416e-01,
          -1.0541e+00,  1.7479e+00],
         ...,
         [ 1.5513e-02, -1.2758e-01, -1.2577e-02,  ...,  2.2527e-01,
          -6.7200e-02,  5.2180e-02],
         [ 9.8065e-02, -2.1217e-01, -1.9897e-01,  ...,  9.7101e-02,
           3.0350e-01,  4.4080e-02],
         [ 9.6176e-02, -1.7438e-01, -2.1715e-01,  ...,  1.2397e-01,
           3.2704e-01, -1.7473e-02]],

        [[ 5.7823e-01, -3.9816e-01, -3.6887e-01,  ...,  1.1623e+00,
          -1.7950e-01,  2.0814e+00],
         [ 5.9318e-01,  4.0474e-02, -5.0641e-01,  ...,  4.7806e-01,
          -3.7191e-01,  2.5166e+00],
         [ 1.2523e+00,  3.5779e-01, -7.6944e-01,  ..., -4.3154e-01,
          -7.5457e-01,  1.9358e+00],
         ...,
         [ 6.2050e-02, -1.7736e-01,  1.8755e-02,  ...,  2.2006e-01,
          -7.8654e-02,  4.0771e-02],
         [ 2.8369e-01, -4.1197e-01, -2.4603e-01,  ...,  9.1586e-01,
          -1.4979e-01,  8.2259e-02],
         [ 2.7434e-01, -4.0708e-01, -2.4987e-01,  ...,  9.1431e-01,
          -1.4008e-01,  4.3425e-02]],

        [[ 8.7236e-01, -8.9395e-02, -1.0711e+00,  ..., -7.9939e-02,
          -5.1226e-01,  1.6284e+00],
         [ 7.3070e-01, -4.0716e-02, -1.5350e+00,  ..., -2.4022e-01,
          -6.2905e-01,  1.5021e+00],
         [ 1.3885e+00, -8.9006e-01,  1.3510e-01,  ..., -1.4805e+00,
          -1.1188e+00,  1.6842e+00],
         ...,
         [ 2.0838e-02, -1.1994e-01,  2.3034e-02,  ...,  1.9347e-01,
          -7.0761e-02,  1.1592e-03],
         [ 2.8136e-01, -1.9164e-01,  9.3680e-01,  ...,  8.1498e-01,
          -3.0106e-01,  2.4250e-01],
         [ 2.6623e-01, -1.9744e-01,  9.2776e-01,  ...,  8.4280e-01,
          -2.8154e-01,  1.9759e-01]],

        [[ 6.1096e-01, -8.8048e-01, -3.6913e-01,  ...,  6.2879e-01,
          -6.6222e-01,  1.6820e+00],
         [ 5.2753e-03,  1.3480e-01, -4.1517e-01,  ...,  3.8611e-01,
          -5.6066e-01,  1.6002e-02],
         [ 5.9869e-01,  1.5749e-01, -1.9319e+00,  ..., -5.9549e-02,
          -1.3726e+00,  1.6554e+00],
         ...,
         [ 5.7953e-02, -1.8701e-01,  3.9825e-02,  ...,  2.1098e-01,
          -9.9333e-02, -2.2325e-02],
         [-1.6296e-01,  3.4738e-01, -2.4939e-01,  ...,  6.9530e-01,
          -4.2766e-01, -3.2008e-02],
         [-1.7517e-01,  2.4747e-01, -2.1445e-01,  ...,  7.4890e-01,
          -3.4540e-01, -6.4817e-02]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ']
processed prompt_list:['Use a few words to illustrate what is happening in the picture.', 'Use a few words to illustrate what is happening in the picture.', 'An image that shows', 'A short image description:', 'Could you use a few words to describe what you perceive in the photo?', 'Please provide a short depiction of the picture.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-9.9839e-04,  5.4143e-04, -3.7321e-04,  ..., -7.3029e-04,
          -4.6717e-04, -3.4806e-04],
         [-7.7402e-04,  3.5016e-04, -1.3560e-03,  ..., -3.1332e-04,
           1.1880e-04, -4.0032e-04],
         [-7.1815e-04,  4.7924e-04, -1.2599e-03,  ..., -1.7191e-04,
          -4.7209e-04,  8.5644e-04],
         ...,
         [-5.4796e-04,  9.6767e-04, -1.2529e-03,  ..., -1.6453e-03,
          -6.6282e-04,  4.4172e-04],
         [-7.0567e-04,  2.1669e-04, -5.9638e-04,  ..., -6.4912e-04,
          -2.2477e-04, -1.1197e-04],
         [-1.3355e-03, -9.6816e-06, -1.5872e-03,  ..., -8.2815e-05,
           5.5194e-04,  9.0370e-04]],

        [[-3.2002e-04,  3.2743e-04, -8.5752e-04,  ..., -5.5113e-04,
          -1.6849e-04,  1.3360e-04],
         [-8.2257e-04, -1.9272e-04, -8.3310e-04,  ..., -3.6995e-05,
           2.5625e-04,  7.1969e-04],
         [-6.2093e-04, -2.8583e-04, -7.7257e-04,  ..., -9.4527e-04,
           2.3859e-04,  1.0878e-03],
         ...,
         [ 5.8628e-04, -1.0539e-03,  1.1384e-03,  ..., -2.9385e-04,
           1.2743e-05, -7.7474e-04],
         [-4.7229e-04,  4.7822e-04, -5.0428e-04,  ...,  6.4599e-04,
           1.5392e-04, -2.2468e-05],
         [-4.6201e-04,  4.7079e-04, -5.1725e-04,  ...,  7.2348e-04,
           1.7731e-04, -1.3705e-05]],

        [[-6.5831e-04, -1.7543e-04, -7.2796e-04,  ..., -7.9284e-04,
           1.9904e-04, -1.9177e-04],
         [-6.6681e-04,  7.2313e-04, -1.3403e-03,  ...,  2.2971e-04,
           2.9880e-04,  4.0977e-04],
         [-6.6684e-04,  2.0542e-04, -9.5783e-04,  ..., -3.0777e-04,
           3.6003e-04, -2.2322e-05],
         ...,
         [ 5.6298e-04, -1.0543e-03,  1.1326e-03,  ..., -2.8291e-04,
           3.2122e-05, -7.8459e-04],
         [-8.9412e-04,  9.8110e-04, -4.8960e-04,  ...,  2.1747e-04,
           1.0707e-04,  1.0867e-04],
         [-8.5724e-04,  9.9409e-04, -5.0037e-04,  ...,  2.7703e-04,
           1.0561e-04,  1.1387e-04]],

        [[-7.8578e-04,  1.6183e-05, -1.2007e-03,  ..., -3.6663e-05,
           3.1061e-04,  3.8459e-04],
         [-1.2139e-03, -5.2504e-04, -9.9044e-04,  ..., -5.3783e-04,
           2.8406e-04,  7.7265e-04],
         [-8.6121e-04, -4.9327e-04, -7.2926e-04,  ..., -5.9164e-04,
           7.0751e-04,  4.2706e-04],
         ...,
         [ 5.6132e-04, -1.0472e-03,  1.1349e-03,  ..., -2.7924e-04,
          -2.4412e-06, -7.8047e-04],
         [-6.4343e-04,  8.7991e-04, -7.0517e-04,  ...,  1.0293e-04,
           4.3735e-04,  2.2235e-04],
         [-6.3729e-04,  8.7331e-04, -6.9998e-04,  ...,  1.4116e-04,
           4.2170e-04,  1.7666e-04]],

        [[-7.0448e-04, -6.8292e-05, -5.8683e-04,  ..., -1.0211e-04,
          -2.6126e-04,  2.8508e-04],
         [-1.0194e-03, -3.1994e-04, -9.5410e-04,  ...,  1.6319e-04,
           3.2209e-04,  5.6788e-04],
         [-8.8148e-04, -7.8354e-04, -4.4930e-04,  ..., -5.6198e-04,
           8.0494e-04,  3.0785e-04],
         ...,
         [ 5.7915e-04, -1.0815e-03,  1.1611e-03,  ..., -2.9574e-04,
           2.0485e-05, -7.9307e-04],
         [-7.1305e-04,  7.8141e-04, -8.8110e-04,  ...,  1.3601e-04,
           7.0794e-05,  1.5298e-04],
         [-6.7160e-04,  7.8835e-04, -8.7663e-04,  ...,  1.8332e-04,
           1.0531e-04,  1.4156e-04]],

        [[-6.9107e-04, -9.1742e-05, -1.1011e-03,  ...,  5.8373e-05,
           3.6435e-04,  2.3980e-04],
         [-8.6903e-04,  6.5391e-04, -1.0124e-03,  ...,  1.8580e-04,
           5.7840e-04,  1.2537e-04],
         [-8.9370e-04, -1.4657e-04, -1.0953e-03,  ...,  4.9237e-04,
           7.1401e-04,  3.2292e-04],
         ...,
         [ 5.5753e-04, -1.0310e-03,  1.1349e-03,  ..., -3.0213e-04,
           9.9284e-06, -7.8035e-04],
         [-5.4336e-04,  5.0112e-04, -6.5013e-04,  ...,  3.5093e-04,
           4.4204e-04,  1.8994e-04],
         [-5.7114e-04,  5.2509e-04, -6.6514e-04,  ...,  3.9619e-04,
           3.7150e-04,  1.8729e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] where is the surfer located in? ', '<Img><ImageHere></Img> [vqa] what color is the blanket where the two dogs are napping? ', '<Img><ImageHere></Img> [vqa] what is the person skiing on? ', '<Img><ImageHere></Img> [vqa] what protection feature covering the glass on the door is made out of what material? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what kind of kite it is? ', '<Img><ImageHere></Img> [vqa] what does this animal like to eat? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.4787,  0.0414,  1.0381,  ...,  0.9117,  1.1868,  0.7776],
         [-0.0712, -0.1905,  0.7317,  ...,  0.7088,  1.1730,  0.7879],
         [-0.2909,  0.6725, -0.5619,  ...,  1.1551, -1.1675,  0.8161],
         ...,
         [-0.4918,  0.6269,  1.1800,  ...,  0.9197, -0.2646, -0.0674],
         [-0.9727, -0.4361,  0.1796,  ...,  0.5620,  0.9569,  0.6124],
         [-0.5441, -0.1190,  0.7634,  ...,  0.0330, -0.8292, -0.6184]],

        [[-0.6830, -0.4116,  0.2891,  ...,  0.2511, -0.4823,  0.1539],
         [-0.3912,  1.0436,  0.4828,  ...,  0.4356, -0.8372, -0.3399],
         [-0.7991,  1.2320,  0.5137,  ...,  0.5473, -0.8072, -0.4887],
         ...,
         [-0.7852, -0.7526,  0.7120,  ...,  1.5621,  0.2401,  1.2141],
         [-0.9279,  0.2247,  0.5324,  ..., -0.1851, -0.7918, -0.4205],
         [-0.9379,  0.2839,  0.3475,  ..., -0.3307, -0.7556, -0.3324]],

        [[-0.0679, -1.4733,  0.7293,  ...,  0.5752,  0.3954,  0.4979],
         [ 0.0277, -1.0506, -0.3761,  ...,  0.2578, -0.2204,  0.1839],
         [-0.2063, -1.0453, -0.0482,  ...,  0.6354, -0.0155,  0.2061],
         ...,
         [ 0.0773,  0.1050, -0.3559,  ...,  0.8321, -0.8954,  0.0469],
         [-0.1941,  0.0431, -0.2390,  ...,  0.4973, -1.5818,  0.1735],
         [ 0.3232,  0.0779, -0.7898,  ...,  1.0492, -0.9767,  0.0669]],

        [[ 0.3077, -0.3755,  1.0794,  ...,  0.9042,  1.0136,  0.5091],
         [ 0.1594, -1.0969, -1.7510,  ...,  1.6834, -0.7885,  0.4777],
         [-0.7390, -0.6935, -1.1809,  ..., -0.7602, -0.1914, -0.7043],
         ...,
         [-0.9317, -0.5503,  0.0869,  ...,  1.4608, -0.1837, -0.1816],
         [-0.0042, -0.9502,  0.8030,  ...,  0.9369,  0.9540,  0.8362],
         [-0.1222, -0.9434,  0.8561,  ...,  1.0194,  1.0542,  0.7308]],

        [[-0.4812, -1.2525,  0.3007,  ...,  0.9908,  0.8854,  0.4205],
         [-0.5062, -1.1761,  0.3821,  ...,  1.0302,  0.7672,  0.3154],
         [ 0.0067,  0.3275,  0.6865,  ...,  0.8409, -0.8510,  0.6003],
         ...,
         [ 0.1618,  0.5357,  0.9009,  ...,  0.7198, -1.4313, -0.7259],
         [ 0.9164,  0.8909, -0.3709,  ..., -0.1027, -0.9408,  0.9894],
         [-0.3880, -0.6632,  0.7167,  ...,  0.7163,  0.3125,  0.2426]],

        [[-1.2789, -0.2301,  1.3111,  ...,  0.7652, -1.1349, -0.0996],
         [-1.5571, -0.6970,  0.2956,  ...,  0.8493,  0.4506,  0.7107],
         [-0.6468, -0.1331,  1.8513,  ...,  1.1187, -2.0718, -0.5152],
         ...,
         [ 0.3029,  0.4301,  0.1712,  ..., -0.2361,  0.2528, -0.0958],
         [-0.9521,  0.7460,  0.5966,  ...,  0.3037, -1.0361, -0.5885],
         [-0.9988,  0.3416,  0.5869,  ...,  0.1660, -0.6168, -0.3892]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] where is the surfer located in? ', '<Img><ImageHere></Img> [vqa] what color is the blanket where the two dogs are napping? ', '<Img><ImageHere></Img> [vqa] what is the person skiing on? ', '<Img><ImageHere></Img> [vqa] what protection feature covering the glass on the door is made out of what material? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what kind of kite it is? ', '<Img><ImageHere></Img> [vqa] what does this animal like to eat? ']
processed prompt_list:['where is the surfer located in?', 'what color is the blanket where the two dogs are napping?', 'what is the person skiing on?', 'what protection feature covering the glass on the door is made out of what material?', 'Based on the image, respond to this question with a short answer: what kind of kite it is?', 'what does this animal like to eat?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.7986e-04,  4.3277e-04, -1.3321e-03,  ..., -2.3138e-04,
          -3.6826e-04,  5.3513e-04],
         [-7.0310e-04,  2.9640e-04, -1.4176e-03,  ..., -4.9767e-05,
          -1.7934e-04,  5.9709e-04],
         [ 5.4885e-05,  1.9382e-04, -6.5658e-04,  ..., -1.2102e-04,
          -1.0684e-04, -2.2396e-04],
         ...,
         [-4.0471e-04,  2.7976e-05,  7.0932e-04,  ...,  1.0875e-04,
          -7.0264e-04,  7.9941e-04],
         [-8.5999e-04,  5.8871e-05, -1.1063e-03,  ..., -5.9937e-04,
          -1.5401e-04,  2.5109e-04],
         [-6.4516e-04, -2.4891e-04, -6.1369e-04,  ..., -7.8440e-04,
          -2.4045e-04, -1.3435e-04]],

        [[-7.7013e-04,  3.5594e-04, -4.4474e-04,  ..., -1.8621e-04,
          -2.4254e-04,  2.6642e-04],
         [-9.0391e-04,  5.6075e-04, -1.8632e-04,  ..., -6.4415e-04,
          -5.5931e-04,  2.9811e-04],
         [-9.7618e-04,  5.8015e-04, -1.1801e-04,  ..., -5.9549e-04,
          -6.4583e-04, -3.9406e-06],
         ...,
         [-7.1433e-04,  4.4138e-04, -7.2196e-04,  ..., -3.1040e-04,
          -2.0602e-04, -8.5354e-05],
         [-7.0486e-04,  6.8380e-04, -7.1419e-05,  ...,  6.9864e-05,
           1.3255e-04,  3.7157e-04],
         [-6.6167e-04,  4.9171e-04, -1.7962e-04,  ..., -2.8867e-05,
          -3.2367e-04,  5.1224e-04]],

        [[-5.7172e-04,  3.9222e-05, -7.2920e-04,  ..., -1.8337e-04,
          -4.8260e-05, -4.0803e-04],
         [-1.2097e-03,  4.9106e-04, -6.0964e-04,  ...,  2.8785e-04,
           2.7924e-04,  3.9663e-04],
         [-1.0380e-03,  8.0053e-04, -4.9794e-04,  ...,  1.5704e-04,
           3.2222e-04,  6.7174e-04],
         ...,
         [-1.2076e-03,  4.6799e-04, -3.6077e-04,  ..., -3.6696e-04,
          -3.5505e-04,  2.0385e-04],
         [-1.2013e-03,  4.4990e-04, -3.6760e-04,  ..., -6.9274e-04,
          -3.7534e-06, -2.1791e-04],
         [-6.2383e-04,  1.4072e-04, -2.4620e-04,  ..., -2.4549e-04,
          -4.2549e-04,  5.2764e-04]],

        [[-6.9339e-04,  1.3631e-04, -1.1075e-03,  ...,  5.8601e-05,
           2.1665e-04,  3.8243e-04],
         [-9.2316e-04,  4.3795e-04, -1.0243e-03,  ..., -6.9881e-04,
          -6.5251e-04,  7.2888e-04],
         [-2.8198e-04,  2.9647e-04, -2.7295e-04,  ...,  1.0488e-04,
          -1.5607e-04,  8.2135e-05],
         ...,
         [-8.3777e-04,  6.3560e-04, -2.8561e-04,  ...,  7.0748e-05,
          -7.7626e-04,  4.5798e-04],
         [-5.8227e-04, -2.4127e-04, -1.1721e-03,  ..., -5.8714e-05,
           1.7870e-04,  5.0076e-05],
         [-5.6416e-04, -9.7862e-05, -1.1568e-03,  ..., -7.9239e-05,
           1.3511e-04,  1.5777e-04]],

        [[-4.4492e-04,  1.7670e-04, -7.5543e-04,  ..., -6.5630e-04,
          -3.9702e-04, -4.5731e-04],
         [-4.8936e-04,  2.2026e-04, -7.9431e-04,  ..., -6.6900e-04,
          -4.1002e-04, -4.8888e-04],
         [-2.9629e-04,  1.3171e-05, -7.1347e-04,  ..., -7.4298e-04,
          -2.0252e-04, -5.3546e-04],
         ...,
         [-5.7263e-04,  3.5670e-04, -1.0987e-04,  ..., -8.4988e-04,
          -6.4707e-04, -5.3684e-04],
         [-1.1285e-03,  2.0480e-04, -1.9098e-04,  ...,  1.7740e-04,
           1.3537e-05, -4.0078e-04],
         [-5.7164e-04,  6.2824e-04, -9.8825e-04,  ..., -9.1120e-04,
          -3.7024e-04, -3.5644e-04]],

        [[-4.6526e-05,  6.0383e-04, -6.3433e-04,  ..., -3.6649e-04,
          -4.4703e-04,  3.3742e-04],
         [-8.0193e-04,  1.0518e-04, -9.5003e-04,  ..., -4.4740e-04,
          -5.5621e-04,  2.4548e-04],
         [-1.1147e-04,  7.6934e-04, -3.2655e-04,  ..., -9.6798e-04,
          -3.1917e-04,  1.4422e-04],
         ...,
         [-5.7133e-04,  1.5660e-04, -6.3933e-04,  ..., -1.5648e-04,
          -3.5319e-04,  6.0676e-04],
         [-6.9770e-04,  1.6549e-04, -4.2201e-04,  ..., -8.4983e-07,
           5.3376e-05, -1.6060e-04],
         [-6.7138e-04,  1.8145e-04, -5.4627e-04,  ..., -2.4640e-04,
           6.2196e-05, -2.7791e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [identify] this {<72><0><100><95>} is ', '<Img><ImageHere></Img> [identify] what is it in {<4><10><53><72>} ', '<Img><ImageHere></Img> [identify] {<59><14><77><73>} ', '<Img><ImageHere></Img> [identify] what object is in this location {<31><0><47><94>} ', '<Img><ImageHere></Img> [identify] {<62><19><100><98>} ', '<Img><ImageHere></Img> [identify] what is it in {<56><1><100><85>} ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-1.1694e+00, -3.7379e-01,  3.1355e-01,  ...,  9.7755e-01,
          -1.5958e-01,  3.1561e-01],
         [-5.4000e-01, -4.3913e-01,  3.6938e-01,  ...,  7.5564e-01,
          -4.7822e-02,  8.7822e-02],
         [ 4.1060e-01, -1.3761e-01, -2.5574e-01,  ...,  1.6019e+00,
          -6.6586e-01, -6.3118e-01],
         ...,
         [-6.5781e-01, -6.3919e-01,  1.1770e+00,  ...,  1.1352e+00,
           3.0187e-01,  3.9304e-01],
         [-9.8888e-01, -5.8603e-01,  6.4510e-01,  ...,  1.1191e+00,
           2.8186e-01,  2.5051e-01],
         [-5.3161e-01, -7.3418e-01,  9.9569e-01,  ...,  1.2473e+00,
           5.1258e-01,  3.2284e-01]],

        [[-2.0615e-01, -4.3199e-01,  2.1628e-01,  ...,  3.9807e-01,
           3.2188e-01, -5.2290e-01],
         [ 3.1741e-01, -1.0615e-01,  8.1701e-01,  ..., -4.7418e-01,
          -5.6391e-01, -1.9838e-01],
         [ 6.3658e-02,  1.9753e-01,  2.7839e-01,  ..., -2.4171e-01,
          -3.4096e-01,  2.3566e-01],
         ...,
         [-4.8556e-01, -5.4735e-01,  6.6305e-01,  ...,  4.8192e-01,
           1.0257e+00,  5.0986e-01],
         [-1.5569e+00, -1.4718e+00,  1.8397e-01,  ...,  3.0282e-01,
           3.6450e-01,  6.3672e-01],
         [-2.1116e-01, -3.7609e-01,  2.5774e-01,  ...,  2.7637e-02,
          -3.4319e-01,  6.2252e-01]],

        [[-9.6915e-02, -9.5264e-01, -5.1382e-01,  ..., -3.8476e-01,
          -9.4695e-01,  5.4211e-02],
         [-5.4006e-01, -2.0425e-01,  3.8322e-01,  ..., -5.3232e-01,
           5.0085e-01,  1.6277e-01],
         [-3.4276e-02, -7.7183e-01,  4.3618e-01,  ..., -4.6101e-01,
          -1.3945e-01, -1.8531e-01],
         ...,
         [-8.6811e-01, -6.3623e-01,  1.8967e-01,  ...,  7.1350e-02,
          -9.7479e-01,  3.5793e-01],
         [-2.5130e-01, -7.4196e-01, -4.1864e-01,  ..., -1.6593e-01,
          -1.0725e+00,  2.5007e-01],
         [ 3.3031e-01,  7.7923e-02,  8.2285e-01,  ...,  9.6005e-01,
           6.1238e-01,  3.3597e-01]],

        [[ 9.7240e-02, -1.3737e+00,  8.8368e-01,  ...,  4.7145e-02,
          -1.0451e-02,  1.0738e+00],
         [ 1.1142e+00, -1.1353e+00, -5.8333e-01,  ..., -4.7255e-01,
          -3.8285e-01, -3.3189e-01],
         [ 3.8422e-01,  3.3392e-01,  3.9786e-01,  ..., -7.1590e-01,
          -2.5517e-01, -4.9740e-01],
         ...,
         [ 8.9815e-01,  1.7655e-01,  1.3726e-01,  ...,  6.3182e-01,
           9.5419e-02, -3.1537e-01],
         [-2.0934e-01,  5.9287e-01,  5.4549e-01,  ...,  1.4248e-01,
          -1.8699e-01,  2.8134e-01],
         [ 9.3141e-02, -1.6644e+00,  6.0351e-01,  ...,  6.5990e-03,
           4.0991e-01,  8.8869e-01]],

        [[-5.7805e-01, -1.7186e+00,  3.5288e-01,  ...,  3.3442e-01,
          -6.3513e-02,  5.1995e-01],
         [-1.6911e-01, -2.9903e-01,  1.6295e-02,  ...,  5.1966e-01,
          -2.8196e-01, -3.0307e-01],
         [ 4.4713e-01, -1.2212e-01,  8.3841e-04,  ...,  6.8436e-02,
          -1.4807e-01, -8.0454e-02],
         ...,
         [-2.4329e-01, -1.0017e+00,  1.6183e+00,  ..., -1.4367e-01,
          -1.5945e+00,  4.3205e-01],
         [-1.1238e-01, -8.3303e-01,  1.0387e+00,  ...,  2.4737e-01,
          -1.4066e+00,  9.0833e-02],
         [-8.8522e-02, -1.3354e+00,  1.1754e+00,  ...,  9.0363e-01,
           3.1660e-01,  6.6387e-01]],

        [[-1.2297e-01,  5.8955e-01,  6.1488e-01,  ...,  2.9477e-01,
           3.5087e-01, -2.5232e-02],
         [-6.2042e-01, -6.0161e-01,  9.9456e-01,  ...,  4.4860e-01,
           4.3562e-02, -3.5255e-01],
         [ 4.6683e-01,  7.3013e-01, -5.6399e-01,  ...,  1.1031e+00,
           2.3840e-01, -9.2411e-01],
         ...,
         [ 3.4709e-01, -4.3984e-01,  1.3790e+00,  ...,  7.9495e-01,
          -7.0426e-01, -8.5560e-01],
         [ 1.8599e-01, -1.3186e+00,  6.0520e-01,  ...,  1.0345e+00,
           1.2884e-01,  4.1190e-01],
         [-1.1034e-02, -1.1157e+00,  3.8475e-01,  ...,  3.6655e-01,
          -8.2660e-01,  5.6556e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [identify] this {<72><0><100><95>} is ', '<Img><ImageHere></Img> [identify] what is it in {<4><10><53><72>} ', '<Img><ImageHere></Img> [identify] {<59><14><77><73>} ', '<Img><ImageHere></Img> [identify] what object is in this location {<31><0><47><94>} ', '<Img><ImageHere></Img> [identify] {<62><19><100><98>} ', '<Img><ImageHere></Img> [identify] what is it in {<56><1><100><85>} ']
processed prompt_list:['this {<72><0><100><95>} is', 'what is it in {<4><10><53><72>}', '{<59><14><77><73>}', 'what object is in this location {<31><0><47><94>}', '{<62><19><100><98>}', 'what is it in {<56><1><100><85>}']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-8.0929e-04,  1.9970e-04, -9.4020e-04,  ..., -7.0884e-04,
          -7.9322e-05,  3.9869e-04],
         [-8.1004e-04,  4.8369e-04, -1.1957e-03,  ...,  6.2028e-04,
          -1.4494e-04, -2.5865e-05],
         [-5.8692e-04, -9.7841e-05, -7.9892e-04,  ..., -3.3157e-04,
           1.6305e-04,  4.0827e-04],
         ...,
         [-6.8148e-04,  2.5859e-04, -6.6814e-04,  ..., -7.3148e-04,
          -1.0161e-04,  3.1312e-04],
         [-7.2276e-04,  8.4512e-05, -8.1512e-04,  ..., -6.5515e-04,
           1.9640e-05,  5.1040e-04],
         [-7.1333e-04,  3.2692e-04, -1.0555e-03,  ..., -4.9300e-04,
          -2.2485e-04,  7.6615e-04]],

        [[-6.2804e-04,  3.1497e-04, -1.0682e-03,  ...,  9.9964e-05,
          -3.6695e-04, -3.2725e-05],
         [-2.9648e-04,  5.7090e-04, -9.6285e-04,  ...,  7.5260e-05,
           2.9528e-04,  5.8865e-04],
         [-7.3606e-04,  3.9009e-04, -1.0684e-03,  ..., -1.8318e-04,
           2.2501e-04,  7.6052e-04],
         ...,
         [-6.9959e-04,  1.0129e-04, -1.2300e-03,  ..., -3.0061e-04,
          -3.2704e-05,  3.9804e-04],
         [-7.2749e-04, -3.4198e-05, -9.8489e-04,  ..., -4.0728e-04,
          -2.5598e-04,  1.4678e-04],
         [-1.0986e-03,  7.4486e-04, -1.1149e-03,  ..., -2.5644e-04,
          -2.9190e-04,  1.6057e-04]],

        [[-1.4492e-03,  7.6883e-04, -1.8424e-04,  ..., -1.1734e-03,
          -4.3576e-04,  6.4948e-04],
         [-1.2000e-03,  5.8573e-04, -1.0963e-03,  ..., -8.6884e-04,
          -2.9881e-04,  1.2067e-03],
         [-1.4026e-03,  6.3682e-04, -4.9732e-04,  ..., -9.2585e-04,
          -1.8046e-04,  3.4158e-04],
         ...,
         [-1.2121e-03,  7.6816e-04, -4.5491e-04,  ..., -8.3518e-04,
          -4.2900e-04,  3.2894e-04],
         [-1.3807e-03,  4.4565e-04, -1.0518e-04,  ..., -1.3113e-03,
          -4.7748e-04,  6.9508e-04],
         [-1.0986e-03,  2.9605e-04, -1.2070e-03,  ..., -2.4231e-04,
          -3.8403e-04,  1.0625e-03]],

        [[-4.9071e-04,  3.2201e-06, -8.0864e-04,  ..., -5.3735e-04,
          -2.2489e-04, -2.0183e-05],
         [-7.2824e-05, -2.1740e-04, -3.2485e-04,  ..., -7.9678e-04,
          -1.8575e-04, -1.3494e-04],
         [-3.4298e-04,  2.1544e-04,  3.4107e-04,  ..., -7.7003e-04,
          -5.3453e-04,  2.6655e-04],
         ...,
         [-9.5273e-04,  3.4293e-04, -4.3365e-04,  ..., -1.5311e-04,
          -6.9643e-04, -2.0362e-04],
         [-9.9431e-04,  2.7491e-04, -7.5095e-04,  ...,  3.5650e-04,
           6.3710e-04,  7.7265e-05],
         [-3.7615e-04, -2.2402e-04, -6.8135e-04,  ..., -5.8755e-04,
          -6.6718e-05,  1.5022e-04]],

        [[-6.8321e-04,  4.5746e-04, -1.0718e-03,  ..., -4.5269e-04,
          -4.1789e-04,  6.0013e-05],
         [-5.3376e-04,  5.8412e-04, -1.0838e-03,  ...,  1.6689e-04,
          -4.1579e-04,  3.5057e-04],
         [-7.3322e-04,  4.6287e-04, -1.0364e-03,  ...,  1.6930e-04,
          -4.3078e-04,  8.6348e-04],
         ...,
         [-2.1085e-04, -4.8303e-05, -4.1932e-04,  ...,  4.8035e-04,
          -3.4066e-04,  1.9965e-04],
         [-7.5381e-04,  3.4655e-04, -3.2408e-04,  ..., -2.1869e-05,
          -1.1998e-04, -1.6969e-04],
         [-5.3626e-04,  2.0460e-04, -9.7229e-04,  ..., -4.6477e-04,
          -5.4861e-04,  4.4601e-04]],

        [[-5.1078e-04,  3.3505e-04, -1.9903e-04,  ...,  2.5991e-04,
           9.5712e-05,  5.8402e-04],
         [-5.0232e-04,  1.1928e-04, -6.1268e-04,  ...,  1.2356e-04,
          -1.4675e-04, -3.6104e-04],
         [-3.3460e-04,  3.2934e-04, -3.7858e-04,  ...,  2.5454e-04,
          -6.6825e-04,  9.2613e-05],
         ...,
         [-9.3813e-04,  7.1347e-04, -7.2394e-04,  ..., -1.0842e-03,
          -7.7225e-05, -8.9481e-05],
         [-9.4049e-04,  4.0095e-04, -8.9270e-04,  ..., -8.6260e-04,
          -7.1564e-05,  2.4169e-04],
         [-6.6215e-04,  3.8203e-04, -8.1429e-04,  ..., -1.0085e-03,
           3.2922e-05, -6.1580e-07]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] grey cover of building ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of man on plaid snow pants ', '<Img><ImageHere></Img> [refer] where can I locate the white cloud in sky ? ', '<Img><ImageHere></Img> [refer] where is the stem of a banana ? ', '<Img><ImageHere></Img> [refer] where is a magazine on top of the round white coffee table ? ', '<Img><ImageHere></Img> [refer] cream and black surfboard ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-6.7209e-01, -9.9099e-01,  1.1202e+00,  ...,  2.4052e-01,
           2.0008e-01, -3.5194e-01],
         [ 5.0055e-01, -1.7350e+00,  4.3793e-01,  ...,  7.6540e-01,
           8.8184e-02, -3.7286e-01],
         [-2.7276e-01, -5.9534e-01,  1.0362e+00,  ..., -1.4883e-02,
           4.7207e-01, -4.1452e-01],
         ...,
         [-3.0013e-01, -1.3886e-01,  4.4272e-01,  ..., -7.8411e-02,
           7.6765e-02, -4.0496e-01],
         [ 8.0342e-03,  3.8274e-01,  4.1028e-01,  ...,  4.2452e-01,
           6.9071e-01, -1.1482e-01],
         [ 3.7375e-01, -8.9790e-01, -2.4872e-02,  ..., -4.3183e-01,
           4.9537e-02, -7.2047e-01]],

        [[-4.2384e-01, -7.5515e-02,  1.2163e+00,  ...,  1.2776e+00,
           4.9169e-02, -4.6434e-02],
         [ 7.8767e-02, -1.5348e-01,  1.1430e+00,  ...,  1.0821e+00,
           3.8004e-01,  2.4952e-01],
         [-1.3301e-01,  5.4574e-01,  1.2657e+00,  ...,  6.0067e-01,
           8.3926e-02,  4.3980e-01],
         ...,
         [-7.0261e-01, -7.6243e-02,  1.1141e+00,  ...,  1.1427e+00,
           2.1076e-01, -2.2665e-01],
         [-6.9604e-01, -4.7802e-01,  8.6322e-01,  ...,  1.0866e+00,
          -1.6134e-01,  3.3417e-01],
         [-3.7104e-01, -3.1469e-01,  1.2278e+00,  ...,  1.1143e+00,
           1.8824e-01,  2.6267e-01]],

        [[-1.1321e+00, -7.0795e-01,  9.8176e-02,  ...,  1.0608e+00,
           8.7857e-01,  1.1509e+00],
         [-1.3091e+00,  7.0204e-01,  1.3441e-01,  ...,  8.7078e-01,
          -7.3885e-01, -2.3764e-01],
         [-1.1275e+00,  5.5424e-01,  1.0057e-01,  ...,  6.8095e-01,
          -6.5209e-01, -4.3001e-01],
         ...,
         [ 5.4043e-01, -9.9566e-02,  4.3796e-01,  ...,  7.5799e-01,
          -1.7114e+00, -7.8037e-01],
         [-4.3713e-01, -7.6816e-01,  7.7857e-01,  ...,  7.6058e-01,
          -1.1464e+00,  3.1302e-01],
         [-1.3807e+00, -6.5196e-01,  8.5718e-02,  ...,  1.2779e+00,
           7.2827e-01,  1.0446e+00]],

        [[-6.5919e-01, -9.7623e-01,  6.1464e-01,  ..., -7.0704e-01,
           9.1752e-01, -7.1433e-01],
         [-3.1353e-01,  3.3414e-01,  4.5295e-01,  ..., -4.1611e-01,
           5.5931e-02,  3.5533e-01],
         [-1.6191e-01, -3.8318e-01,  8.5728e-01,  ..., -4.4615e-01,
          -1.1209e+00, -5.5603e-01],
         ...,
         [-7.2888e-01, -9.8939e-01,  3.2021e-01,  ..., -5.4796e-01,
           9.7960e-01, -3.6236e-01],
         [ 6.4978e-02,  4.2375e-01,  1.0324e+00,  ..., -3.2494e-01,
           1.2395e+00,  3.2495e-01],
         [-4.3854e-01,  3.9868e-01,  9.9435e-01,  ...,  7.0053e-02,
           1.2571e+00,  6.0317e-02]],

        [[-3.2493e-01,  5.4337e-01,  1.7938e-02,  ...,  1.1980e+00,
          -7.6605e-01, -1.4394e-01],
         [-7.0024e-01,  1.0441e-02,  1.9626e-01,  ...,  1.0980e+00,
          -7.8367e-01, -4.2519e-01],
         [-5.2191e-01,  8.0441e-02,  8.1903e-02,  ...,  1.2398e+00,
          -4.4106e-01,  2.3676e-02],
         ...,
         [-9.9336e-02, -1.1400e+00,  3.5908e-01,  ...,  1.0388e+00,
          -1.7624e+00,  1.1709e+00],
         [-9.5882e-01, -1.0858e+00,  2.7877e-01,  ...,  7.3017e-01,
          -1.1900e+00,  6.3100e-01],
         [-4.9444e-01, -1.1022e+00,  4.1008e-01,  ...,  1.0820e+00,
          -3.4963e-01,  1.2825e+00]],

        [[-4.4651e-03, -7.2028e-01, -3.3445e-01,  ...,  1.3506e+00,
          -3.6218e-01, -4.8148e-01],
         [-1.2745e-01, -3.0090e-01, -1.2656e-01,  ...,  1.4960e+00,
          -2.9329e-01, -4.9242e-01],
         [ 3.0671e-01,  1.9961e-01, -4.1653e-01,  ...,  9.0042e-01,
           2.0725e-02, -2.5326e-01],
         ...,
         [-5.4820e-01,  3.7150e-01, -1.3094e-01,  ...,  9.9998e-01,
          -1.2179e+00, -8.0751e-02],
         [ 4.4537e-04,  6.9658e-01, -3.6226e-01,  ...,  4.7639e-01,
          -1.3345e+00,  6.9669e-01],
         [-2.2039e-01, -4.4213e-01,  7.4723e-01,  ...,  8.7260e-01,
          -3.2492e-01,  5.5278e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] grey cover of building ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of man on plaid snow pants ', '<Img><ImageHere></Img> [refer] where can I locate the white cloud in sky ? ', '<Img><ImageHere></Img> [refer] where is the stem of a banana ? ', '<Img><ImageHere></Img> [refer] where is a magazine on top of the round white coffee table ? ', '<Img><ImageHere></Img> [refer] cream and black surfboard ']
processed prompt_list:['grey cover of building', 'from this image, tell me the location of man on plaid snow pants', 'where can I locate the white cloud in sky ?', 'where is the stem of a banana ?', 'where is a magazine on top of the round white coffee table ?', 'cream and black surfboard']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.3706e-04,  9.2546e-04, -8.5686e-04,  ..., -8.7461e-04,
          -4.4678e-05,  2.7634e-04],
         [-7.4147e-05,  3.7641e-04, -8.4364e-04,  ..., -1.5525e-03,
          -3.7474e-04, -1.9621e-04],
         [-6.4822e-04,  8.6893e-04, -9.4666e-04,  ..., -5.7049e-04,
          -2.2881e-05,  4.2607e-04],
         ...,
         [-4.1888e-04,  1.0491e-03, -8.9877e-04,  ..., -5.0391e-04,
          -3.2401e-04,  4.8301e-04],
         [-1.4363e-06,  3.3211e-05, -1.1357e-03,  ..., -3.9505e-04,
          -2.1492e-04, -4.7641e-04],
         [-1.2644e-04,  5.1106e-04, -2.5817e-04,  ..., -7.1520e-04,
          -1.0298e-03, -7.9157e-04]],

        [[-4.6535e-04,  5.9912e-04, -1.4209e-03,  ..., -6.0199e-04,
          -6.2540e-04,  8.6619e-04],
         [-3.7681e-04,  7.4504e-04, -1.5836e-03,  ..., -2.9787e-04,
          -4.8842e-04,  1.0284e-03],
         [-2.5066e-04,  9.7731e-04, -1.5474e-03,  ..., -9.3812e-04,
          -5.1518e-04,  3.3525e-04],
         ...,
         [ 5.3706e-05,  9.3199e-04, -1.5522e-03,  ..., -1.0778e-03,
          -1.6079e-04,  5.0497e-04],
         [-5.5503e-04,  5.2885e-04, -1.1348e-03,  ..., -5.9263e-04,
          -3.3321e-04,  6.2214e-04],
         [-4.9975e-04,  6.1563e-04, -1.2980e-03,  ..., -5.1549e-04,
          -5.0405e-04,  8.5454e-04]],

        [[-9.3277e-04, -1.8254e-04, -9.9223e-04,  ..., -8.7403e-05,
           5.8232e-06,  2.2784e-04],
         [-9.8939e-04,  4.4321e-04, -2.7249e-04,  ..., -8.1986e-04,
          -7.7101e-04,  1.4020e-04],
         [-1.0113e-03,  6.0276e-04, -2.6909e-04,  ..., -6.4294e-04,
          -7.8980e-04,  3.5998e-05],
         ...,
         [-8.8129e-04, -1.6962e-04, -8.1592e-04,  ..., -5.0673e-04,
          -8.4216e-04, -6.9365e-05],
         [-7.8152e-04, -3.7691e-04, -9.2140e-04,  ..., -8.2257e-04,
           6.7195e-05, -1.7330e-04],
         [-8.4370e-04, -3.3743e-04, -9.0791e-04,  ..., -1.4847e-05,
           3.0393e-05,  2.0593e-04]],

        [[-6.0288e-04,  6.9120e-04, -1.1549e-03,  ..., -9.6911e-04,
          -1.7268e-04, -2.7360e-04],
         [-2.9938e-04,  3.0939e-04, -8.5286e-04,  ..., -8.5477e-04,
          -2.1202e-04,  1.4397e-04],
         [-1.5892e-04,  4.3203e-04, -1.4429e-04,  ..., -3.1449e-04,
          -2.1314e-04, -3.3554e-05],
         ...,
         [-6.1573e-04,  2.0389e-04, -7.3716e-04,  ..., -9.8097e-04,
           3.6332e-05,  5.6171e-04],
         [-9.7357e-04,  1.9902e-04, -1.2659e-03,  ..., -3.9685e-04,
          -2.5523e-04,  4.1742e-04],
         [-1.1048e-03, -1.8521e-04, -1.0025e-03,  ..., -4.6441e-04,
          -2.6736e-04,  5.4428e-04]],

        [[-5.3483e-04,  3.9173e-04, -9.8694e-04,  ..., -2.7469e-05,
          -2.0823e-04,  4.4403e-04],
         [-4.1168e-04,  4.7899e-04, -9.1802e-04,  ..., -2.7446e-04,
          -2.0810e-04,  4.3475e-04],
         [-6.3356e-04,  4.0794e-04, -9.8152e-04,  ..., -3.2035e-04,
          -3.2249e-04,  6.1500e-04],
         ...,
         [-1.0244e-03, -1.6780e-04,  5.2745e-04,  ...,  9.5029e-05,
          -9.6683e-04,  9.5017e-04],
         [-4.3596e-04, -4.4498e-04, -2.1549e-04,  ..., -1.4572e-04,
          -1.6862e-04,  1.1762e-03],
         [-4.7728e-04, -1.2967e-04, -7.5136e-04,  ...,  6.4061e-05,
           9.8144e-05,  1.0021e-03]],

        [[-7.2983e-04,  6.5905e-04, -7.7001e-04,  ...,  8.1784e-04,
          -3.6468e-04, -3.0776e-04],
         [-6.2521e-04,  8.5925e-04, -7.8331e-04,  ...,  4.4610e-04,
          -5.5500e-04, -1.5141e-04],
         [-8.4027e-04,  7.8808e-04, -5.9992e-04,  ...,  2.2503e-04,
          -8.0867e-04,  3.9811e-04],
         ...,
         [-7.4068e-04, -6.7976e-05, -4.0236e-04,  ..., -1.7752e-04,
          -2.9956e-05,  9.0853e-05],
         [-1.0104e-03,  5.7224e-05, -7.3266e-04,  ..., -1.3352e-04,
           1.9750e-04, -4.8316e-06],
         [-6.7878e-04,  1.9301e-04, -7.2138e-04,  ...,  3.9004e-04,
          -2.8969e-04,  7.8860e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ', '<Img><ImageHere></Img> [caption] A short image caption: ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.4938, -0.7992, -0.5308,  ...,  0.1623, -0.0508,  0.8680],
         [ 0.4139, -0.8589, -0.4733,  ...,  0.3178,  0.0787,  0.6889],
         [-0.8486,  1.1106,  0.3229,  ...,  0.8017, -0.0880, -0.0813],
         ...,
         [ 0.0437, -0.2932,  1.5687,  ...,  0.5184, -0.0124,  0.1765],
         [-0.0956,  0.4013,  1.3332,  ...,  1.6570,  0.3764, -0.1054],
         [-0.7402,  0.1824,  1.2238,  ...,  0.1320,  0.3021,  0.5913]],

        [[-0.2227, -0.5164, -0.1719,  ..., -0.0303, -0.3486,  1.9182],
         [-0.1714, -0.5495, -0.8196,  ..., -0.2628, -0.4932,  2.0780],
         [ 0.5258,  0.0842, -1.3865,  ..., -0.4747,  1.4231,  0.3340],
         ...,
         [ 0.0444, -0.1592,  0.0106,  ...,  0.2507, -0.0346,  0.0228],
         [ 0.1067,  0.5602, -0.0303,  ..., -0.0097, -0.1666, -0.4753],
         [ 0.0994,  0.8647, -0.1280,  ...,  0.1692,  0.0484, -0.3688]],

        [[ 0.9303, -1.8791, -0.5482,  ...,  0.4024, -0.7865,  1.4411],
         [-0.2057, -0.0239,  0.6164,  ...,  0.5194, -2.0381, -0.1519],
         [ 0.4636,  0.5817, -0.3769,  ...,  0.5217, -0.7286,  1.2788],
         ...,
         [-0.3596,  0.7264,  0.2810,  ...,  0.2962,  0.0334,  0.6393],
         [-0.2383, -0.2891, -0.1042,  ...,  0.2146, -0.8603, -0.1334],
         [-0.2329, -0.3072, -0.1090,  ...,  0.2019, -0.8609, -0.1320]],

        [[ 0.5160, -0.7107,  0.0744,  ...,  1.7275, -0.6111,  0.7198],
         [-0.3145,  0.1348,  0.4746,  ...,  0.5516, -0.3357, -0.2305],
         [ 1.0227, -0.2250, -1.3420,  ...,  0.0338, -0.9534,  0.9264],
         ...,
         [ 0.0590, -0.1725,  0.0151,  ...,  0.1431, -0.0394,  0.0374],
         [ 0.0687, -0.2753,  0.0435,  ...,  0.3628, -0.0474, -0.5257],
         [ 0.0504, -0.1953,  0.0650,  ...,  0.3564,  0.0872, -0.4821]],

        [[ 0.1603, -0.3651, -0.6627,  ...,  0.9981, -0.7296,  1.4492],
         [ 0.2250,  0.1182, -1.5107,  ...,  0.2524, -0.9177,  1.4979],
         [ 0.7870, -0.0157,  0.0449,  ...,  0.1840, -1.2170,  1.7044],
         ...,
         [ 0.0630, -0.1547,  0.0462,  ...,  0.1956, -0.0679,  0.0141],
         [ 0.4634, -0.2112,  0.1975,  ...,  0.4650, -0.3119,  0.6584],
         [ 0.4742, -0.2116,  0.1943,  ...,  0.4571, -0.2861,  0.6542]],

        [[ 1.7667, -1.4473, -0.6027,  ...,  0.5032, -0.5027,  1.0673],
         [-0.1049,  0.6183,  0.7906,  ...,  1.1974, -0.3142, -0.0569],
         [ 0.8355, -0.1747, -0.8243,  ..., -0.6988, -0.4021,  0.7419],
         ...,
         [-0.0862,  0.9861,  1.2780,  ...,  1.2173, -0.0344,  0.0923],
         [ 0.0840,  0.0024,  0.7175,  ...,  0.6477, -0.0836, -0.5951],
         [ 0.0873,  0.0024,  0.7090,  ...,  0.6458, -0.0771, -0.5931]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ', '<Img><ImageHere></Img> [caption] A short image caption: ']
processed prompt_list:['Briefly describe the content of the image.', 'Use a few words to illustrate what is happening in the picture.', 'Can you briefly explain what you see in the image?', 'Present a short description of this image.', 'Please provide a short depiction of the picture.', 'A short image caption:']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-8.0039e-04, -1.8815e-04, -1.4512e-03,  ...,  1.4815e-04,
           6.3473e-04,  9.3056e-04],
         [-8.4681e-04, -2.6774e-04, -1.4207e-03,  ..., -9.3145e-06,
           6.4683e-04,  9.2879e-04],
         [-2.1564e-04,  7.8544e-04, -6.8056e-04,  ..., -6.6763e-04,
          -3.6614e-04,  2.5790e-04],
         ...,
         [-3.4862e-04, -7.1525e-04, -5.9399e-04,  ..., -1.0715e-03,
           8.1188e-04,  7.3988e-04],
         [-7.7989e-04, -3.7702e-05, -1.5923e-03,  ...,  2.5925e-04,
          -7.8994e-04,  8.3830e-04],
         [-3.0195e-04,  7.8837e-04, -3.4182e-04,  ...,  8.8758e-05,
          -2.4670e-04, -1.5482e-04]],

        [[-1.2644e-03, -2.3483e-04, -8.9517e-04,  ...,  3.7829e-04,
           3.4886e-04,  5.3824e-04],
         [-1.2349e-03, -4.4970e-04, -9.6062e-04,  ...,  4.2407e-04,
           5.3347e-04,  6.9436e-04],
         [-1.1168e-04,  6.4890e-04, -5.1635e-04,  ..., -2.3903e-04,
           2.4011e-04,  2.9933e-04],
         ...,
         [ 5.7401e-04, -1.0711e-03,  1.1442e-03,  ..., -2.8226e-04,
           1.1551e-05, -7.9384e-04],
         [-8.0609e-04,  6.8530e-04, -8.5317e-04,  ...,  5.5731e-07,
           9.7195e-05,  6.3394e-04],
         [-7.6294e-04,  7.1154e-04, -8.4195e-04,  ...,  1.3327e-04,
           1.6468e-04,  7.7103e-04]],

        [[-1.2585e-04,  7.4889e-04, -9.6627e-04,  ..., -3.3274e-04,
          -4.7670e-04, -3.6849e-04],
         [-3.1920e-04, -5.9093e-04, -4.7559e-04,  ..., -5.6292e-04,
           2.8608e-06,  5.7099e-04],
         [-8.9543e-05,  5.3749e-04, -9.7770e-04,  ..., -1.7920e-04,
          -4.2279e-04, -1.4427e-04],
         ...,
         [-6.7047e-04,  6.6427e-04, -1.0274e-03,  ..., -3.6633e-05,
           2.1837e-04,  6.8714e-04],
         [-3.2849e-04,  9.1751e-04, -6.4799e-04,  ...,  3.0149e-04,
           2.2796e-04,  1.9882e-04],
         [-3.3248e-04,  9.1029e-04, -6.5359e-04,  ...,  3.0051e-04,
           2.2556e-04,  1.9738e-04]],

        [[-1.1972e-04,  7.8739e-04, -1.1220e-03,  ..., -4.2870e-05,
          -3.1926e-04, -1.5305e-04],
         [-7.8565e-04,  7.2896e-04, -9.8338e-04,  ...,  2.1595e-04,
           2.9349e-04,  6.4748e-04],
         [-2.0642e-04,  3.5273e-04, -1.7409e-04,  ..., -2.2375e-05,
          -4.3486e-04,  3.9923e-06],
         ...,
         [ 5.6789e-04, -1.0553e-03,  1.1282e-03,  ..., -2.6951e-04,
           3.7120e-06, -7.7895e-04],
         [-4.5608e-04,  6.0793e-05, -9.4504e-04,  ...,  2.3805e-04,
           9.2788e-04, -2.3114e-05],
         [-3.5946e-04, -2.5580e-05, -9.1105e-04,  ...,  2.4838e-04,
           9.5253e-04, -5.2769e-05]],

        [[-9.3858e-04,  2.0499e-05, -1.3320e-03,  ..., -6.5046e-05,
           1.4394e-04,  1.8356e-04],
         [-1.0353e-03, -1.5170e-04, -1.1468e-03,  ..., -1.3811e-04,
           6.5970e-04,  4.1731e-04],
         [-7.3912e-04, -2.0426e-04, -5.6479e-04,  ..., -1.0659e-03,
           5.7904e-04,  1.9725e-04],
         ...,
         [ 5.7366e-04, -1.0235e-03,  1.1227e-03,  ..., -2.7809e-04,
           8.1734e-06, -7.6456e-04],
         [-2.0197e-04,  6.4241e-04, -1.0411e-03,  ...,  6.1918e-04,
           2.1465e-04,  2.3693e-04],
         [-1.8728e-04,  6.4765e-04, -1.0345e-03,  ...,  6.3011e-04,
           2.2817e-04,  2.3410e-04]],

        [[-1.6233e-04,  9.6493e-04, -1.0784e-03,  ...,  1.0572e-04,
          -5.0678e-04,  2.3933e-04],
         [-1.1820e-03,  2.7345e-04, -8.0303e-04,  ...,  2.4570e-04,
           2.1463e-04,  2.6349e-04],
         [ 3.2319e-04,  4.9230e-04, -1.3577e-03,  ..., -2.5730e-05,
          -2.8789e-04, -1.0197e-04],
         ...,
         [-8.6400e-04,  6.1089e-04, -8.3498e-04,  ...,  2.9483e-05,
           2.8856e-04,  3.5160e-04],
         [-5.0265e-04, -1.2525e-05, -7.4805e-04,  ...,  1.7884e-04,
           8.7076e-04,  2.6234e-05],
         [-4.8418e-04, -1.7514e-05, -7.4617e-04,  ...,  1.7790e-04,
           8.6840e-04,  2.6486e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] is this book related to test preparation? ', '<Img><ImageHere></Img> [vqa] is this a sociopolitical book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this christianity book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the title of this book? ', "<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to children's books? ", '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the title of this book? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.3236, -1.2356, -0.5438,  ...,  0.9271, -0.7223,  0.9175],
         [ 1.2676, -0.9645, -0.6843,  ...,  1.1504, -0.6605,  1.2958],
         [ 1.1883, -1.7388, -0.7041,  ...,  0.9338, -0.6632,  0.7037],
         ...,
         [ 1.2190, -1.4654, -0.6381,  ...,  1.1112, -0.7741,  1.1545],
         [ 0.5576,  0.6908,  0.1708,  ...,  2.2640, -1.3675,  1.3055],
         [ 1.0934, -1.2326, -0.6427,  ...,  0.7390, -0.8490,  1.1014]],

        [[ 0.5854, -0.9450, -0.3317,  ...,  0.9561, -1.5460,  0.8325],
         [ 1.2103, -0.1041, -0.7283,  ...,  0.2335, -0.9999, -0.0703],
         [ 0.1375,  0.3657,  0.1122,  ...,  1.1743, -0.9775, -0.4005],
         ...,
         [ 0.8905,  0.3544, -0.5683,  ...,  1.5814,  0.5688,  0.2151],
         [ 0.6784, -0.7298, -0.7647,  ...,  1.1059, -1.0739,  0.6236],
         [ 0.5103, -0.7024, -0.6990,  ...,  0.8942, -1.3040,  0.5358]],

        [[ 1.0699, -0.4590, -0.0981,  ...,  2.5928, -0.9906,  0.5117],
         [ 1.3026, -0.8963, -0.8942,  ...,  3.0015, -0.6729,  0.6017],
         [-0.1919, -0.4948,  1.6395,  ...,  1.6674, -1.2296, -0.5985],
         ...,
         [ 0.0209, -0.9274,  1.7383,  ...,  0.4683, -0.2632,  0.0899],
         [ 0.5401, -0.7102, -0.5488,  ...,  1.9849, -0.6770,  0.6380],
         [ 0.5067, -1.0691,  0.0592,  ...,  2.6571, -0.8581,  0.4015]],

        [[-0.0628, -1.4791,  0.0647,  ...,  1.1526, -0.0575,  0.3698],
         [ 0.5848, -0.7140,  0.1663,  ...,  1.3743, -0.7098, -0.3002],
         [-0.1423, -1.0683,  0.6484,  ...,  0.3142, -0.4666, -0.8828],
         ...,
         [-0.8554,  0.3052, -0.0711,  ..., -0.4527,  0.3461, -0.8478],
         [-0.5457, -0.0169, -0.3960,  ..., -1.0968, -0.3097, -1.0150],
         [ 0.7886, -0.2737,  0.2015,  ...,  1.9965, -1.5170, -0.0992]],

        [[ 0.4699, -0.4354, -0.9915,  ...,  1.5717, -1.2939,  1.4820],
         [ 0.4843, -0.0930, -0.9325,  ...,  1.3463, -1.0714,  1.9679],
         [-0.0234, -0.0541,  0.4423,  ..., -0.0773, -1.1036,  0.0374],
         ...,
         [-0.0951,  0.2618,  0.3763,  ..., -0.2920, -1.1588, -0.1077],
         [ 0.0404,  0.6338,  0.8010,  ...,  0.2421, -0.0849,  0.0688],
         [ 0.4391, -0.7256, -0.0366,  ...,  0.9611,  0.1513,  0.1812]],

        [[ 1.0061,  0.1861, -0.4808,  ...,  1.2436, -0.8443,  0.8415],
         [ 0.4703, -0.6633,  1.3243,  ...,  1.2422, -0.8407, -0.3362],
         [ 0.6302, -0.3734,  1.3772,  ...,  1.3852, -0.9021, -0.6799],
         ...,
         [ 0.8976, -0.1180, -0.0741,  ...,  1.8162, -0.9992,  1.0364],
         [ 0.5664,  0.3737, -0.4717,  ...,  1.1524, -0.9795,  1.1548],
         [ 1.3180, -0.4152,  0.1683,  ...,  1.9131, -0.5721,  0.7120]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] is this book related to test preparation? ', '<Img><ImageHere></Img> [vqa] is this a sociopolitical book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this christianity book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the title of this book? ', "<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to children's books? ", '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the title of this book? ']
processed prompt_list:['is this book related to test preparation?', 'is this a sociopolitical book?', 'Based on the image, respond to this question with a short answer: is this christianity book?', 'Based on the image, respond to this question with a short answer: what is the title of this book?', "Based on the image, respond to this question with a short answer: is this book related to children's books?", 'Based on the image, respond to this question with a short answer: what is the title of this book?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.4432e-04,  4.6953e-04, -3.9656e-04,  ..., -2.1676e-04,
          -8.2268e-04,  1.8886e-04],
         [-4.4540e-04,  5.3944e-04, -3.5875e-04,  ..., -4.3943e-04,
          -1.0789e-03,  2.2162e-04],
         [-9.4153e-04,  4.4954e-04, -4.4263e-04,  ..., -2.5995e-05,
          -4.0041e-04,  6.9518e-05],
         ...,
         [-6.2587e-04,  6.7986e-04, -3.4136e-04,  ..., -3.2321e-04,
          -1.3473e-03,  2.4724e-04],
         [-6.5230e-04,  1.7453e-04, -2.9776e-04,  ..., -9.4816e-04,
          -1.0756e-03,  6.6901e-04],
         [-4.5558e-04,  7.8809e-04, -4.4199e-04,  ..., -3.3370e-04,
          -1.3997e-03,  2.8122e-04]],

        [[ 5.0920e-05,  5.4901e-04, -6.0462e-04,  ..., -2.9352e-04,
          -1.1009e-03,  6.6499e-04],
         [-3.6584e-04, -5.4169e-05, -3.5871e-04,  ..., -4.3407e-04,
          -2.6743e-04,  1.9017e-04],
         [-6.5807e-05, -1.4628e-04,  5.9339e-05,  ..., -1.1025e-03,
          -4.5350e-04, -2.0815e-04],
         ...,
         [-1.6862e-04,  3.8336e-04, -1.2001e-03,  ...,  3.3845e-04,
           4.8041e-04,  1.2884e-03],
         [ 3.1524e-05,  1.9373e-04, -5.1677e-04,  ..., -3.3912e-04,
          -8.4684e-04,  5.7107e-04],
         [-3.6809e-05,  3.2089e-04, -5.5085e-04,  ..., -4.1088e-04,
          -1.0027e-03,  4.7967e-04]],

        [[-8.9364e-04, -4.2224e-04, -4.3345e-04,  ..., -2.9979e-04,
          -5.0888e-04, -1.0490e-04],
         [-1.0834e-03, -5.3262e-04, -9.4640e-04,  ..., -3.3408e-04,
          -6.5909e-04,  2.7251e-04],
         [-7.5888e-04, -2.7726e-04, -7.1505e-04,  ..., -6.8980e-04,
          -5.1974e-04,  8.8727e-05],
         ...,
         [-1.9420e-04,  4.2568e-04, -7.4333e-04,  ..., -6.2048e-04,
          -5.6359e-04,  2.7582e-04],
         [-7.1613e-04, -5.0253e-04, -9.2972e-04,  ..., -4.3411e-04,
          -1.0031e-03, -2.5174e-04],
         [-1.0058e-03, -5.3248e-04, -6.5404e-04,  ..., -3.6706e-04,
          -5.8587e-04,  3.7868e-05]],

        [[-1.4531e-04,  6.2328e-04, -7.9952e-04,  ...,  6.0513e-04,
          -7.5988e-04,  1.3743e-04],
         [-2.7804e-04,  2.7971e-04, -5.9138e-04,  ..., -1.3473e-04,
          -7.1967e-04,  8.6978e-05],
         [-1.8457e-04, -4.5048e-04, -6.5027e-04,  ..., -9.4947e-04,
          -3.2680e-04, -4.3050e-05],
         ...,
         [-8.4022e-05,  2.2702e-04, -7.2156e-04,  ..., -6.0314e-04,
           2.0808e-04,  2.0436e-04],
         [-4.8465e-04,  2.4173e-04, -5.4527e-04,  ..., -5.2418e-04,
          -1.1523e-04, -2.2130e-05],
         [-1.2931e-04, -1.6792e-04, -7.1459e-04,  ..., -4.0783e-04,
          -4.9769e-04,  3.0367e-04]],

        [[-5.9968e-04, -6.3080e-05, -8.6340e-04,  ..., -1.1695e-04,
          -3.9773e-04,  3.1481e-04],
         [-4.7765e-04, -1.2689e-05, -8.7728e-04,  ...,  1.6592e-04,
          -4.4887e-04,  3.5300e-04],
         [-2.6366e-04,  6.9308e-04, -8.0264e-04,  ..., -1.0394e-03,
          -2.4293e-04,  2.9867e-04],
         ...,
         [-4.6629e-04,  7.6857e-04, -6.9610e-04,  ..., -9.8217e-04,
          -2.3255e-04,  2.4840e-04],
         [-9.0912e-04,  7.6893e-04, -8.6492e-04,  ...,  8.8393e-05,
           2.2241e-04,  3.1175e-04],
         [-5.2612e-04,  1.1045e-03, -4.3653e-04,  ...,  2.2599e-04,
           1.7324e-04,  6.9092e-05]],

        [[-4.4843e-04,  3.9145e-04, -9.2928e-04,  ..., -2.9728e-04,
          -1.0785e-03,  4.3532e-04],
         [-4.4329e-04, -6.6541e-05, -7.2228e-04,  ..., -8.7899e-04,
          -6.4772e-04,  7.6573e-06],
         [-1.2370e-04,  4.5568e-05, -4.9574e-04,  ..., -9.9433e-04,
          -5.4145e-04,  7.0241e-05],
         ...,
         [-1.0980e-03, -5.8917e-05, -7.2327e-04,  ..., -7.0902e-04,
          -6.4871e-04,  3.5166e-04],
         [-3.8229e-04,  2.0556e-04, -7.3076e-04,  ..., -3.3632e-04,
          -1.0395e-03,  6.3358e-04],
         [-9.4409e-04,  5.2843e-05, -6.2209e-04,  ..., -5.3825e-04,
          -9.2741e-04,  1.0438e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of a person walking on the street ', '<Img><ImageHere></Img> [refer] where is portraits hanging on wall ? ', '<Img><ImageHere></Img> [refer] the location of sun canopy on boat is ', '<Img><ImageHere></Img> [refer] where can I locate the the water is dirty ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for nose of the person ? ', '<Img><ImageHere></Img> [refer] where is wing of a bird ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-1.1333,  0.2418,  1.1112,  ...,  0.5412, -1.1778, -0.8884],
         [-1.2111,  0.6364,  1.3837,  ...,  0.3194, -1.1885, -1.3057],
         [-1.2481,  0.6071,  1.3901,  ...,  0.0537, -0.9107, -1.0802],
         ...,
         [-0.8333, -0.4793,  1.1161,  ...,  0.2590, -0.9771, -0.3878],
         [-0.3373, -0.1214,  0.8815,  ...,  1.3251,  0.8979, -0.1427],
         [-1.0390,  1.0420,  0.7446,  ..., -0.0387, -0.8203, -0.5157]],

        [[-0.1125,  0.5425,  0.0872,  ...,  1.2807, -0.3432, -0.5403],
         [ 0.4915,  0.3364,  0.9057,  ...,  0.3329, -0.7872, -0.6627],
         [ 0.5901,  0.0744,  1.2599,  ...,  0.5494, -0.7997, -0.1156],
         ...,
         [ 0.2859,  0.9219,  1.0843,  ...,  2.0171, -1.2913, -1.0393],
         [-0.5323, -0.5384,  0.1610,  ...,  1.9937, -0.1165,  0.4366],
         [-0.4502, -0.3753,  0.0984,  ...,  1.8724, -0.4919,  1.2187]],

        [[-0.9483, -0.7625,  0.2191,  ...,  0.2137,  0.0828,  0.7469],
         [-0.9122, -0.7788,  0.4756,  ...,  0.3494,  0.1312,  0.9082],
         [ 1.2729, -0.3456, -0.0021,  ..., -0.0292, -1.2001, -0.2828],
         ...,
         [ 0.2704,  1.0643, -0.2058,  ...,  0.7039, -0.4982,  0.1989],
         [-0.2960, -0.5997,  0.2879,  ...,  0.4416, -1.4614, -0.1385],
         [-0.3375,  0.8798, -0.0098,  ...,  1.1065, -0.8773, -0.2089]],

        [[-0.7412, -0.3944, -0.4691,  ...,  1.0317, -1.1414,  0.9768],
         [-0.8660, -0.8563, -0.1394,  ...,  0.8704, -0.2909,  0.8343],
         [-0.0121,  0.2946,  1.3059,  ...,  1.1994,  0.3534,  0.0144],
         ...,
         [ 0.0192, -0.7375,  0.8130,  ...,  0.6326, -0.3319, -1.2532],
         [-0.5160, -0.3776,  0.3461,  ...,  1.0215, -0.0031,  0.6119],
         [-0.4901, -0.5255,  0.2676,  ...,  1.0201,  0.1178,  0.6922]],

        [[ 0.6524,  1.2490,  0.0566,  ...,  1.0380, -0.9701,  1.2534],
         [-0.6936, -0.5013,  0.3530,  ...,  1.0425,  0.9903,  0.4617],
         [ 0.0990,  1.5534, -0.2797,  ...,  1.6325, -0.5134, -0.1428],
         ...,
         [-0.2810, -0.3205, -0.0934,  ...,  0.1742, -0.2809,  0.1067],
         [ 0.1949, -0.0030,  0.1714,  ...,  0.6267,  0.2817,  0.4476],
         [-0.3353, -0.6049,  0.5868,  ...,  1.2656,  0.7795,  0.5707]],

        [[-0.9293, -0.9798,  0.6060,  ...,  0.7766,  0.5496,  0.5464],
         [-1.2624, -1.1894,  0.2810,  ...,  1.0656,  0.3896,  0.3923],
         [ 0.3668, -0.2474,  0.5897,  ...,  0.8093, -0.0955,  0.0217],
         ...,
         [-1.1724, -1.2589,  0.3050,  ...,  1.2982, -0.0743, -0.2762],
         [ 0.2728, -0.5362,  0.0433,  ...,  0.8187, -0.5927, -0.6085],
         [-0.3522, -1.0208,  0.2733,  ...,  1.0045, -0.9045, -0.6536]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of a person walking on the street ', '<Img><ImageHere></Img> [refer] where is portraits hanging on wall ? ', '<Img><ImageHere></Img> [refer] the location of sun canopy on boat is ', '<Img><ImageHere></Img> [refer] where can I locate the the water is dirty ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for nose of the person ? ', '<Img><ImageHere></Img> [refer] where is wing of a bird ? ']
processed prompt_list:['from this image, tell me the location of a person walking on the street', 'where is portraits hanging on wall ?', 'the location of sun canopy on boat is', 'where can I locate the the water is dirty ?', 'could you tell me the location for nose of the person ?', 'where is wing of a bird ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.3975e-04,  7.0386e-04, -3.6485e-04,  ..., -8.5028e-04,
          -4.3902e-04,  1.4642e-04],
         [-3.3461e-04,  5.7861e-04, -1.2266e-04,  ..., -8.8014e-04,
          -7.7707e-04,  2.2854e-04],
         [-4.0228e-04,  7.0579e-04, -2.8097e-04,  ..., -9.6184e-04,
          -7.4367e-04,  4.4927e-04],
         ...,
         [ 8.2747e-06,  7.3542e-04, -5.0866e-04,  ..., -4.9915e-04,
          -3.7793e-04, -3.0116e-04],
         [-6.2558e-04,  2.2075e-05, -4.4708e-04,  ..., -7.0258e-04,
          -1.1712e-04,  1.6091e-04],
         [-4.7688e-04, -7.8623e-05, -5.3906e-04,  ..., -4.9936e-04,
           1.7853e-04, -3.5682e-04]],

        [[-6.1111e-04,  8.6195e-04, -6.3356e-04,  ..., -1.7010e-04,
          -2.2911e-04,  5.1029e-04],
         [-1.1793e-03,  1.3400e-04, -8.1477e-04,  ..., -3.6978e-04,
          -1.0413e-03,  3.6284e-04],
         [-1.0492e-03, -1.1822e-04, -7.0104e-04,  ..., -4.3082e-04,
          -9.8088e-04,  4.8803e-04],
         ...,
         [-6.3856e-04,  5.3999e-04, -4.0975e-04,  ..., -1.3369e-04,
          -2.9928e-04,  2.8333e-04],
         [-8.6409e-04,  1.2027e-04, -7.0365e-04,  ..., -6.4866e-05,
           2.8232e-04,  5.6844e-04],
         [-7.4677e-04,  5.0813e-05, -5.7664e-04,  ..., -1.2778e-05,
           3.2120e-04,  1.3951e-04]],

        [[-7.0471e-04,  1.1873e-04, -9.9767e-04,  ...,  2.6918e-05,
          -7.4482e-05,  7.0708e-04],
         [-8.0219e-04,  1.5506e-04, -1.0358e-03,  ...,  8.3809e-05,
          -8.4993e-05,  7.9840e-04],
         [-4.9048e-04,  2.7471e-04, -9.9427e-04,  ..., -1.3379e-04,
          -6.4447e-04,  2.1779e-04],
         ...,
         [-5.3056e-04,  4.5828e-04, -8.2017e-04,  ...,  8.6777e-05,
          -4.3227e-04,  6.3839e-04],
         [-8.1060e-04,  4.2320e-04, -9.1038e-04,  ..., -2.5469e-04,
          -6.4972e-04, -1.1481e-04],
         [-6.2061e-04,  5.6242e-04, -7.5466e-04,  ...,  2.8249e-05,
          -3.9307e-04,  2.6070e-04]],

        [[-3.5844e-04,  2.0516e-04,  1.9604e-04,  ..., -6.6239e-04,
          -1.0193e-04,  5.8368e-05],
         [-3.9705e-04,  4.1755e-05, -4.6125e-04,  ..., -3.1698e-04,
          -6.6286e-04,  1.4582e-04],
         [-6.2695e-04,  4.4423e-04, -3.3341e-04,  ...,  1.4286e-04,
          -1.0289e-03, -2.1891e-04],
         ...,
         [-6.2879e-04,  5.9107e-04, -3.5808e-04,  ...,  9.3996e-06,
          -3.7121e-04,  6.5505e-04],
         [-6.2906e-04, -1.8383e-04, -8.0980e-04,  ..., -2.5766e-05,
          -6.3617e-04,  4.6847e-04],
         [-5.3666e-04, -1.5516e-04, -8.1377e-04,  ..., -9.5197e-06,
          -6.2397e-04,  4.4651e-04]],

        [[-1.8104e-04,  6.7155e-04, -8.1752e-04,  ..., -4.4786e-04,
          -2.8625e-04,  2.6137e-04],
         [-1.2987e-03,  1.5532e-04, -1.0636e-03,  ..., -7.5696e-04,
          -6.2414e-04,  3.9038e-04],
         [-3.7243e-04, -2.5067e-04, -6.9625e-04,  ..., -1.5031e-03,
          -1.0866e-04,  2.4900e-04],
         ...,
         [-6.8577e-04,  2.9806e-04, -7.1010e-04,  ..., -1.1941e-03,
          -5.0312e-04,  3.0855e-04],
         [-1.0567e-03,  4.6921e-04, -1.0891e-03,  ..., -7.8010e-04,
          -4.3940e-04,  4.0245e-04],
         [-8.6077e-04,  2.2174e-04, -1.1070e-03,  ..., -3.6250e-04,
          -5.8305e-04,  5.8829e-04]],

        [[-3.8462e-04, -1.1163e-04, -8.9681e-04,  ..., -1.7583e-04,
          -4.3691e-05,  6.1605e-04],
         [-3.0719e-04, -2.7924e-04, -7.5459e-04,  ..., -4.9027e-04,
           2.8155e-05,  3.2780e-04],
         [-9.2861e-04, -3.5670e-05, -9.1629e-04,  ..., -2.4341e-04,
          -2.6332e-04, -9.9663e-05],
         ...,
         [-5.1652e-04, -1.8530e-04, -7.1074e-04,  ..., -6.1458e-04,
          -2.4445e-04, -8.3309e-05],
         [-9.3290e-04,  1.9797e-04, -6.2737e-04,  ...,  1.9222e-04,
          -3.0913e-04,  4.2352e-04],
         [-1.0483e-03, -1.9335e-05, -4.5841e-04,  ..., -6.1861e-05,
          -4.8913e-04,  3.0792e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.0614, -0.5293,  0.4496,  ...,  0.8414, -0.1533,  0.8725],
         [ 0.6087, -0.1752, -0.3344,  ...,  0.3900, -0.7255,  1.5092],
         [ 1.3455,  0.3013,  0.3473,  ..., -0.8742, -0.0695,  0.4330],
         ...,
         [ 0.0193, -0.1597,  0.0179,  ...,  0.1788, -0.1091,  0.0140],
         [ 0.7003, -0.4394,  0.5805,  ...,  0.4107,  0.0517,  0.0760],
         [ 0.6059, -0.3182,  0.5679,  ...,  0.4227, -0.0199,  0.1937]],

        [[ 0.3664, -0.1701,  0.6044,  ...,  0.1360, -0.4501,  2.2071],
         [-0.1665,  0.1105,  0.5168,  ...,  0.0876, -0.5351,  0.3706],
         [ 1.2045,  1.3664, -2.0510,  ..., -0.1328, -1.5864,  2.3120],
         ...,
         [ 0.0407, -0.2062,  0.0366,  ...,  0.1622, -0.0718,  0.0554],
         [-0.3702,  0.1889, -0.5374,  ...,  1.0970, -0.3306, -0.3192],
         [-0.3160,  0.1986, -0.5042,  ...,  1.1058, -0.3497, -0.3081]],

        [[ 0.1144, -0.2686, -0.5168,  ...,  1.0086, -0.6891,  2.0110],
         [-0.4467,  0.0762, -0.3677,  ...,  0.7096, -1.8243,  1.1132],
         [ 1.3524,  0.6593, -1.8933,  ..., -0.4040, -1.6682,  1.8545],
         ...,
         [ 0.0109, -0.1700,  0.0055,  ...,  0.2049, -0.0762,  0.0268],
         [-0.0238, -0.0079, -0.6734,  ..., -0.1301, -0.7392,  0.1826],
         [-0.0063, -0.0090, -0.6352,  ..., -0.1652, -0.6901,  0.1785]],

        [[-0.0698,  0.2990,  0.2561,  ...,  0.2307, -0.1335,  0.5691],
         [ 0.6801, -0.2787, -0.2667,  ...,  0.6803, -0.8373,  1.4530],
         [ 1.5108,  0.2557, -0.6868,  ...,  0.4635, -0.4612,  0.8520],
         ...,
         [ 0.7251, -0.0758,  0.2471,  ...,  0.4621, -1.2840,  1.4384],
         [-0.0725,  0.3563,  0.4746,  ...,  0.0219, -0.3525,  0.2557],
         [ 0.2020, -0.9272,  0.6216,  ...,  1.1262, -1.4600,  1.1193]],

        [[ 0.3777, -1.0102,  0.4611,  ...,  1.3881, -0.9029,  0.7021],
         [ 0.5525, -0.4494,  0.1257,  ...,  0.8431, -1.4364,  0.5207],
         [ 1.2104, -0.0880, -0.2780,  ...,  0.7050, -0.9417,  0.8180],
         ...,
         [ 0.0095, -0.1527,  0.0241,  ...,  0.2309, -0.0884,  0.0145],
         [ 0.2285, -0.0302,  0.0350,  ...,  0.1785, -0.4394, -0.4539],
         [ 0.2198, -0.0364,  0.0401,  ...,  0.1787, -0.4257, -0.4493]],

        [[-0.0926, -0.4622,  0.4785,  ...,  0.4381,  0.1080,  1.6991],
         [ 0.3561, -0.2243,  0.1746,  ...,  0.9896, -0.7286,  0.4656],
         [ 0.2526,  0.6842, -0.8559,  ..., -0.3966,  0.0477,  1.0215],
         ...,
         [ 0.0526, -0.1712,  0.0377,  ...,  0.1963, -0.0959,  0.0143],
         [ 0.3937, -0.0658,  0.2655,  ...,  0.5868, -0.3334, -0.0201],
         [ 0.3804, -0.0561,  0.2635,  ...,  0.5556, -0.2606, -0.0417]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ']
processed prompt_list:['Use a few words to illustrate what is happening in the picture.', 'Present a short description of this image.', 'Write a short description for the image.', 'Use a few words to illustrate what is happening in the picture.', 'Provide a concise depiction of this image.', 'Present a short description of this image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.5748e-04, -5.8940e-04, -1.2074e-03,  ..., -1.0474e-04,
          -2.0353e-05,  2.1198e-04],
         [-9.0197e-04, -4.4385e-04, -1.1309e-03,  ..., -1.0418e-04,
           3.5151e-04,  7.4300e-04],
         [-4.5321e-04, -4.6963e-04, -7.0468e-04,  ..., -9.5877e-04,
           3.5329e-04,  2.4742e-04],
         ...,
         [ 5.7232e-04, -1.0677e-03,  1.1313e-03,  ..., -2.7856e-04,
          -1.0456e-05, -7.8462e-04],
         [-5.6854e-04,  6.8575e-04, -7.7592e-04,  ..., -8.1626e-05,
           4.3257e-04,  2.1225e-04],
         [-5.2326e-04,  7.8750e-04, -7.4386e-04,  ...,  6.0960e-05,
           4.3289e-04,  2.6898e-04]],

        [[-1.1109e-03, -5.2151e-04, -2.6028e-04,  ..., -3.2433e-04,
          -3.6066e-04,  8.2696e-04],
         [-6.2509e-04,  5.5791e-04, -1.2931e-03,  ...,  1.8629e-04,
           2.5180e-04,  5.7983e-04],
         [-1.2138e-03, -8.0537e-04, -6.4229e-04,  ...,  6.2292e-05,
           4.6892e-04,  2.1569e-04],
         ...,
         [ 5.6084e-04, -1.0356e-03,  1.1406e-03,  ..., -2.8421e-04,
          -1.4076e-06, -7.7459e-04],
         [-6.3844e-04,  9.3511e-04, -7.0014e-04,  ...,  2.6700e-04,
           3.9232e-04,  5.1075e-04],
         [-6.0984e-04,  9.2686e-04, -6.9336e-04,  ...,  2.9353e-04,
           4.1668e-04,  4.6509e-04]],

        [[-5.3456e-04, -2.1040e-04, -3.3725e-04,  ...,  2.3458e-05,
           4.6935e-04, -2.5895e-04],
         [-1.1044e-03, -7.7777e-04,  3.8126e-04,  ..., -8.9079e-04,
           2.6800e-04,  1.7251e-04],
         [-8.1527e-04, -4.9048e-05, -1.9464e-04,  ...,  1.9619e-04,
           5.7369e-04, -6.9091e-05],
         ...,
         [ 5.5695e-04, -1.0618e-03,  1.1385e-03,  ..., -2.7705e-04,
          -1.0055e-05, -7.7414e-04],
         [-4.6831e-04,  5.9422e-04, -5.9090e-04,  ...,  3.4857e-04,
           3.5355e-04, -8.3052e-05],
         [-4.6369e-04,  6.1778e-04, -6.1019e-04,  ...,  3.8546e-04,
           3.2951e-04, -9.1802e-05]],

        [[-7.4837e-04,  8.1264e-04, -1.0007e-03,  ..., -5.5640e-05,
           2.9730e-04,  2.8397e-04],
         [-1.3339e-03, -3.8889e-04, -8.1868e-04,  ..., -8.9253e-05,
          -3.7551e-05,  3.6391e-04],
         [-1.4847e-03, -3.3107e-05, -6.4323e-04,  ..., -1.8715e-04,
           2.3026e-04,  5.0912e-04],
         ...,
         [-1.4420e-03, -2.0787e-04, -5.3407e-04,  ..., -6.3782e-04,
          -2.3847e-04,  2.9046e-04],
         [-7.1689e-04,  9.7292e-04, -1.0203e-03,  ..., -3.6390e-05,
           2.9302e-04,  2.5396e-05],
         [-1.5848e-03, -1.7464e-04, -4.4549e-04,  ..., -5.1610e-04,
          -5.6160e-04,  2.1089e-04]],

        [[-5.3574e-04,  3.5991e-05, -8.2414e-04,  ..., -1.2520e-03,
           2.8482e-04,  3.9990e-04],
         [-1.0529e-03,  1.9766e-04, -7.7396e-04,  ..., -1.0873e-03,
           2.7301e-04,  4.7878e-04],
         [-6.6214e-04,  6.6786e-04, -9.6511e-04,  ..., -4.4516e-04,
           4.9399e-04,  4.8637e-04],
         ...,
         [ 5.5166e-04, -1.0543e-03,  1.1486e-03,  ..., -2.9799e-04,
          -1.2952e-05, -7.8789e-04],
         [-5.0773e-04,  1.0364e-03, -7.1291e-04,  ...,  2.3451e-04,
           4.9538e-04,  1.0621e-04],
         [-4.9246e-04,  1.0467e-03, -7.0664e-04,  ...,  2.5335e-04,
           4.9816e-04,  1.0305e-04]],

        [[-5.9390e-04, -2.1206e-04, -4.2792e-04,  ..., -8.2822e-04,
          -1.5788e-04, -3.4601e-04],
         [-1.0192e-03,  3.2249e-04, -1.1098e-03,  ...,  7.2877e-05,
           5.0483e-04,  5.1580e-04],
         [-7.2175e-04, -4.7213e-04, -4.2777e-04,  ..., -6.1049e-04,
           3.2107e-04, -3.2826e-04],
         ...,
         [ 6.0334e-04, -1.0697e-03,  1.1254e-03,  ..., -2.9057e-04,
           9.4124e-06, -7.9374e-04],
         [-3.1222e-04,  7.1030e-05, -1.0536e-03,  ...,  1.8064e-04,
           7.5162e-04,  6.3587e-05],
         [-2.5247e-04,  1.5705e-05, -1.0156e-03,  ...,  1.9233e-04,
           7.8505e-04,  4.5552e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.2138, -1.7340, -0.0729,  ...,  1.6281, -0.6219,  0.7758],
         [-0.1491,  0.2282,  0.6899,  ...,  0.9535, -0.3309, -0.1369],
         [ 0.2277, -0.3829, -0.7554,  ...,  0.3043, -0.5151,  1.2845],
         ...,
         [ 0.1121,  0.3320,  0.7073,  ...,  0.7517, -0.0991,  0.1754],
         [-0.1042,  0.0407,  0.3501,  ...,  0.5514, -0.1049, -0.2419],
         [-0.0934,  0.0468,  0.3440,  ...,  0.5270, -0.0672, -0.2367]],

        [[ 0.6032,  0.0041, -0.6733,  ...,  0.0482, -0.0377,  1.2285],
         [ 0.6200,  0.1291, -1.0138,  ..., -0.3070, -0.6996,  1.4404],
         [ 1.2488, -0.6943, -0.1186,  ..., -1.3109, -0.8049,  1.2478],
         ...,
         [ 0.0409, -0.1590,  0.0296,  ...,  0.2072, -0.0837,  0.0159],
         [ 0.4134, -0.4996, -0.2180,  ...,  0.2809, -0.0519, -0.0801],
         [ 0.4202, -0.4722, -0.1799,  ...,  0.3107, -0.0614, -0.0575]],

        [[ 0.6136, -1.2703, -0.4638,  ...,  0.3209, -0.3017,  2.0946],
         [-0.3421, -0.3358,  0.0247,  ...,  0.6976, -0.1446, -0.1413],
         [ 0.3125,  1.0409, -1.1222,  ...,  0.6848, -0.3748,  1.5624],
         ...,
         [-0.3430, -0.2328,  0.2271,  ...,  0.7396, -0.0178,  0.0470],
         [ 0.0029, -0.1382,  0.2434,  ...,  0.3619, -0.1004, -0.2920],
         [ 0.0090, -0.1433,  0.2341,  ...,  0.3669, -0.1027, -0.2983]],

        [[ 0.3827, -0.6940, -0.1449,  ...,  1.5007,  0.4630,  0.5111],
         [ 0.0209, -0.5475, -0.1116,  ...,  0.4322, -1.6291,  1.8498],
         [ 0.7775, -0.9105, -0.1031,  ...,  0.2041, -0.6348,  0.4833],
         ...,
         [ 0.0137, -0.1533, -0.0320,  ...,  0.1959, -0.0893,  0.0215],
         [ 0.4701, -0.1664,  0.1477,  ...,  0.4784,  0.2122, -0.2206],
         [ 0.4551, -0.1932,  0.1639,  ...,  0.4440,  0.2304, -0.2281]],

        [[ 0.7409, -0.2435, -0.9917,  ..., -0.2571,  0.0375,  1.1888],
         [ 1.3405, -0.5369, -1.3834,  ..., -0.2964,  0.0933,  1.1811],
         [ 1.3696, -0.8500, -1.3888,  ..., -0.0135,  0.1102,  1.7341],
         ...,
         [ 0.0629, -0.1267,  0.0181,  ...,  0.2417, -0.0733,  0.0268],
         [ 0.0036, -0.1101,  0.8053,  ...,  0.0117, -0.3292,  0.0705],
         [-0.0057, -0.0620,  0.7956,  ...,  0.0262, -0.3031,  0.0670]],

        [[ 0.6559, -1.1099,  0.1059,  ...,  0.9108, -0.6944,  2.0741],
         [-0.5005,  0.1091, -0.2333,  ...,  0.5039, -0.0758,  0.1850],
         [ 1.3987,  1.1338, -1.0685,  ...,  0.1446, -0.8219,  2.1474],
         ...,
         [ 0.2321,  0.1028, -0.0231,  ..., -0.0203, -0.3821,  0.5128],
         [ 0.1301, -0.1643,  0.3316,  ...,  0.4432, -0.1471, -0.4268],
         [ 0.1217, -0.1393,  0.3355,  ...,  0.4294, -0.0909, -0.4047]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ']
processed prompt_list:['Provide a description of what is presented in the photo.', 'Present a short description of this image.', 'Briefly describe this image.', 'Present a short description of this image.', 'Summarize this image in a few words.', 'Use a few words to illustrate what is happening in the picture.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.2902e-04,  6.7006e-04, -1.0264e-03,  ..., -3.6573e-04,
          -5.9380e-04,  1.7423e-04],
         [-1.0116e-03,  6.8880e-04, -1.1532e-03,  ...,  3.8647e-04,
           1.7208e-04,  4.5160e-04],
         [-4.1490e-04,  2.4044e-05, -6.5292e-04,  ..., -1.6275e-04,
          -1.5808e-04,  2.8859e-04],
         ...,
         [-8.7932e-04,  8.0458e-04, -1.0550e-03,  ...,  1.2914e-04,
           1.2390e-04,  6.2462e-04],
         [-4.0823e-04,  6.9350e-05, -1.0047e-03,  ...,  3.7582e-04,
           8.1170e-04,  7.9121e-05],
         [-3.6349e-04,  4.1295e-05, -9.8584e-04,  ...,  3.6492e-04,
           8.2757e-04,  6.9183e-05]],

        [[-6.8860e-04,  4.4250e-04, -8.9790e-04,  ...,  2.8672e-04,
          -2.1193e-04,  2.7931e-04],
         [-1.2512e-03,  2.7131e-05, -1.0277e-03,  ...,  2.2338e-04,
           2.0356e-04,  9.1738e-04],
         [-6.0900e-04, -1.8641e-04, -4.9472e-04,  ..., -5.1520e-04,
           7.8089e-04,  2.7165e-04],
         ...,
         [ 5.6710e-04, -1.0332e-03,  1.1446e-03,  ..., -2.9605e-04,
          -5.3815e-06, -7.6054e-04],
         [-3.7921e-04,  7.2339e-04, -8.3133e-04,  ...,  3.1767e-04,
           2.8027e-04,  2.7672e-04],
         [-3.5707e-04,  7.4726e-04, -8.1494e-04,  ...,  3.6180e-04,
           2.6810e-04,  2.7401e-04]],

        [[-4.5525e-04,  1.8082e-04, -6.9761e-04,  ..., -4.3625e-04,
           3.5195e-05, -1.5635e-04],
         [-7.0929e-04,  5.5537e-04, -1.1725e-03,  ...,  3.3374e-04,
           4.4752e-04,  3.8933e-04],
         [-2.3481e-04,  4.4863e-04, -7.7937e-04,  ..., -4.1164e-04,
          -2.3183e-04, -4.3401e-05],
         ...,
         [-6.0756e-04,  8.0595e-04, -1.1361e-03,  ...,  1.5391e-04,
           4.5745e-04,  4.0797e-04],
         [-2.9893e-04,  1.4175e-04, -9.9534e-04,  ...,  3.8014e-04,
           7.9209e-04,  1.4009e-04],
         [-2.8894e-04,  1.4483e-04, -9.9337e-04,  ...,  3.7916e-04,
           7.8491e-04,  1.4435e-04]],

        [[-6.0920e-04,  7.7826e-04, -1.2289e-03,  ..., -5.0384e-04,
          -2.4737e-04, -7.2977e-05],
         [-1.3311e-03,  1.4745e-04, -9.0899e-04,  ..., -3.3753e-04,
           2.9850e-05,  7.7416e-04],
         [-9.1214e-04, -5.3017e-05, -6.1619e-04,  ..., -5.4042e-04,
           6.5051e-04,  1.5965e-04],
         ...,
         [ 5.6055e-04, -1.0502e-03,  1.1419e-03,  ..., -2.8335e-04,
          -2.9565e-07, -7.7626e-04],
         [-4.9922e-04,  9.1547e-04, -9.2543e-04,  ...,  4.0464e-04,
           6.6610e-04,  4.2976e-04],
         [-4.8287e-04,  8.9940e-04, -9.4869e-04,  ...,  4.8406e-04,
           6.3404e-04,  4.5302e-04]],

        [[-1.2969e-03,  5.4268e-05, -1.2683e-03,  ..., -5.6579e-04,
           4.0403e-04,  6.0641e-04],
         [-1.2337e-03, -2.8368e-05, -1.1839e-03,  ..., -6.6756e-04,
           2.3401e-04,  2.5004e-04],
         [-1.0433e-03, -1.6380e-04, -3.5239e-04,  ..., -7.8107e-04,
          -3.0846e-05, -2.7609e-04],
         ...,
         [ 5.8293e-04, -1.0570e-03,  1.1460e-03,  ..., -3.0353e-04,
           1.3049e-05, -7.9727e-04],
         [-3.4928e-04,  7.8097e-04, -3.5497e-04,  ...,  3.6467e-04,
           5.0581e-04,  4.5134e-04],
         [-3.4050e-04,  8.2544e-04, -3.4145e-04,  ...,  3.9070e-04,
           5.0578e-04,  4.7310e-04]],

        [[-1.8578e-04,  1.3639e-04, -8.8594e-04,  ..., -3.3949e-05,
          -2.0363e-04, -2.2756e-04],
         [-8.4909e-04,  5.9716e-04, -8.9597e-04,  ...,  3.6582e-04,
           5.1002e-04,  1.3342e-04],
         [-4.2253e-04, -8.0339e-05, -9.7788e-04,  ..., -4.0324e-04,
          -4.2538e-04, -3.8111e-04],
         ...,
         [-4.3149e-04,  7.1788e-04, -8.0684e-04,  ..., -9.6990e-05,
           3.7892e-04,  7.1408e-04],
         [-2.8311e-04,  3.6812e-04, -1.1334e-03,  ...,  2.6264e-04,
           8.8577e-04,  1.3334e-04],
         [-2.4092e-04,  3.0344e-04, -1.0918e-03,  ...,  2.5556e-04,
           9.0888e-04,  9.6997e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] is it an indoors or outdoors scene? ', '<Img><ImageHere></Img> [vqa] what animal is this, a horse or a cow? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: are the utensils in a plate? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is the man in the top or in the bottom part of the photo? ', '<Img><ImageHere></Img> [vqa] what is the motorcycle inside of? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: in which part of the picture is the bird, the top or the bottom? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.0961,  0.1036, -0.6261,  ...,  1.5443,  0.5970,  1.7074],
         [ 0.0264,  0.1894, -0.4733,  ...,  1.6501,  0.5191,  1.6176],
         [ 0.5267,  1.0534,  0.2278,  ...,  1.1818, -0.4480,  0.2651],
         ...,
         [ 0.0127,  1.2872, -0.1839,  ...,  1.9710, -0.7822, -0.9392],
         [-0.0738,  0.1297, -0.3897,  ...,  1.8325,  0.6525,  1.4487],
         [-0.3499,  1.1164, -0.0181,  ...,  2.3321, -1.1390, -0.4789]],

        [[-0.3023, -0.4181, -0.0990,  ..., -0.0118, -0.1971,  1.5719],
         [-0.2685,  0.7711,  0.0949,  ...,  0.7537,  0.4578, -0.5484],
         [-0.2405, -0.2164,  0.1364,  ...,  0.4978, -0.0097,  0.7870],
         ...,
         [ 0.0788, -0.9631, -0.1936,  ...,  0.4939,  0.0432, -0.0876],
         [-0.3280, -0.4863, -0.1625,  ...,  0.1585, -0.5219,  1.1856],
         [ 0.2273, -0.8387,  0.1235,  ...,  1.2905, -0.4200, -0.5312]],

        [[-0.3027, -0.0850,  0.5397,  ..., -0.1893,  0.7733,  0.5313],
         [-0.4409,  0.5248,  0.7348,  ..., -0.1352,  0.0593,  0.5749],
         [-0.2451,  0.8370,  0.6825,  ..., -0.6489, -0.4105, -0.5080],
         ...,
         [-0.7426,  0.4239,  0.4739,  ...,  0.6801, -1.4854,  0.3721],
         [-0.4904,  1.1983,  0.5923,  ..., -0.3711, -0.5719,  0.5806],
         [ 0.0834,  0.1572,  0.4152,  ..., -0.2992,  0.6648,  0.4960]],

        [[-0.7473, -0.2992,  0.5939,  ...,  0.2584,  0.4085,  0.8056],
         [-1.0577, -0.4410,  0.4173,  ...,  0.4906,  0.4249,  0.7824],
         [-0.0984,  0.2484,  0.3374,  ...,  0.2470,  0.5540, -0.3431],
         ...,
         [ 0.6558,  0.4842, -0.2854,  ...,  0.1098,  0.9753, -0.0738],
         [ 0.4536, -0.2163,  0.1854,  ...,  0.0123,  0.4806,  0.0765],
         [-1.0233, -0.4306,  0.4665,  ...,  0.7838,  0.3284,  0.5714]],

        [[ 0.1571, -0.0125,  0.0763,  ..., -0.0730, -0.6483, -1.0838],
         [-0.4021,  0.1186, -0.1299,  ...,  0.3448, -0.2594, -0.5557],
         [ 0.5565, -0.3511, -0.4490,  ...,  0.4074, -0.7648, -0.5132],
         ...,
         [ 0.2413,  0.3413, -0.2825,  ...,  0.5061, -1.1415, -0.2235],
         [-0.6495, -0.5695,  0.4409,  ...,  1.0092,  0.0808, -0.8309],
         [-0.3145,  0.1692,  0.1527,  ...,  1.3162, -1.4564, -0.2264]],

        [[-0.3936, -1.1857,  0.0214,  ...,  0.6561,  0.7346,  0.8549],
         [ 0.4657, -0.8878,  0.3864,  ..., -0.0175, -0.5565, -0.2636],
         [-1.1842, -0.2657,  0.8811,  ...,  0.0586, -0.6630, -0.0433],
         ...,
         [ 0.1086,  0.7798, -0.1949,  ..., -0.2326,  0.0590, -0.7666],
         [-0.5964,  0.3185,  0.2473,  ..., -0.0581,  0.5068, -0.1530],
         [-0.0045, -1.2452,  1.0960,  ...,  1.0757,  0.0906,  0.4862]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] is it an indoors or outdoors scene? ', '<Img><ImageHere></Img> [vqa] what animal is this, a horse or a cow? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: are the utensils in a plate? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is the man in the top or in the bottom part of the photo? ', '<Img><ImageHere></Img> [vqa] what is the motorcycle inside of? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: in which part of the picture is the bird, the top or the bottom? ']
processed prompt_list:['is it an indoors or outdoors scene?', 'what animal is this, a horse or a cow?', 'Based on the image, respond to this question with a short answer: are the utensils in a plate?', 'Based on the image, respond to this question with a short answer: is the man in the top or in the bottom part of the photo?', 'what is the motorcycle inside of?', 'Based on the image, respond to this question with a short answer: in which part of the picture is the bird, the top or the bottom?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.2548e-03,  3.2662e-05, -1.1633e-03,  ...,  1.5649e-04,
           2.7645e-05,  5.0258e-04],
         [-1.0379e-03, -2.8683e-04, -8.6145e-04,  ...,  1.4199e-04,
           2.5948e-04,  3.5129e-04],
         [-8.2088e-04,  9.1255e-05, -5.4408e-04,  ..., -2.4220e-04,
           5.0556e-04,  5.7404e-04],
         ...,
         [-1.8926e-05,  3.7499e-04, -6.7255e-04,  ..., -2.1701e-04,
          -8.6220e-05,  8.1738e-04],
         [-1.1491e-03, -1.7255e-04, -9.0775e-04,  ...,  3.4213e-07,
           1.0431e-04,  2.0195e-04],
         [-3.3093e-04, -3.2818e-05, -5.7770e-04,  ..., -3.5987e-04,
           2.9964e-05,  8.8424e-04]],

        [[-1.1393e-03,  4.8667e-05, -7.4597e-04,  ..., -6.9668e-04,
          -3.6919e-04, -1.8152e-04],
         [-9.8313e-04,  6.7317e-04, -1.0040e-03,  ...,  4.2014e-05,
          -6.2705e-04, -1.8850e-04],
         [-9.4870e-04,  5.1062e-04, -7.5161e-04,  ..., -4.0468e-04,
          -3.3095e-04,  7.6020e-04],
         ...,
         [-6.1423e-04,  4.1947e-04, -5.2272e-04,  ..., -3.2197e-04,
          -6.7029e-04,  4.5684e-04],
         [-1.1073e-03, -1.4401e-04, -3.8980e-04,  ..., -6.6354e-04,
          -2.1155e-04, -1.5875e-04],
         [-4.2582e-04,  3.3726e-04, -4.3444e-04,  ..., -2.7287e-04,
          -6.7499e-04,  1.6851e-04]],

        [[-1.0209e-03, -8.7633e-05, -1.0409e-03,  ..., -4.6746e-04,
          -3.3746e-04,  2.0720e-05],
         [-1.1100e-03, -3.7381e-04, -1.1138e-03,  ..., -8.3227e-04,
          -4.7653e-04, -4.4277e-04],
         [-2.2544e-04,  3.9178e-04, -7.9214e-04,  ..., -4.7066e-06,
          -3.4221e-04, -4.3313e-05],
         ...,
         [-7.8328e-04,  6.4701e-04, -8.3854e-04,  ..., -5.1980e-04,
          -7.3325e-04,  6.9275e-04],
         [-9.6207e-04, -3.6238e-04, -9.0263e-04,  ..., -1.0015e-03,
          -4.7010e-04, -3.0841e-04],
         [-1.0128e-03, -1.1893e-04, -1.0223e-03,  ..., -3.5519e-04,
          -4.1510e-04,  7.7564e-05]],

        [[-1.0070e-03, -3.0225e-06, -1.0089e-03,  ...,  8.2055e-05,
          -3.5601e-04,  5.4387e-04],
         [-8.7158e-04, -2.5708e-05, -9.8225e-04,  ..., -1.3442e-04,
          -7.7362e-05,  5.4195e-04],
         [-2.3470e-04,  3.0173e-04, -6.8503e-04,  ..., -2.6285e-04,
          -8.6106e-04, -8.2409e-05],
         ...,
         [-5.4540e-04,  4.6844e-04, -4.7155e-04,  ..., -5.7886e-04,
          -7.6815e-04,  4.8278e-04],
         [-6.1335e-04,  4.8971e-05, -5.5646e-04,  ..., -2.3401e-04,
          -9.2696e-04,  1.9816e-04],
         [-8.1235e-04, -8.7700e-05, -8.0047e-04,  ..., -1.8003e-04,
          -5.1990e-05,  6.6215e-04]],

        [[ 2.3780e-05,  1.4032e-03, -6.7785e-04,  ..., -1.6329e-04,
           6.7452e-05,  3.1683e-04],
         [-6.8185e-04,  1.4154e-03, -8.1553e-04,  ..., -3.3469e-04,
          -2.6617e-04,  1.1620e-05],
         [-6.0250e-04,  4.0554e-04, -1.2809e-03,  ..., -6.3521e-04,
          -1.3273e-04,  3.9298e-04],
         ...,
         [-8.3212e-04,  5.7697e-04, -6.6810e-04,  ..., -1.1587e-03,
          -4.7218e-04,  8.3644e-04],
         [-6.3348e-04,  9.8668e-04, -5.6055e-04,  ..., -5.1098e-04,
           1.9710e-04, -2.6049e-04],
         [-8.1287e-04,  5.3841e-04, -1.0382e-04,  ..., -9.4149e-04,
           6.2878e-04, -1.5672e-04]],

        [[-3.2617e-04,  7.3300e-05, -5.5746e-04,  ..., -1.2335e-05,
          -2.3994e-04,  3.5274e-04],
         [-4.8629e-04, -3.7427e-05, -5.6512e-05,  ..., -3.5569e-04,
          -3.6062e-05, -2.2379e-04],
         [-8.6005e-04,  2.2725e-04, -3.5067e-04,  ..., -2.5849e-04,
          -9.3892e-04, -3.6083e-05],
         ...,
         [ 1.4092e-05,  1.3144e-03, -2.7244e-04,  ..., -8.6129e-04,
           2.2787e-04,  7.2077e-04],
         [-6.9502e-05,  6.9693e-04, -8.2638e-04,  ..., -6.4821e-04,
          -1.9561e-04,  3.4464e-04],
         [-3.4048e-04, -5.8845e-05,  6.7345e-05,  ..., -3.6530e-04,
          -5.2778e-04, -1.1053e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] give me the location of fat black jacket ', '<Img><ImageHere></Img> [refer] the location of black dog is ', '<Img><ImageHere></Img> [refer] give me the location of closet man in apron ', '<Img><ImageHere></Img> [refer] where can I locate the better lit cat ? ', '<Img><ImageHere></Img> [refer] woman ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of boston player ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.2832, -0.7206,  1.0769,  ...,  0.9491,  0.4822,  1.0160],
         [ 1.0919,  0.5434,  0.2868,  ...,  0.8852, -0.9584, -0.0370],
         [ 1.2963,  1.0332,  0.0856,  ...,  0.1589, -0.8746, -0.4452],
         ...,
         [ 0.2393,  0.9346, -0.4209,  ...,  0.5974, -1.3050,  0.0737],
         [ 0.2870,  0.6674, -0.4300,  ...,  0.6571, -0.7086, -0.8262],
         [-0.2824,  0.4656, -0.1691,  ...,  0.7768, -0.0076, -0.2823]],

        [[-1.2920, -0.0868,  1.2184,  ...,  0.0102, -0.9356, -0.5545],
         [-1.1725,  0.2320,  0.4432,  ..., -0.4164, -0.7094, -0.4449],
         [-0.6471, -0.9369,  1.1738,  ..., -0.2242, -1.1001, -0.9355],
         ...,
         [-0.5890, -0.0528,  0.6535,  ...,  0.0420, -0.3768,  0.3911],
         [-0.2691, -0.0904,  0.6260,  ...,  1.1251,  0.6454,  0.0108],
         [-0.3540, -0.0959,  0.7089,  ...,  1.0623,  0.5809,  0.0112]],

        [[ 0.1245, -0.2795,  0.8149,  ...,  0.9427,  0.4354,  0.9815],
         [ 0.0882,  0.3824,  0.2369,  ...,  0.2620,  0.2810, -0.0646],
         [-0.5377, -0.7662,  0.7450,  ...,  0.8505, -0.2023,  0.6690],
         ...,
         [ 0.4814, -0.1509,  1.0098,  ...,  0.9601,  0.5890,  0.9708],
         [ 0.7247,  0.4014, -0.3959,  ...,  0.7336, -0.5452,  0.3111],
         [-0.3217, -0.9928,  0.4279,  ...,  0.5583, -0.3326,  0.1027]],

        [[ 0.9552,  0.3665, -0.2122,  ...,  1.0518, -1.1917, -0.1275],
         [-0.0641, -1.4609,  1.2487,  ...,  1.1739,  0.7706, -0.1214],
         [-0.1770,  0.5583,  1.0286,  ...,  1.2438, -0.6244, -0.5706],
         ...,
         [ 0.4563, -0.0776,  0.8808,  ...,  0.6792, -0.6277, -0.1022],
         [ 0.7226,  0.4258, -0.7032,  ...,  0.7263, -1.5271,  0.4046],
         [ 0.8146,  0.8148,  0.3718,  ...,  1.1370, -0.8442, -0.1766]],

        [[ 0.1848, -0.2406,  0.5749,  ...,  1.2310,  1.0870,  1.1387],
         [-0.2651, -0.4650,  0.2456,  ...,  1.3049,  1.1845,  0.9745],
         [ 0.7927,  0.4113,  0.8318,  ...,  0.9507,  0.4550,  0.7555],
         ...,
         [ 0.0730, -0.1850,  0.3288,  ...,  0.2196, -0.1503, -1.1091],
         [ 0.6333,  0.0881,  0.0629,  ...,  0.1876,  0.6670, -0.5405],
         [-0.1005, -0.3264,  0.2391,  ...,  0.7430, -0.4512,  0.5379]],

        [[-0.0591, -0.1274, -0.5912,  ...,  0.3485,  0.7824,  0.4585],
         [-0.0689,  0.1232, -0.2181,  ...,  0.4711,  0.8654,  0.9071],
         [ 0.3867,  0.1763,  0.1069,  ...,  1.2293, -0.3734,  0.4828],
         ...,
         [ 0.6288,  0.3801,  0.8330,  ..., -0.4847, -1.0325, -0.8737],
         [ 0.6403,  0.7667, -0.0329,  ...,  0.1531, -1.4441, -0.5559],
         [-0.3129,  0.3594, -0.1963,  ...,  0.4827,  0.4275,  0.3234]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] give me the location of fat black jacket ', '<Img><ImageHere></Img> [refer] the location of black dog is ', '<Img><ImageHere></Img> [refer] give me the location of closet man in apron ', '<Img><ImageHere></Img> [refer] where can I locate the better lit cat ? ', '<Img><ImageHere></Img> [refer] woman ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of boston player ']
processed prompt_list:['give me the location of fat black jacket', 'the location of black dog is', 'give me the location of closet man in apron', 'where can I locate the better lit cat ?', 'woman', 'from this image, tell me the location of boston player']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.0299e-04,  4.4139e-04, -1.2290e-03,  ..., -3.2789e-05,
           1.2735e-04,  1.5851e-04],
         [-5.4498e-04,  6.1813e-04, -6.1956e-04,  ..., -1.9230e-04,
          -2.1560e-04,  3.5496e-04],
         [-6.5978e-04,  3.6194e-04, -7.2532e-04,  ..., -4.6290e-04,
          -3.4257e-04,  7.2724e-04],
         ...,
         [-1.1901e-03,  3.7615e-04, -5.2480e-04,  ..., -7.2076e-04,
          -3.1521e-04,  1.1776e-04],
         [-5.6565e-04,  7.1926e-04, -1.0002e-03,  ..., -7.7190e-04,
          -2.2097e-04, -2.1798e-04],
         [-4.8364e-05,  9.5905e-04, -8.9078e-04,  ..., -4.6855e-04,
          -2.5182e-04,  5.8658e-05]],

        [[-1.4220e-04,  2.9347e-04, -6.3231e-04,  ..., -2.7556e-04,
          -4.1430e-04, -3.5627e-04],
         [-2.7257e-04,  1.1490e-04, -5.6616e-04,  ...,  2.5202e-05,
          -2.4940e-04, -4.9306e-04],
         [-4.6654e-04,  6.1449e-05, -6.6103e-04,  ...,  1.9974e-04,
          -4.1857e-04, -4.1117e-04],
         ...,
         [-5.9171e-04,  1.7015e-04, -4.6864e-04,  ...,  1.0933e-04,
           9.5054e-05,  1.0276e-04],
         [-8.5989e-04,  1.0001e-04, -1.0407e-03,  ..., -4.3341e-05,
           8.5368e-05,  1.0061e-04],
         [-8.6938e-04,  1.1035e-04, -1.0182e-03,  ..., -6.5012e-05,
          -5.2239e-07,  1.0359e-04]],

        [[-9.0466e-04,  2.5088e-05, -1.2697e-03,  ..., -8.6968e-05,
          -2.3259e-04,  4.0307e-04],
         [ 2.6749e-06,  2.0531e-04, -9.6587e-04,  ..., -5.3106e-04,
          -5.3872e-04,  7.8390e-04],
         [-7.4084e-04,  1.1079e-04, -9.6860e-04,  ..., -6.3337e-04,
          -2.5796e-04,  2.0684e-04],
         ...,
         [-8.4217e-04,  7.7036e-05, -1.3334e-03,  ...,  1.4230e-04,
          -1.6620e-04,  3.7615e-04],
         [-7.0193e-04,  7.5515e-05, -8.5632e-04,  ...,  1.9262e-04,
          -3.1021e-04,  1.0280e-03],
         [-3.9695e-04,  2.1565e-04, -8.8932e-04,  ...,  2.8602e-04,
          -4.3237e-05,  2.1684e-04]],

        [[-3.8697e-04,  8.8178e-04, -7.2909e-04,  ..., -3.5142e-04,
          -6.5561e-04,  6.7160e-05],
         [-6.7174e-04,  2.8764e-05, -7.9254e-04,  ..., -5.1446e-04,
          -2.0015e-04,  1.1932e-04],
         [-8.8553e-04,  5.7602e-04, -1.2619e-03,  ..., -7.6851e-04,
          -6.8349e-04,  7.5227e-04],
         ...,
         [-8.8835e-04,  1.6102e-04, -3.1422e-04,  ...,  1.6494e-04,
          -1.0121e-03,  2.5185e-04],
         [-7.7080e-04,  7.3592e-04, -5.5433e-04,  ..., -8.5718e-05,
          -6.7427e-04,  5.4859e-04],
         [-4.9007e-04,  6.4177e-04, -1.0746e-03,  ..., -4.0692e-04,
          -7.5536e-04,  7.9226e-04]],

        [[-6.3646e-04, -5.6254e-05, -9.2998e-04,  ..., -9.6893e-05,
          -2.7296e-05,  2.8640e-04],
         [-7.2363e-04, -1.1014e-04, -5.8233e-04,  ..., -3.8299e-04,
          -1.4285e-04,  1.7651e-04],
         [-4.9191e-04, -1.8262e-04, -5.3706e-04,  ...,  9.6599e-05,
          -7.2764e-04, -6.9620e-06],
         ...,
         [-5.4743e-04,  9.1508e-04, -7.3767e-04,  ...,  1.6840e-05,
          -1.3020e-04,  8.1663e-04],
         [-6.7089e-04,  5.7525e-04, -6.2712e-04,  ...,  2.8120e-04,
          -5.5527e-04,  7.7224e-04],
         [-6.4412e-04, -8.7921e-05, -7.9129e-04,  ..., -4.0520e-04,
          -3.5121e-04,  6.7554e-05]],

        [[-4.7982e-04,  2.5073e-04, -6.1374e-04,  ..., -4.3010e-04,
           1.5974e-06,  1.1454e-04],
         [-4.7132e-04,  3.2724e-04, -5.6776e-04,  ..., -3.7677e-04,
          -7.0851e-05,  1.0426e-04],
         [-5.7962e-04, -9.6743e-05, -3.2642e-04,  ..., -4.7911e-04,
          -6.7104e-04,  5.7005e-04],
         ...,
         [-4.4072e-05,  2.4097e-04,  2.2548e-04,  ...,  6.1046e-05,
          -1.6223e-04, -5.2083e-05],
         [-8.1274e-04, -4.0947e-07, -5.1425e-05,  ...,  3.1250e-04,
          -4.0709e-04,  3.9727e-04],
         [-5.1885e-04,  1.0305e-04, -9.4493e-05,  ..., -4.7918e-04,
          -1.4599e-04, -1.2591e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: why is he standing there? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what cartoon is featured on the backpack on the right? ', '<Img><ImageHere></Img> [vqa] the device in front of the beige car parked on the side of the street can be used for what purpose? ', "<Img><ImageHere></Img> [vqa] what type of military individual fly's this plane? ", '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what type or activity does this group enjoy? ', '<Img><ImageHere></Img> [vqa] why is he wearing a glove? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.0849,  0.0964,  0.9184,  ...,  0.5044, -1.3254, -0.3207],
         [-0.4640, -0.1809,  0.7282,  ...,  0.9812,  0.1374,  1.4546],
         [-0.4641,  0.9277,  1.1429,  ...,  0.2756, -0.8318, -0.3580],
         ...,
         [ 0.0724,  0.9542,  0.3197,  ...,  1.4402, -1.6725,  0.1272],
         [ 0.3620,  0.3717, -0.3213,  ...,  0.9622, -0.6236,  0.2900],
         [-0.7702, -0.1605,  0.7541,  ...,  1.4192, -0.4794,  0.6865]],

        [[ 0.2333,  0.9297, -0.2086,  ...,  0.2148, -0.7421,  0.4218],
         [ 0.4954,  0.6491, -0.3333,  ...,  0.4815,  0.1715,  0.8980],
         [ 0.0633,  0.6040, -0.0140,  ..., -0.0504, -0.4209, -0.1482],
         ...,
         [ 0.1040, -0.1128,  0.4844,  ...,  0.7410, -0.3490,  0.2965],
         [-0.6772,  1.5021,  0.8566,  ...,  0.1487, -0.4367,  0.4761],
         [ 0.4381,  0.1334,  0.5092,  ...,  1.0443,  1.0465,  0.6325]],

        [[-0.7661,  1.2802,  0.8682,  ...,  0.5512, -0.2271,  0.1483],
         [-0.2497, -0.0666,  0.8527,  ...,  0.1023,  0.0909,  0.2604],
         [-0.6018,  0.2910,  0.5880,  ...,  0.3962,  0.4090,  0.2825],
         ...,
         [ 0.2160, -0.5053,  1.1704,  ..., -0.2602,  0.4472,  0.9781],
         [ 0.0791, -0.7053,  1.7670,  ..., -0.7336,  0.8008,  0.7583],
         [-0.0412, -0.7550,  2.0540,  ...,  0.5878,  0.6836,  1.0102]],

        [[-1.0588, -0.3336,  0.4248,  ...,  0.1903,  0.7570,  0.4102],
         [-1.0287, -0.1496,  0.0647,  ...,  0.2050,  0.8471,  0.4280],
         [-0.3361,  0.0212, -0.4073,  ...,  0.5224,  1.0709, -0.0338],
         ...,
         [-1.6635,  0.1929,  0.4265,  ...,  0.7864,  1.0292,  0.8004],
         [-1.2535,  0.2689,  0.6315,  ...,  0.7814,  0.6736,  0.2323],
         [-1.6988,  0.4850,  0.3327,  ...,  0.7019,  1.2456,  0.7628]],

        [[ 0.3414,  0.0611,  0.8675,  ...,  0.9374, -1.1939,  0.8058],
         [ 0.3317, -0.1717,  1.0886,  ...,  1.2913, -1.7054,  0.5668],
         [-1.0787, -0.3335,  1.5417,  ...,  0.2593, -1.7867, -0.0783],
         ...,
         [-0.0962,  0.8455,  0.5584,  ...,  0.5914, -1.0333, -0.3870],
         [ 0.1420,  0.7284,  0.8580,  ...,  0.5952, -0.7052, -0.6105],
         [-0.6124, -0.3632, -0.1320,  ...,  0.0231,  0.0991,  0.6105]],

        [[ 0.1317,  0.1892,  0.3746,  ...,  1.3990, -0.0184, -0.2265],
         [-0.1250, -0.5361,  0.0612,  ..., -0.0807, -0.7597, -0.0979],
         [ 0.7704,  0.5133, -0.1615,  ...,  0.9127, -0.6325,  0.1028],
         ...,
         [ 0.9308,  0.2958,  0.3668,  ...,  0.6884, -0.5763,  0.3204],
         [-0.6471, -0.8763, -0.1198,  ..., -0.0734,  0.3505,  0.5333],
         [-0.4018, -0.5874,  0.4792,  ...,  0.8390,  1.0838,  0.5961]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: why is he standing there? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what cartoon is featured on the backpack on the right? ', '<Img><ImageHere></Img> [vqa] the device in front of the beige car parked on the side of the street can be used for what purpose? ', "<Img><ImageHere></Img> [vqa] what type of military individual fly's this plane? ", '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what type or activity does this group enjoy? ', '<Img><ImageHere></Img> [vqa] why is he wearing a glove? ']
processed prompt_list:['Based on the image, respond to this question with a short answer: why is he standing there?', 'Based on the image, respond to this question with a short answer: what cartoon is featured on the backpack on the right?', 'the device in front of the beige car parked on the side of the street can be used for what purpose?', "what type of military individual fly's this plane?", 'Based on the image, respond to this question with a short answer: what type or activity does this group enjoy?', 'why is he wearing a glove?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.8578e-04,  2.6645e-04, -8.5753e-04,  ..., -6.7566e-04,
          -2.9637e-04, -3.5833e-04],
         [-8.4366e-04,  4.6332e-04, -1.2302e-03,  ..., -3.7630e-04,
           2.5751e-04, -1.4713e-04],
         [-6.0488e-04,  1.5322e-04, -9.1651e-04,  ..., -1.8010e-04,
          -5.4500e-04,  8.5313e-07],
         ...,
         [-6.0459e-04,  5.5897e-04, -4.0170e-04,  ..., -6.1035e-04,
          -6.6126e-04,  1.3134e-04],
         [-1.3047e-03, -1.2610e-04, -1.6261e-04,  ..., -3.9847e-04,
          -5.4927e-04, -1.8576e-04],
         [-1.1851e-03,  2.0835e-04, -5.5797e-04,  ..., -1.1235e-03,
          -5.7788e-04, -7.8267e-04]],

        [[-7.9871e-04,  4.5125e-04, -1.5553e-03,  ...,  1.6333e-04,
          -1.6799e-04,  3.2953e-04],
         [-3.8688e-04,  1.2780e-04, -1.2864e-03,  ...,  3.4224e-04,
           2.5392e-04,  2.5344e-04],
         [-7.8046e-04,  3.9501e-04, -1.0990e-03,  ...,  1.9225e-04,
          -3.0750e-04,  5.0739e-04],
         ...,
         [-7.5650e-04, -1.7077e-05, -1.1446e-04,  ..., -1.0407e-03,
           9.4147e-05,  4.4193e-05],
         [-9.9274e-04,  7.4954e-04, -3.8117e-04,  ..., -5.4094e-04,
          -5.8692e-04,  6.6420e-04],
         [-8.1346e-04,  1.5419e-04, -7.7260e-04,  ..., -1.6904e-04,
           1.7604e-04,  3.5708e-04]],

        [[-4.5763e-04,  5.2691e-04, -9.4355e-04,  ..., -1.4000e-03,
          -9.3636e-04,  1.8471e-04],
         [-4.9086e-04,  7.2816e-04, -7.5782e-04,  ..., -1.0056e-03,
          -4.4493e-04, -2.1708e-04],
         [-6.0797e-04,  1.1538e-03, -1.2418e-03,  ..., -8.9019e-04,
          -5.0608e-04, -1.1097e-04],
         ...,
         [-2.4856e-04,  7.3276e-04, -5.5747e-04,  ..., -3.0771e-04,
          -2.6173e-04, -3.2950e-04],
         [-6.7509e-05,  8.6565e-04, -4.9220e-04,  ..., -1.3789e-04,
          -2.3664e-04, -4.9938e-04],
         [ 4.8605e-05,  2.4529e-04, -4.2060e-04,  ..., -4.2604e-05,
          -3.1073e-04, -7.0698e-04]],

        [[-7.4132e-04,  1.1531e-04, -1.5792e-03,  ..., -5.2384e-04,
           2.2619e-04,  6.1657e-05],
         [-7.6004e-04,  8.0955e-05, -1.5316e-03,  ..., -4.5559e-04,
           1.5294e-04,  2.2780e-04],
         [-3.7541e-04,  5.4398e-05, -1.4921e-03,  ..., -2.3086e-04,
           4.5240e-04,  5.2653e-04],
         ...,
         [-8.2547e-04, -2.1691e-04, -1.0674e-03,  ..., -1.2360e-04,
           1.7331e-04,  4.3118e-05],
         [-7.6985e-04, -2.8319e-04, -1.2151e-03,  ..., -2.7457e-04,
          -3.1479e-05, -7.6542e-05],
         [-7.4581e-04,  5.6625e-05, -1.3573e-03,  ..., -1.8321e-04,
           4.5012e-04,  7.3622e-05]],

        [[ 6.9646e-05,  2.7168e-04, -4.0383e-04,  ..., -5.0764e-04,
           1.4239e-04, -4.8526e-04],
         [ 2.3825e-04,  3.1672e-04, -2.2861e-04,  ..., -7.0202e-04,
           8.2394e-05, -3.6792e-04],
         [-4.8517e-04,  6.2762e-04,  2.5406e-04,  ..., -6.1567e-04,
          -2.7772e-04, -3.6902e-04],
         ...,
         [-4.5160e-04,  2.4363e-04, -6.8781e-04,  ...,  1.0081e-04,
          -4.5016e-04, -2.3498e-05],
         [-5.5407e-04,  2.0658e-04, -8.1490e-04,  ...,  2.4890e-04,
          -5.9079e-04,  1.5056e-04],
         [-6.4588e-04,  3.4393e-05, -5.2983e-04,  ..., -9.2150e-06,
          -3.9666e-04, -4.6789e-05]],

        [[-1.0071e-03,  6.8848e-04, -4.6809e-04,  ..., -5.0690e-04,
          -5.5002e-04,  2.1991e-04],
         [-5.0776e-04,  4.1701e-04, -6.9262e-04,  ..., -3.3747e-04,
           1.0150e-06,  8.6816e-05],
         [-7.5527e-04,  6.3258e-04, -8.1661e-04,  ..., -1.0980e-04,
          -2.3782e-04,  7.4041e-04],
         ...,
         [-1.0991e-03,  9.5523e-05, -3.9718e-04,  ..., -3.8616e-04,
          -3.3801e-04,  6.5542e-04],
         [-6.0072e-04,  1.9519e-04, -7.0387e-04,  ..., -7.4159e-04,
          -1.4338e-04,  2.4927e-04],
         [-7.4392e-04,  3.1750e-04, -1.1397e-03,  ..., -3.5317e-04,
           7.5093e-05,  6.0550e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [identify] the object in {<11><24><45><75>} is ', '<Img><ImageHere></Img> [identify] the object in {<2><50><37><90>} is ', '<Img><ImageHere></Img> [identify] what is it in {<37><9><93><80>} ', '<Img><ImageHere></Img> [identify] what is it in {<63><20><98><39>} ', '<Img><ImageHere></Img> [identify] what is it in {<0><3><46><98>} ', '<Img><ImageHere></Img> [identify] the object in {<8><38><42><63>} is ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.4812,  1.1013, -0.1640,  ...,  0.3608, -1.0726, -0.5798],
         [-0.6335,  1.1784,  0.0110,  ...,  0.3596, -1.0689, -0.6797],
         [-0.9590,  1.0771,  0.2317,  ...,  0.4505, -1.2043, -0.3323],
         ...,
         [-0.5079,  0.0337,  0.8604,  ...,  1.6529,  0.3925, -0.4757],
         [-0.4096,  0.0934,  0.5697,  ...,  1.4689, -0.1130, -0.4928],
         [ 0.1053,  0.7800,  0.5859,  ...,  1.0887, -0.6589, -0.4046]],

        [[-0.5389, -0.5864,  0.8339,  ...,  0.8609,  0.3799,  1.0597],
         [-0.5440, -0.4789,  0.9793,  ...,  0.5349,  0.7428,  0.9353],
         [-0.1535,  0.4599,  0.1260,  ...,  0.3663, -0.6557,  0.2065],
         ...,
         [ 0.8239, -0.2607, -0.1191,  ...,  0.2161, -0.2867, -0.5790],
         [-0.7233, -0.2126,  1.0644,  ...,  0.3130,  1.2310,  0.7746],
         [-0.7059, -0.1659,  0.7486,  ...,  0.2694,  1.1962,  0.6883]],

        [[-1.1626, -0.3525,  0.1948,  ...,  0.5248,  1.0353, -0.3758],
         [-0.2813, -0.2506,  0.2543,  ...,  0.5406, -0.2634, -0.1468],
         [-0.5292, -0.1540,  0.9126,  ..., -0.0340, -0.4323,  0.8595],
         ...,
         [-1.0088,  0.0733, -0.6834,  ...,  0.0284, -1.2915, -0.0340],
         [-0.5582, -0.5281,  0.1725,  ...,  0.3624,  0.6415,  0.3396],
         [ 0.1349, -0.3910,  0.1393,  ...,  0.3978,  0.6482, -0.0260]],

        [[-1.0162,  0.7240,  0.4400,  ...,  0.5242,  0.6908, -0.2540],
         [-0.7947,  0.0846, -0.1024,  ...,  0.4281,  0.6464, -0.8660],
         [ 0.2117,  1.1388, -0.1783,  ...,  0.5536,  0.0324,  0.2587],
         ...,
         [-0.3863,  0.3049, -0.3728,  ...,  0.2507, -0.0496,  0.1134],
         [ 0.1507,  0.7646,  0.2565,  ...,  0.2744,  1.1769, -0.5262],
         [-0.4328,  0.6493,  0.8835,  ...,  0.1571,  0.3107, -0.3956]],

        [[-0.3583, -0.5942,  0.1520,  ...,  0.7394,  0.8866,  0.5402],
         [ 0.1451,  0.5264, -0.1147,  ...,  0.7576, -1.5614, -1.4481],
         [-0.7316,  1.6027, -0.4961,  ...,  0.5801,  0.4303,  0.2208],
         ...,
         [ 0.6923, -0.4294,  0.8393,  ...,  1.5098, -0.8265, -1.1879],
         [-0.0735,  0.1990,  0.2102,  ...,  1.1821, -1.3388, -0.3244],
         [-0.0466, -0.3027,  0.6561,  ...,  1.3914,  0.8088,  0.0784]],

        [[ 0.8003, -0.2074,  0.5372,  ...,  1.2206,  0.9693,  0.8336],
         [ 0.9447,  0.2000,  0.7393,  ...,  1.4487,  0.6877,  0.6955],
         [ 0.1346, -0.2933,  0.3286,  ...,  0.9326,  0.7684,  0.6102],
         ...,
         [ 0.4906,  0.6494, -0.7954,  ...,  1.0531, -0.5453,  0.1553],
         [ 0.4708,  0.8687, -0.7724,  ...,  0.7278, -0.0266,  0.3489],
         [ 0.8171,  0.8874, -0.4236,  ...,  1.5939, -0.8488, -0.8459]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [identify] the object in {<11><24><45><75>} is ', '<Img><ImageHere></Img> [identify] the object in {<2><50><37><90>} is ', '<Img><ImageHere></Img> [identify] what is it in {<37><9><93><80>} ', '<Img><ImageHere></Img> [identify] what is it in {<63><20><98><39>} ', '<Img><ImageHere></Img> [identify] what is it in {<0><3><46><98>} ', '<Img><ImageHere></Img> [identify] the object in {<8><38><42><63>} is ']
processed prompt_list:['the object in {<11><24><45><75>} is', 'the object in {<2><50><37><90>} is', 'what is it in {<37><9><93><80>}', 'what is it in {<63><20><98><39>}', 'what is it in {<0><3><46><98>}', 'the object in {<8><38><42><63>} is']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.1272e-04,  1.0057e-03, -4.2615e-04,  ..., -6.1234e-04,
          -3.7620e-04,  2.1869e-04],
         [-7.0613e-04,  1.0142e-03, -4.5521e-04,  ..., -5.2577e-04,
          -4.4277e-04,  2.7915e-04],
         [-6.7607e-04,  9.2236e-04, -5.4766e-04,  ..., -7.1201e-04,
          -4.3890e-04,  6.4780e-04],
         ...,
         [-9.3373e-04,  2.9358e-04, -1.0378e-03,  ..., -5.6186e-04,
          -4.5851e-04,  4.7331e-04],
         [-9.5270e-04,  3.9676e-04, -7.1393e-04,  ..., -6.0526e-04,
          -1.6085e-04,  5.0804e-04],
         [-8.4460e-04,  3.0847e-04, -5.5182e-04,  ..., -7.6523e-04,
          -5.4770e-06,  5.1950e-04]],

        [[-7.1834e-04,  6.2980e-04, -7.4833e-04,  ..., -4.2820e-04,
          -5.6934e-04,  3.5774e-04],
         [-7.6643e-04,  4.0490e-04, -6.1868e-04,  ..., -8.4365e-05,
          -4.4875e-04,  4.1896e-04],
         [-9.2720e-04, -2.2074e-04, -5.7415e-05,  ..., -5.4015e-04,
          -3.4259e-04, -2.4238e-04],
         ...,
         [-7.7128e-04,  1.5058e-04, -6.8921e-04,  ..., -4.0340e-04,
          -5.6682e-04,  9.4790e-04],
         [-8.5921e-04, -6.0276e-05, -7.9316e-05,  ..., -2.3277e-04,
           6.2514e-06,  2.2028e-04],
         [-8.9577e-04,  8.6494e-05, -1.7263e-04,  ..., -1.4465e-04,
          -3.0731e-06,  2.2168e-04]],

        [[-3.6551e-04,  3.5911e-04, -6.4089e-04,  ..., -4.3667e-04,
          -5.5075e-04, -1.9153e-04],
         [-7.4502e-04,  5.4720e-04, -1.0610e-03,  ...,  8.2045e-05,
           5.3862e-04,  6.5874e-04],
         [-6.9097e-04, -5.9786e-04, -7.9125e-04,  ..., -7.1676e-04,
          -8.6670e-05, -2.7293e-05],
         ...,
         [-4.6806e-04, -2.8743e-04, -1.8947e-04,  ..., -1.9712e-05,
           2.3618e-04,  7.5740e-04],
         [-4.1929e-04,  4.0123e-06, -8.4995e-04,  ..., -5.4662e-05,
          -3.1766e-04,  4.3800e-04],
         [-5.4296e-04,  1.8878e-04, -8.2014e-04,  ..., -7.3743e-05,
          -3.7922e-04,  2.6175e-04]],

        [[-1.0467e-03, -1.7075e-04, -1.5595e-03,  ..., -1.5336e-04,
           6.5870e-04,  4.8473e-04],
         [-9.0858e-04,  2.6995e-05, -1.3736e-03,  ..., -6.2301e-04,
           7.6817e-04,  4.5810e-04],
         [-8.1297e-04,  8.9996e-04, -7.0639e-04,  ..., -3.8283e-04,
          -6.9205e-04,  4.8941e-04],
         ...,
         [-4.1730e-04, -5.1569e-05, -9.2480e-04,  ..., -5.1367e-04,
           3.5677e-04,  3.1214e-04],
         [-1.0346e-03, -2.9815e-05, -9.5598e-04,  ..., -5.4814e-06,
           1.4016e-04,  7.1068e-04],
         [-1.1573e-03, -8.4118e-05, -1.3983e-03,  ..., -5.4412e-05,
           5.3435e-04,  5.4816e-04]],

        [[-8.2746e-04,  2.6677e-04, -7.4981e-04,  ..., -1.0992e-04,
          -9.7597e-05,  4.8780e-04],
         [-4.0238e-04,  1.3639e-04, -9.4294e-04,  ..., -1.7856e-04,
          -7.4139e-04,  1.0806e-03],
         [-4.3129e-04,  3.6468e-04, -7.3650e-04,  ..., -1.4904e-04,
          -5.3858e-04,  1.9364e-04],
         ...,
         [-6.2369e-04,  7.5299e-04, -7.2827e-04,  ...,  4.7300e-04,
          -2.6169e-04,  2.0655e-04],
         [-8.7062e-04,  2.5727e-04, -5.9283e-04,  ...,  5.2535e-05,
          -1.0262e-03,  2.0202e-04],
         [-9.2225e-04,  3.9947e-04, -1.0418e-03,  ..., -1.0891e-04,
          -2.1045e-04,  8.1465e-04]],

        [[-5.1260e-04, -3.5716e-04, -8.2965e-04,  ...,  1.2222e-04,
           1.7668e-04, -2.2723e-04],
         [-5.4822e-04, -3.3647e-04, -7.8582e-04,  ...,  4.4697e-05,
          -8.4474e-05, -2.5775e-04],
         [-5.9864e-04, -5.3498e-04, -3.4493e-04,  ...,  2.1246e-05,
           1.2745e-04, -3.1429e-04],
         ...,
         [-5.1190e-04,  5.0137e-04, -1.2872e-03,  ..., -3.6346e-04,
          -6.2013e-04,  3.1341e-04],
         [-7.1510e-04,  3.4963e-04, -1.2785e-03,  ..., -3.7147e-04,
          -5.7544e-04,  4.0026e-04],
         [-1.0062e-03,  1.0390e-04, -8.0058e-04,  ..., -3.2138e-04,
          -3.6107e-04, -3.3095e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] big butt zebra ', '<Img><ImageHere></Img> [refer] where is pink shirt ? ', '<Img><ImageHere></Img> [refer] where can I locate the white plan with red checkers ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of woman in black ', '<Img><ImageHere></Img> [refer] could you tell me the location for woman ? ', '<Img><ImageHere></Img> [refer] girl ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.5383,  0.5720,  0.6360,  ...,  1.5364, -0.6913,  0.6454],
         [ 0.0582,  0.7405, -0.1145,  ...,  0.4255, -0.5157, -0.4191],
         [-0.1867, -0.6608,  0.8423,  ...,  0.4220,  0.9915,  0.3487],
         ...,
         [-0.2494,  0.5954, -0.1405,  ...,  0.9082, -0.6446,  0.0268],
         [-0.3593, -0.9357,  0.9817,  ...,  0.6187,  1.1650,  0.4257],
         [-0.7337, -1.3737,  0.7945,  ...,  0.7089,  0.9532,  0.3608]],

        [[ 0.2071,  0.5120, -0.1281,  ...,  0.7483,  0.0449, -0.5519],
         [-0.6138,  0.4006,  0.1738,  ...,  0.9017, -0.1506, -0.6876],
         [ 0.7971, -0.4424, -0.3466,  ...,  0.6581, -0.1897, -0.2084],
         ...,
         [-0.1558, -0.9032,  0.4431,  ...,  0.1666, -0.0307,  0.3406],
         [ 0.4276, -0.3699,  0.5647,  ...,  0.3722, -0.0783, -0.7191],
         [-0.3572, -1.5355,  0.8831,  ...,  0.8872,  0.4719,  0.7901]],

        [[-0.4836, -0.4431,  0.2665,  ...,  0.4252,  0.7897,  0.7659],
         [-0.3933, -0.7676, -0.1449,  ..., -0.0648,  0.3664,  0.4916],
         [-0.7991,  0.4325,  1.2529,  ...,  0.7067, -0.3020, -0.9638],
         ...,
         [ 0.2748,  0.1335,  0.2522,  ...,  0.2015, -0.5081,  0.7541],
         [ 0.2697,  0.2861, -0.0642,  ...,  0.1567, -0.6756,  0.3186],
         [-0.6099, -0.5764,  0.1049,  ...,  0.5442,  0.6921,  1.2688]],

        [[-0.0497,  0.8079,  0.4327,  ..., -0.5613, -0.3214, -0.0288],
         [-0.1287, -0.2411,  1.0586,  ..., -0.0056, -1.2375, -0.8305],
         [ 0.8709, -0.9760,  0.4134,  ..., -0.5488,  0.5141, -0.8498],
         ...,
         [-0.0202, -0.1044,  0.3790,  ...,  0.3577,  0.5029,  0.1066],
         [ 0.1044, -0.3070,  0.3825,  ...,  0.4537,  1.0887,  0.6510],
         [ 0.3048, -0.2286,  0.4636,  ...,  0.5742,  0.9816,  0.6159]],

        [[ 0.2791,  0.7464, -0.2139,  ..., -0.2975,  0.5806, -0.3522],
         [ 0.0682,  0.7477,  0.1428,  ..., -0.4787,  0.9186, -0.1679],
         [ 0.0671,  0.0689, -0.1454,  ...,  0.1254,  0.8830,  0.1395],
         ...,
         [-0.2473,  0.1121, -0.0036,  ...,  1.1599, -0.7105,  0.5024],
         [ 0.7020, -0.3959,  0.1256,  ...,  0.9195, -0.8366, -0.1191],
         [ 0.0636,  0.6636,  0.1933,  ...,  1.0275, -0.0856,  0.5022]],

        [[-0.8927,  0.6159,  0.6023,  ...,  0.2432, -1.4291, -0.5709],
         [-0.0377,  1.5172, -0.2463,  ..., -0.5333, -0.1889,  0.5476],
         [-0.6703, -1.0363,  0.0037,  ...,  0.1702, -0.2524,  0.9686],
         ...,
         [-0.9157, -0.9592, -0.1632,  ...,  0.9408, -0.8025, -0.3543],
         [-0.6962, -0.4911,  0.3050,  ...,  1.0748,  0.3563,  0.8458],
         [-0.4233, -0.4728,  0.3622,  ...,  1.2026,  0.5024,  0.8612]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] big butt zebra ', '<Img><ImageHere></Img> [refer] where is pink shirt ? ', '<Img><ImageHere></Img> [refer] where can I locate the white plan with red checkers ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of woman in black ', '<Img><ImageHere></Img> [refer] could you tell me the location for woman ? ', '<Img><ImageHere></Img> [refer] girl ']
processed prompt_list:['big butt zebra', 'where is pink shirt ?', 'where can I locate the white plan with red checkers ?', 'from this image, tell me the location of woman in black', 'could you tell me the location for woman ?', 'girl']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.2585e-04, -1.5281e-04, -2.4450e-04,  ...,  3.2162e-04,
          -5.6014e-04, -2.0295e-04],
         [-3.3653e-04,  4.5093e-04, -9.1942e-04,  ..., -4.8623e-05,
           3.5694e-04,  1.9615e-04],
         [-5.1490e-04, -4.3810e-05, -1.0070e-03,  ...,  3.5453e-05,
           1.4050e-04,  5.6391e-04],
         ...,
         [-9.3925e-04, -5.2913e-05, -3.4046e-04,  ..., -8.3563e-04,
          -6.0404e-04,  5.2955e-04],
         [-4.6884e-04, -1.0286e-04, -8.7767e-04,  ..., -1.6965e-04,
           6.9409e-05,  4.0122e-04],
         [-4.1652e-04, -2.1589e-04, -5.9892e-04,  ..., -5.1642e-04,
           9.9482e-05,  3.1615e-04]],

        [[-5.6291e-04, -7.0482e-05, -7.3849e-04,  ...,  2.0425e-04,
          -6.5189e-05,  2.5909e-04],
         [-5.9628e-04,  7.2272e-04, -6.0203e-04,  ..., -3.6400e-04,
          -7.7588e-05,  2.1061e-04],
         [-4.2005e-04,  1.9002e-04, -7.2700e-04,  ...,  2.8140e-05,
          -3.7428e-04,  1.0582e-03],
         ...,
         [-7.4995e-04, -2.8833e-04, -8.8553e-04,  ...,  2.2866e-04,
          -1.0449e-04, -1.5768e-05],
         [-3.5208e-04,  4.4295e-04, -9.5870e-04,  ...,  6.0186e-04,
          -4.8827e-05,  5.9064e-06],
         [-5.9849e-04,  1.0716e-04, -9.5626e-04,  ..., -3.0139e-04,
          -1.6280e-05,  7.0470e-05]],

        [[-4.4932e-04,  6.0293e-05, -8.3353e-04,  ..., -1.6704e-04,
           3.7495e-04,  7.1698e-05],
         [-9.0817e-04,  1.5724e-04, -6.3229e-04,  ..., -3.6665e-04,
           9.9346e-05, -3.2424e-04],
         [-1.4959e-04,  7.9147e-04, -2.0611e-04,  ..., -8.6363e-04,
          -2.9776e-04,  5.7353e-04],
         ...,
         [-6.8189e-04,  2.3955e-04, -2.3943e-04,  ..., -6.1604e-04,
           1.4148e-04, -5.6069e-04],
         [-7.9540e-04,  7.9218e-05, -5.8987e-04,  ..., -4.9307e-04,
           1.1737e-04, -2.8755e-04],
         [-1.8692e-04,  1.9763e-04, -4.3929e-04,  ..., -2.7366e-04,
           1.3921e-04, -5.6161e-05]],

        [[-9.2440e-04, -2.4305e-04,  1.1997e-04,  ..., -7.5998e-04,
          -4.0723e-04,  3.8094e-04],
         [-8.6890e-04,  3.5314e-04,  3.7722e-04,  ..., -4.6855e-04,
          -7.2488e-04, -2.1591e-04],
         [-1.8956e-04,  3.3350e-04, -5.1176e-06,  ..., -1.9613e-04,
          -1.1056e-03,  1.6591e-04],
         ...,
         [-1.1130e-03, -3.0509e-04, -6.0400e-04,  ..., -5.7169e-04,
          -1.4732e-04,  6.3857e-05],
         [-5.4352e-04,  1.5995e-04, -9.5804e-04,  ..., -2.7342e-04,
          -3.7231e-05,  9.5522e-06],
         [-5.8226e-04,  1.4947e-04, -1.0243e-03,  ..., -1.9792e-04,
          -1.0903e-04,  8.2258e-05]],

        [[-6.9562e-04,  5.6862e-04, -2.9529e-04,  ...,  5.5478e-04,
          -1.6185e-04,  5.9011e-04],
         [-8.0686e-04,  5.5307e-04, -8.4134e-04,  ...,  5.8994e-04,
          -1.5563e-04,  2.0100e-04],
         [-5.8664e-04,  9.1037e-04, -9.6209e-04,  ...,  6.9439e-04,
          -1.2643e-04,  3.7090e-04],
         ...,
         [-1.8361e-03,  2.9578e-04, -2.3463e-04,  ..., -1.4825e-04,
          -2.9317e-04,  2.3058e-04],
         [-6.2068e-04,  4.9167e-04, -7.2102e-04,  ...,  3.4785e-04,
          -3.8607e-04, -7.6032e-05],
         [-6.2733e-04, -4.5630e-05, -2.9615e-04,  ..., -2.8076e-04,
          -5.4951e-05,  5.2376e-05]],

        [[-1.1903e-04,  8.2268e-04, -1.1600e-04,  ..., -6.7215e-04,
          -9.1891e-04,  1.1653e-04],
         [-7.8871e-04,  1.2766e-04, -1.3080e-03,  ...,  2.0593e-04,
          -9.6791e-05,  2.3362e-04],
         [-6.3640e-04,  2.7393e-04, -8.1680e-04,  ..., -4.1388e-04,
          -3.7461e-04, -1.4078e-04],
         ...,
         [-7.2445e-04,  2.9350e-04, -6.4904e-04,  ...,  5.2210e-04,
          -5.0301e-04,  4.1233e-04],
         [-6.0872e-04,  1.0323e-04, -1.1217e-03,  ..., -1.8785e-04,
          -2.7805e-04,  6.0113e-04],
         [-5.9146e-04,  1.8539e-04, -1.2606e-03,  ...,  3.6315e-05,
          -2.6163e-04,  7.6572e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] what is the genre of this book? ', '<Img><ImageHere></Img> [vqa] what is the genre of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: who is the author of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: who is the author of this book? ', '<Img><ImageHere></Img> [vqa] who wrote this book? ', '<Img><ImageHere></Img> [vqa] what is the title of this book? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 4.0401e-01, -7.8386e-01, -4.0786e-02,  ...,  8.2435e-01,
          -1.8634e+00,  8.8658e-01],
         [-2.3079e-01, -5.8498e-01,  1.1981e+00,  ..., -6.2337e-01,
          -4.1200e-01,  2.4380e-01],
         [-1.5109e+00,  3.0112e-01,  9.7156e-01,  ...,  1.9655e-01,
          -8.3297e-01,  3.2594e-01],
         ...,
         [-3.8115e-01,  4.5849e-01,  1.2718e+00,  ...,  1.3338e+00,
          -3.6779e-01,  5.5815e-01],
         [ 2.9179e-02, -1.8198e-01,  8.6241e-03,  ...,  1.4192e-01,
          -7.7699e-02, -1.2994e-03],
         [ 7.6490e-02, -1.5178e-02,  8.2244e-01,  ...,  6.1893e-01,
           9.6126e-02, -2.1761e-01]],

        [[ 9.6134e-01, -2.0978e-01, -6.8452e-01,  ...,  1.0077e+00,
          -7.0892e-01,  8.2420e-01],
         [ 1.8739e-01, -2.4913e-01,  5.7617e-01,  ...,  1.2779e-01,
          -1.8567e+00,  1.0917e-01],
         [-2.6044e-01, -1.0789e+00, -7.9241e-02,  ..., -8.7513e-01,
          -4.1731e-01,  5.3101e-02],
         ...,
         [ 7.0787e-01, -9.2142e-02, -3.9735e-02,  ...,  8.1401e-01,
          -1.2948e+00,  5.5833e-01],
         [ 9.8636e-01,  2.4408e-01, -5.5059e-01,  ...,  9.0432e-01,
          -7.9915e-01,  1.1328e+00],
         [ 1.1362e+00,  1.6468e-01, -4.4034e-01,  ...,  8.8490e-01,
          -6.8703e-01,  1.1804e+00]],

        [[ 1.2057e+00, -3.3288e-01, -6.2761e-02,  ...,  9.0201e-01,
          -6.6162e-01,  4.8713e-01],
         [ 9.7473e-01, -9.3014e-01, -2.8811e-01,  ...,  1.3049e+00,
          -9.9656e-01,  1.0721e-01],
         [ 1.9736e-01, -3.1481e-01, -1.4501e-01,  ...,  1.0348e+00,
           2.6909e-01,  2.5231e-01],
         ...,
         [ 1.0490e+00, -8.2058e-01, -3.2006e-01,  ...,  1.3431e+00,
          -1.2951e+00,  7.6950e-02],
         [-5.1741e-02, -3.4473e-01,  4.0062e-01,  ...,  7.8999e-01,
          -8.6598e-02, -2.7434e-01],
         [ 2.4410e-01,  4.1676e-01, -1.4359e-01,  ...,  1.4474e+00,
          -5.9910e-01, -2.8290e-01]],

        [[ 1.7199e+00, -9.3835e-01,  9.7845e-01,  ...,  1.0889e+00,
          -1.0051e+00, -8.1509e-01],
         [ 1.2160e+00,  2.4528e-01,  1.3021e+00,  ...,  1.1823e+00,
          -5.9529e-01, -1.7087e-01],
         [ 1.1986e+00, -8.3818e-01,  1.0501e+00,  ...,  5.6368e-01,
          -5.4388e-01, -6.5193e-01],
         ...,
         [ 7.2304e-01,  5.8380e-01,  2.0320e+00,  ...,  8.6508e-01,
          -5.9658e-01, -3.9667e-01],
         [ 1.1455e+00, -1.1184e+00, -4.1993e-02,  ...,  1.5482e+00,
          -1.0154e-01, -1.8891e-01],
         [ 9.6244e-01, -1.2355e+00,  1.4252e-01,  ...,  1.7427e+00,
          -4.2425e-01,  1.2134e-01]],

        [[ 8.3862e-01, -4.2953e-01, -5.2529e-01,  ...,  1.8389e+00,
          -1.0046e+00, -2.1836e-02],
         [ 7.7345e-01, -4.5901e-02, -1.7951e-01,  ...,  1.4514e+00,
          -7.1438e-01,  3.3870e-01],
         [ 1.5062e-01, -9.8382e-01,  3.3751e-01,  ..., -4.3551e-01,
          -2.9386e-01, -2.6202e-01],
         ...,
         [ 6.6044e-02, -1.5379e-01,  3.9708e-02,  ...,  2.0551e-01,
          -1.2868e-01,  1.0038e-02],
         [-3.1736e-01, -2.8337e-01,  3.0031e-01,  ...,  3.7729e-01,
           3.3890e-01,  2.6742e-01],
         [-9.1232e-02,  2.0046e-01,  1.1201e-02,  ...,  6.2899e-01,
           6.5321e-01,  2.7311e-01]],

        [[ 3.5437e-01, -1.6559e+00, -9.3130e-02,  ...,  5.6477e-01,
          -5.2645e-01, -1.1088e+00],
         [ 9.0853e-02, -1.7727e+00,  1.3208e-01,  ...,  6.2497e-01,
          -4.9594e-01, -8.2085e-01],
         [ 4.5921e-01, -1.2766e+00, -1.8773e-01,  ...,  6.9666e-01,
          -4.9357e-01, -1.2421e+00],
         ...,
         [ 3.0880e-01, -1.1192e+00,  1.1803e-01,  ...,  2.9920e-01,
          -1.0950e+00, -8.8634e-01],
         [ 6.3382e-01, -1.7241e+00,  2.2944e-01,  ...,  7.4591e-01,
          -6.8853e-01, -8.4370e-01],
         [ 7.9786e-01, -1.9566e+00, -1.0259e-01,  ...,  5.4051e-01,
          -7.9237e-01, -4.9126e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] what is the genre of this book? ', '<Img><ImageHere></Img> [vqa] what is the genre of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: who is the author of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: who is the author of this book? ', '<Img><ImageHere></Img> [vqa] who wrote this book? ', '<Img><ImageHere></Img> [vqa] what is the title of this book? ']
processed prompt_list:['what is the genre of this book?', 'what is the genre of this book?', 'Based on the image, respond to this question with a short answer: who is the author of this book?', 'Based on the image, respond to this question with a short answer: who is the author of this book?', 'who wrote this book?', 'what is the title of this book?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.0166e-04,  4.6358e-04, -3.1902e-04,  ..., -6.7127e-04,
          -5.0749e-04, -2.1838e-04],
         [-1.1734e-04, -1.9595e-04,  1.0199e-04,  ..., -6.9686e-04,
          -1.9689e-04, -1.2260e-04],
         [-3.3918e-04,  4.5741e-04, -9.2126e-05,  ..., -8.9814e-04,
          -2.8341e-04,  5.2290e-05],
         ...,
         [-5.3485e-04,  8.8227e-04,  7.3365e-05,  ..., -5.3817e-04,
          -4.8421e-04, -1.9643e-05],
         [ 5.8807e-04, -1.0256e-03,  1.1281e-03,  ..., -2.6298e-04,
          -1.0615e-05, -7.6119e-04],
         [-7.2445e-04,  9.3708e-04, -7.9343e-04,  ..., -1.5412e-04,
           2.1750e-04,  9.4362e-05]],

        [[-3.8866e-04, -4.3879e-04, -9.7261e-04,  ..., -3.7180e-04,
          -5.1268e-04, -5.0573e-05],
         [-8.0276e-04,  1.4643e-04, -5.2696e-04,  ..., -2.3730e-04,
          -7.5774e-04, -4.4356e-04],
         [-3.8412e-04, -1.5231e-04, -4.1659e-04,  ..., -5.4479e-04,
          -7.7254e-04,  2.6365e-05],
         ...,
         [-5.9848e-04, -2.0757e-04, -7.4763e-04,  ..., -5.2438e-04,
          -8.2980e-04, -7.9560e-05],
         [-3.0075e-04, -2.9051e-04, -1.2878e-03,  ..., -3.3932e-04,
          -9.3772e-04,  2.9551e-04],
         [-2.9998e-04, -3.0832e-04, -1.1285e-03,  ..., -4.7997e-04,
          -9.0614e-04,  3.8212e-04]],

        [[-4.4855e-04,  2.3537e-04, -7.3199e-04,  ...,  2.6961e-05,
          -1.3017e-03,  8.4079e-04],
         [-5.7176e-04,  3.5253e-04, -1.0645e-03,  ..., -2.5619e-05,
          -8.7788e-04,  4.3775e-04],
         [-8.5409e-04,  4.4679e-04, -7.0659e-04,  ...,  1.9854e-04,
          -3.9184e-04, -3.8958e-06],
         ...,
         [-6.8757e-04,  4.6449e-04, -1.0009e-03,  ..., -2.0787e-05,
          -7.5804e-04,  3.9116e-04],
         [-6.0639e-04,  1.0581e-03, -5.7982e-04,  ...,  3.2621e-04,
           1.8363e-04,  9.1753e-05],
         [-8.0066e-04, -7.9708e-05, -7.3346e-04,  ..., -5.3997e-04,
          -4.8611e-04, -8.6976e-05]],

        [[-4.0518e-04,  5.0529e-04, -9.1666e-04,  ..., -2.2499e-04,
          -1.1555e-03,  1.1816e-04],
         [-7.6831e-04,  3.2873e-04, -4.6562e-05,  ..., -1.5521e-04,
          -3.6846e-04,  1.5354e-04],
         [-8.0142e-04,  4.6058e-04, -7.7137e-04,  ..., -2.2588e-04,
          -8.8824e-04, -1.2123e-04],
         ...,
         [-2.8368e-04,  3.6676e-04, -1.6724e-04,  ..., -1.8706e-04,
          -4.7240e-04,  1.3902e-05],
         [-1.1418e-03, -2.3863e-04, -7.2855e-04,  ..., -4.3534e-05,
          -8.2840e-04,  1.2445e-04],
         [-1.0253e-03, -2.5466e-04, -7.0415e-04,  ...,  2.4533e-04,
          -9.5785e-04,  1.6922e-04]],

        [[-5.4100e-04, -7.8052e-05, -6.6779e-04,  ..., -4.0992e-04,
          -1.1859e-03,  6.1298e-04],
         [-4.7939e-04, -2.7030e-05, -8.3875e-04,  ..., -2.6815e-04,
          -1.1317e-03,  5.8441e-04],
         [-3.4373e-04,  8.5229e-04, -5.5549e-04,  ..., -3.0562e-04,
          -2.2108e-05,  6.3505e-04],
         ...,
         [ 5.8808e-04, -1.0435e-03,  1.1206e-03,  ..., -2.6769e-04,
          -1.5364e-05, -7.6404e-04],
         [-5.8202e-04,  9.1174e-04, -5.2738e-04,  ..., -3.0859e-04,
           3.6964e-04, -1.8544e-05],
         [-7.1428e-04,  8.5087e-04, -5.1460e-04,  ..., -2.3359e-04,
           2.5422e-04,  1.2088e-04]],

        [[-5.8363e-04, -1.8164e-04, -5.8123e-04,  ..., -3.3402e-04,
          -5.9514e-04, -5.9286e-05],
         [-6.0623e-04,  3.7319e-04, -5.4575e-04,  ..., -1.1117e-03,
          -9.3118e-04, -1.6272e-04],
         [-5.2551e-04, -2.4745e-04, -6.3357e-04,  ..., -1.4919e-04,
          -4.5163e-04, -1.3232e-05],
         ...,
         [-2.8293e-04, -4.8052e-04,  3.5729e-04,  ..., -1.3987e-03,
          -3.7589e-04, -3.9472e-04],
         [-7.9524e-04, -5.3880e-05, -1.6227e-04,  ..., -1.0924e-03,
          -1.0183e-03, -9.4117e-05],
         [-8.1684e-04,  2.0361e-04, -4.0818e-04,  ..., -3.2808e-04,
          -9.2268e-04,  6.8491e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] black and white bus on street ', '<Img><ImageHere></Img> [refer] give me the location of lines on the ground ', '<Img><ImageHere></Img> [refer] where is blue sky between the trees ? ', '<Img><ImageHere></Img> [refer] give me the location of man covering eyes from sun while driving scooter ', "<Img><ImageHere></Img> [refer] could you tell me the location for baseball in player's hand ? ", '<Img><ImageHere></Img> [refer] from this image, tell me the location of the wildabeast on the beach ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.0735, -1.4756,  0.6217,  ...,  0.6137,  0.5747, -0.0380],
         [-0.3005, -1.3995,  0.4609,  ...,  0.6341,  0.8527,  0.0799],
         [ 0.0116,  0.6834,  1.0233,  ...,  0.9268, -0.8125, -0.0647],
         ...,
         [-0.5639, -0.4836,  0.6320,  ...,  0.9477,  0.5592,  0.4555],
         [-0.2150, -0.0743,  0.6221,  ...,  0.5736,  0.7691,  1.2249],
         [-0.4912, -0.3346,  0.5563,  ...,  0.6564,  0.5937,  0.9334]],

        [[ 0.1189, -0.5095,  1.5182,  ...,  1.1028,  0.1804,  1.1722],
         [-0.2036, -0.9127,  1.1448,  ...,  1.1120,  0.2191,  1.2668],
         [-0.5906, -0.9605,  0.7303,  ...,  1.3521, -0.6375,  0.2669],
         ...,
         [ 0.4779, -0.3837,  0.2219,  ...,  0.9010, -1.1777, -0.0454],
         [-0.4389, -1.0449,  1.2780,  ...,  1.1405, -0.2829,  0.9399],
         [-0.0546, -0.8218,  1.3510,  ...,  0.9778,  0.0961,  1.1662]],

        [[-0.5922, -0.6975,  0.0746,  ...,  0.8247,  0.9457,  0.7736],
         [-0.4807, -0.5695,  0.2211,  ...,  0.7978,  0.9723,  0.8334],
         [ 0.4349,  0.1136,  0.7666,  ...,  0.7622,  0.1788,  0.1714],
         ...,
         [-0.3097,  0.3731,  0.6844,  ...,  0.9998, -1.0422,  0.6100],
         [-0.7922,  0.3235,  1.1359,  ...,  0.1873, -1.1556,  0.4892],
         [-1.1788, -0.6149,  0.0243,  ...,  0.9395,  1.0907,  0.6791]],

        [[-0.4962,  0.0971, -0.8955,  ...,  0.4417, -0.1628,  0.2955],
         [ 0.7074, -0.7026,  0.6311,  ...,  0.7346, -0.8282, -0.5601],
         [-0.1943,  0.8427, -0.6893,  ...,  0.7650, -0.4377, -0.2404],
         ...,
         [-0.1326, -0.2189,  0.1803,  ...,  0.4421, -0.6968, -0.3132],
         [-0.0646, -0.7941,  0.7469,  ...,  0.1572, -0.6689, -0.0613],
         [ 0.2161, -1.2434,  1.2424,  ..., -0.0493, -0.1969,  1.0649]],

        [[-0.0949, -0.8370,  0.3895,  ...,  0.1511,  0.0429, -0.4361],
         [ 0.2397,  0.4796, -0.6528,  ...,  1.2732, -0.7027, -0.2440],
         [ 0.3069,  0.5348, -0.5142,  ...,  1.2115, -0.6544, -0.3410],
         ...,
         [-0.5792,  0.1711,  1.1896,  ...,  0.6725, -0.7671,  0.2543],
         [-0.6760, -0.4643,  0.5333,  ...,  0.9274,  0.5107, -0.3547],
         [-0.5348, -0.6680,  0.4970,  ...,  1.0056,  0.4881, -0.1240]],

        [[-1.0047, -0.2164, -0.6607,  ..., -0.3842, -0.6747, -0.3791],
         [-0.8851, -0.1060, -0.5593,  ..., -0.4718, -0.2587, -0.2615],
         [-0.9491, -0.2724, -0.8708,  ..., -0.3272, -0.2720, -0.0832],
         ...,
         [-1.3540, -0.8214,  0.4146,  ...,  0.4712, -1.2740,  0.1219],
         [-1.3002, -0.1021, -0.1691,  ..., -0.1647, -1.5761,  0.1682],
         [-1.4743, -1.1979, -0.2597,  ...,  0.2433,  0.3744,  1.6306]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] black and white bus on street ', '<Img><ImageHere></Img> [refer] give me the location of lines on the ground ', '<Img><ImageHere></Img> [refer] where is blue sky between the trees ? ', '<Img><ImageHere></Img> [refer] give me the location of man covering eyes from sun while driving scooter ', "<Img><ImageHere></Img> [refer] could you tell me the location for baseball in player's hand ? ", '<Img><ImageHere></Img> [refer] from this image, tell me the location of the wildabeast on the beach ']
processed prompt_list:['black and white bus on street', 'give me the location of lines on the ground', 'where is blue sky between the trees ?', 'give me the location of man covering eyes from sun while driving scooter', "could you tell me the location for baseball in player's hand ?", 'from this image, tell me the location of the wildabeast on the beach']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.5642e-04,  9.8093e-05, -6.2427e-04,  ..., -4.4451e-04,
           1.5142e-04, -2.7880e-04],
         [-4.5406e-04,  5.4488e-04, -9.3148e-04,  ...,  1.2019e-04,
           1.3622e-04, -1.3610e-04],
         [-1.5268e-04, -3.6334e-05, -7.6897e-04,  ..., -2.4519e-04,
          -4.7142e-04,  6.2008e-05],
         ...,
         [-4.4563e-04, -4.2212e-04, -9.2832e-04,  ..., -5.3637e-04,
           3.5762e-06, -4.7212e-05],
         [-7.6199e-04, -4.0983e-04, -9.8358e-04,  ..., -3.3096e-04,
           1.7287e-04, -9.8465e-05],
         [-5.1039e-04, -4.2691e-04, -9.7083e-04,  ..., -3.6579e-04,
           1.5352e-04, -7.4025e-05]],

        [[-4.9858e-04, -9.6446e-05, -7.2986e-04,  ...,  7.1742e-05,
           6.3803e-05,  4.4573e-04],
         [-3.1799e-04, -2.8866e-04, -7.1596e-04,  ...,  1.4161e-04,
           1.5415e-04,  3.5277e-04],
         [-4.0966e-04, -7.1436e-04, -5.4132e-04,  ..., -5.0492e-04,
          -2.7917e-04,  1.5802e-04],
         ...,
         [-7.5410e-04,  1.4897e-04, -1.0739e-03,  ...,  1.4659e-05,
          -6.1651e-04,  8.4279e-04],
         [-9.0763e-05, -2.2817e-04, -6.8040e-04,  ...,  6.7734e-05,
          -1.9982e-05,  3.8685e-04],
         [-2.8988e-04, -1.3241e-04, -8.3986e-04,  ...,  2.4330e-04,
           2.3231e-05,  4.9370e-04]],

        [[-5.2435e-04, -1.3559e-04, -3.9267e-04,  ..., -4.7856e-04,
          -3.4284e-04,  3.6064e-04],
         [-5.1146e-04, -8.7655e-05, -4.8252e-04,  ..., -3.5204e-04,
          -2.7945e-04,  4.0471e-04],
         [-5.1669e-04, -5.1193e-04, -4.9669e-04,  ...,  1.4394e-04,
          -3.2145e-04, -2.2918e-04],
         ...,
         [-6.6624e-04, -2.5764e-04, -4.8813e-04,  ..., -6.1147e-04,
           2.6549e-05,  1.2370e-04],
         [-9.8787e-04, -1.2003e-04, -8.9032e-04,  ..., -9.6480e-05,
          -1.1099e-04, -1.6491e-05],
         [-5.4824e-04, -2.1355e-04, -1.2518e-04,  ..., -7.4778e-04,
          -3.0833e-04, -1.6153e-05]],

        [[-9.1489e-04,  9.2589e-04, -1.0885e-03,  ..., -9.0437e-04,
          -6.1407e-04,  6.8820e-04],
         [-9.0842e-04,  5.5078e-04, -1.0987e-03,  ..., -5.3933e-04,
          -7.2912e-04, -3.5431e-04],
         [-3.8345e-04,  6.9667e-04, -5.7233e-04,  ..., -7.0189e-04,
          -6.8338e-04,  6.9904e-04],
         ...,
         [-1.1331e-03,  1.0195e-03, -1.3546e-03,  ...,  4.8296e-05,
          -3.5511e-04,  4.9543e-04],
         [-9.0198e-04,  1.3678e-03, -1.2466e-03,  ..., -4.3399e-05,
          -4.3214e-04,  6.2853e-04],
         [-4.6843e-04,  1.0811e-03, -7.8830e-04,  ..., -4.9694e-04,
          -7.1210e-04,  2.0011e-06]],

        [[-3.3892e-04,  6.4217e-04, -4.1170e-04,  ..., -2.2357e-04,
          -3.0777e-04,  6.4455e-04],
         [-6.5160e-04,  9.6725e-05, -6.4730e-04,  ..., -1.2447e-04,
          -9.2130e-04,  5.9145e-04],
         [-7.7274e-04, -3.2586e-05, -7.1635e-04,  ..., -1.1678e-04,
          -1.0102e-03,  5.1802e-04],
         ...,
         [-6.2325e-04,  3.5451e-04, -3.6690e-04,  ..., -1.1350e-03,
          -5.3795e-04, -4.2264e-04],
         [-3.9205e-04,  4.2014e-04, -4.5323e-04,  ..., -1.5580e-04,
          -6.5818e-05,  6.0700e-04],
         [-3.8256e-04,  3.4544e-04, -6.6567e-04,  ..., -3.8482e-05,
          -1.3382e-04,  6.7471e-04]],

        [[-6.6759e-04,  9.3880e-05, -1.0996e-03,  ..., -1.1629e-04,
          -1.7441e-04,  6.5853e-04],
         [-5.5239e-04,  4.9478e-05, -1.1524e-03,  ..., -1.6133e-04,
          -9.4250e-05,  9.6275e-04],
         [-3.5444e-04,  1.3041e-05, -8.9849e-04,  ..., -2.0033e-04,
          -2.6941e-04,  1.2329e-03],
         ...,
         [-1.3149e-03, -4.5187e-04, -5.5549e-04,  ..., -4.4401e-04,
          -1.8711e-04, -2.8918e-04],
         [-9.9529e-04,  6.3633e-05, -8.5637e-04,  ..., -3.6253e-04,
          -1.8555e-04, -1.6354e-05],
         [-4.9537e-04, -4.1985e-04, -5.4286e-04,  ..., -3.7165e-04,
          -3.4766e-04,  3.9159e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] person under his legs ', '<Img><ImageHere></Img> [refer] where is farthest train ? ', '<Img><ImageHere></Img> [refer] where is biggest darkest pot ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for woman with white dress ? ', '<Img><ImageHere></Img> [refer] where is sandwich with stripes ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for zebra profile ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.0768, -0.2501,  0.5493,  ...,  0.4044,  0.1188, -0.3701],
         [-0.0841,  0.2584,  0.6258,  ..., -0.6510, -0.6392, -0.6047],
         [ 0.0487,  0.8855, -0.0444,  ..., -0.2693, -0.4101, -0.3965],
         ...,
         [ 0.4133,  1.0361,  0.2676,  ...,  0.3804,  0.1147,  0.5776],
         [ 0.4135,  0.8282,  1.3073,  ...,  1.1707, -1.0977, -0.1727],
         [-0.0821,  1.1159,  1.4215,  ...,  1.2983, -1.5666,  0.2413]],

        [[-0.7837,  0.3390,  0.2493,  ...,  1.0587,  1.0670,  1.1719],
         [-0.8228,  0.1290,  0.3245,  ...,  0.8707,  1.2765,  0.9585],
         [ 0.0171,  1.2029,  0.5816,  ...,  1.0310,  0.4779,  0.6215],
         ...,
         [-0.3037,  0.9055,  0.1633,  ...,  0.6784,  0.7566,  0.7167],
         [-0.1097,  0.9898,  0.8992,  ...,  1.3017,  0.7313,  0.8256],
         [ 0.0272,  0.9990,  0.0397,  ...,  1.2295, -0.3881,  1.1063]],

        [[-0.5182, -0.1324,  0.6359,  ...,  1.1688, -0.2314, -0.4992],
         [-0.6701, -0.2443,  0.1967,  ...,  1.0123, -0.2683, -0.2834],
         [-0.6845, -0.4447,  0.6806,  ...,  1.0884, -0.3721,  0.4302],
         ...,
         [-0.0446,  0.3728, -0.9760,  ...,  0.6640, -1.5998, -0.6092],
         [-0.0821, -0.8848,  1.5398,  ...,  0.2721,  0.5147,  0.2362],
         [-0.0217,  0.0677,  0.1032,  ..., -0.5615, -1.4111, -0.1740]],

        [[-0.7195, -0.1140,  0.1150,  ...,  0.6699, -0.8076, -0.0173],
         [ 0.2875, -0.3422,  0.7360,  ...,  1.0896,  1.0691,  0.3310],
         [-0.3528,  0.6528,  0.6829,  ...,  0.1416, -0.2026, -0.1107],
         ...,
         [ 0.1930,  0.5553, -0.0648,  ...,  0.0451,  0.1256, -0.9867],
         [-0.4393,  0.2239, -0.2480,  ..., -0.0944,  0.0822, -0.8356],
         [ 0.8856, -0.0556,  1.2724,  ...,  1.5565,  1.2149,  0.2564]],

        [[-1.4283, -0.3624, -0.0671,  ..., -0.4641, -0.9762, -0.5922],
         [-1.1632, -0.2245,  0.0561,  ..., -0.7445, -0.2607, -0.8913],
         [-0.3670, -0.2661, -0.3907,  ..., -0.7105, -1.5005, -0.5691],
         ...,
         [-0.0414,  0.4971, -0.4842,  ..., -0.5527, -1.1620, -0.6838],
         [-0.6153,  0.0122, -0.7161,  ..., -0.5036, -0.5851, -1.2965],
         [-0.8949, -0.1848, -0.1618,  ..., -0.6564, -0.5900, -1.0657]],

        [[-1.2851, -0.3030, -0.0384,  ...,  0.6946,  0.8224,  1.1200],
         [-1.0421, -0.5128,  0.1629,  ...,  1.3307, -0.5950, -0.0510],
         [-0.7004, -0.7423, -0.2676,  ...,  0.0366, -0.1116,  1.0136],
         ...,
         [-0.8504,  0.0029, -0.0242,  ...,  0.9384, -0.7845,  0.4279],
         [-0.3404,  0.1305,  0.7593,  ...,  0.6728,  0.8646,  0.7031],
         [-0.4950, -0.0056,  0.5493,  ...,  0.6863,  0.8053,  0.8207]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] person under his legs ', '<Img><ImageHere></Img> [refer] where is farthest train ? ', '<Img><ImageHere></Img> [refer] where is biggest darkest pot ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for woman with white dress ? ', '<Img><ImageHere></Img> [refer] where is sandwich with stripes ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for zebra profile ? ']
processed prompt_list:['person under his legs', 'where is farthest train ?', 'where is biggest darkest pot ?', 'could you tell me the location for woman with white dress ?', 'where is sandwich with stripes ?', 'could you tell me the location for zebra profile ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-3.1761e-04,  3.6455e-04, -2.7949e-04,  ...,  8.1725e-05,
           1.9180e-05,  3.7020e-07],
         [-9.6790e-04,  2.8683e-04, -3.4592e-04,  ..., -9.6407e-04,
          -8.4541e-04,  6.6073e-04],
         [-1.1463e-03,  3.3227e-04, -3.7820e-04,  ..., -7.5544e-04,
          -1.1779e-03,  5.8751e-04],
         ...,
         [-8.8942e-04,  3.7186e-04, -8.2732e-04,  ..., -9.3432e-04,
          -8.4977e-04,  2.9281e-04],
         [-6.2558e-04,  2.1347e-04, -3.5598e-04,  ..., -5.2300e-05,
          -7.2003e-04, -5.7811e-04],
         [-6.3896e-04,  1.4404e-04, -4.2819e-04,  ..., -2.6001e-04,
          -8.9635e-04, -2.0411e-04]],

        [[-7.1577e-04, -1.1528e-04, -1.2122e-03,  ..., -3.5556e-05,
           1.9718e-04,  5.4696e-04],
         [-6.3695e-04, -1.3538e-04, -1.3875e-03,  ..., -1.3777e-04,
           2.7244e-04,  4.2440e-04],
         [-4.1347e-04,  3.4655e-05, -1.2617e-03,  ..., -1.3146e-04,
           3.1231e-04,  3.8818e-04],
         ...,
         [-4.7117e-04, -1.4970e-04, -1.5478e-03,  ..., -6.4770e-05,
           5.5645e-05,  3.3661e-04],
         [-4.7278e-04, -5.8293e-05, -9.5747e-04,  ..., -2.7332e-04,
           9.6286e-06,  6.2147e-04],
         [-7.5441e-04, -5.3519e-04, -9.6506e-04,  ...,  1.2644e-05,
           1.4690e-04, -3.7888e-05]],

        [[-1.3238e-03,  7.5345e-04, -9.0223e-04,  ...,  1.4735e-04,
          -5.5602e-04,  4.0152e-04],
         [-1.0208e-03,  9.1305e-04, -1.0677e-03,  ..., -2.2635e-04,
          -3.5909e-04,  5.4678e-04],
         [-9.8791e-04,  8.2851e-04, -1.3602e-03,  ..., -3.9262e-06,
          -4.6341e-04,  1.1435e-03],
         ...,
         [-1.0811e-03,  8.4592e-04,  7.0829e-05,  ...,  5.6853e-04,
           6.8423e-04, -5.2586e-04],
         [-1.0135e-03, -6.5440e-05, -1.0806e-03,  ..., -5.3597e-04,
          -1.1286e-04,  1.5303e-04],
         [-8.1666e-04,  4.1334e-04, -6.0140e-04,  ..., -4.6107e-04,
           1.6729e-04, -2.3078e-04]],

        [[-9.3852e-05,  2.6893e-04, -1.0008e-03,  ..., -2.6845e-04,
           1.7336e-04,  1.4656e-04],
         [-8.6923e-04,  1.0788e-04, -1.2217e-03,  ..., -1.2350e-04,
          -4.8954e-05, -3.6485e-05],
         [-5.2945e-04,  5.0283e-04, -1.2347e-03,  ..., -1.2880e-04,
          -4.5554e-04,  3.5075e-04],
         ...,
         [-8.0221e-04,  1.7670e-04, -8.9332e-04,  ..., -1.7832e-05,
          -1.1934e-04,  1.5152e-04],
         [-4.6903e-04,  1.7831e-04, -9.3567e-04,  ...,  2.0624e-04,
          -2.0108e-04,  3.7173e-04],
         [-7.7053e-04,  1.0688e-04, -1.1204e-03,  ..., -2.7595e-06,
          -1.7732e-04, -7.6910e-05]],

        [[-6.9914e-04,  4.8490e-04, -7.5748e-04,  ..., -7.7804e-04,
          -6.6614e-04,  2.5034e-04],
         [-4.1849e-04,  6.7312e-04, -7.5792e-04,  ..., -1.0358e-03,
          -5.5527e-04,  4.7334e-04],
         [-7.2614e-04,  4.6745e-04, -5.0777e-04,  ..., -4.5234e-04,
          -7.6693e-04,  1.7158e-04],
         ...,
         [-6.8473e-04,  4.1337e-04, -8.2579e-04,  ..., -5.4606e-04,
          -2.7710e-04, -2.0860e-05],
         [-9.6345e-04,  4.6736e-04, -8.7586e-04,  ..., -2.3428e-04,
          -2.8932e-04,  3.8193e-04],
         [-6.4819e-04,  6.8217e-04, -8.7366e-04,  ..., -3.4923e-04,
          -2.0441e-04,  3.8585e-04]],

        [[-7.4547e-04,  1.6175e-05, -8.3586e-04,  ..., -3.9271e-04,
          -2.2252e-04,  4.4980e-04],
         [-7.8459e-04,  5.3647e-04, -7.6255e-04,  ...,  9.4661e-05,
          -5.6042e-04,  2.2920e-04],
         [-7.0630e-04,  3.8307e-04, -8.7254e-04,  ..., -3.4935e-04,
          -4.2701e-04,  1.9474e-04],
         ...,
         [-1.2045e-03, -4.3081e-04, -2.8190e-06,  ...,  1.7911e-04,
          -2.6746e-04, -2.0406e-04],
         [-6.2397e-04,  8.5896e-05, -1.0426e-03,  ..., -2.0280e-04,
          -2.6161e-04,  5.4983e-04],
         [-7.0471e-04,  2.7754e-05, -1.0264e-03,  ..., -1.8046e-04,
          -2.1918e-04,  5.9590e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what color is that shirt? ', '<Img><ImageHere></Img> [vqa] is the spoon to the right of the napkin? ', '<Img><ImageHere></Img> [vqa] what is in the bottles? ', "<Img><ImageHere></Img> [vqa] is the zebra's mane thick and black? ", '<Img><ImageHere></Img> [vqa] how thick is the hair? ', '<Img><ImageHere></Img> [vqa] what kind of furniture is in the hospital? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.5202,  1.6946, -0.2590,  ...,  1.0375, -0.7054, -0.3819],
         [ 0.1612,  1.4552, -0.0800,  ...,  0.5432, -0.0965, -0.7490],
         [ 0.2660,  1.8603, -0.5727,  ...,  1.0206, -0.6286, -0.3228],
         ...,
         [-0.2382,  0.4487,  0.1347,  ...,  1.0939, -0.9156,  0.0212],
         [-0.1165,  0.1150,  0.8199,  ...,  0.4849, -0.3163,  0.6105],
         [-1.0139,  1.0026, -0.6925,  ..., -0.2536, -0.8302,  0.0069]],

        [[-0.5900,  0.6482, -0.5954,  ..., -1.1319,  0.7472,  1.0700],
         [-0.2541,  0.7819, -0.3205,  ..., -1.0192,  1.1755,  0.8654],
         [-0.0073, -0.2542,  1.7817,  ...,  0.4389, -0.3117,  0.8756],
         ...,
         [-0.5215,  0.5792, -0.1113,  ..., -1.2396,  0.1684,  0.2014],
         [-0.3445,  1.1313,  0.3021,  ..., -1.0539,  0.9463,  0.4927],
         [-0.7565,  0.9253, -0.6882,  ..., -1.2031,  0.4761,  0.9630]],

        [[ 0.3767, -0.0099,  0.4693,  ..., -0.0213, -0.1724, -0.0943],
         [ 0.3572,  0.0471,  0.7863,  ...,  0.7592, -0.6943,  0.0629],
         [ 0.0938,  0.4267,  0.1356,  ...,  0.3006, -1.1355, -0.0043],
         ...,
         [-0.3106,  0.3217, -0.2593,  ...,  0.3959, -0.7479,  0.0865],
         [-0.8047, -1.3537,  0.0662,  ...,  0.9159, -0.1878,  1.2785],
         [-0.7871, -1.9230,  0.4280,  ...,  0.9945, -0.5848,  1.1086]],

        [[-0.9330,  0.1050, -1.4174,  ..., -0.0849, -0.4413, -0.0773],
         [-1.2127,  0.0905, -0.9726,  ...,  0.0721,  0.0417, -0.3033],
         [-1.2377,  0.0062, -0.9012,  ...,  0.3158, -0.2334, -0.1029],
         ...,
         [-1.3815, -0.6907, -0.5124,  ...,  0.8354, -0.1912, -0.2167],
         [-1.9386, -0.4826, -0.0566,  ...,  0.3729, -1.6056, -0.0454],
         [-1.2127, -0.6696, -0.0479,  ...,  0.7118,  0.3787,  1.3885]],

        [[-0.8251, -1.6242,  0.8529,  ...,  0.6204,  0.0900,  0.7107],
         [-0.9450, -0.6698,  0.5863,  ...,  0.1308,  0.0845, -0.1625],
         [-0.3997,  0.6284, -1.0284,  ...,  1.0369, -0.0304, -0.4629],
         ...,
         [-0.7410,  0.4672,  0.8128,  ...,  0.3110, -0.5483, -1.2528],
         [-0.8738,  0.6798,  0.3265,  ...,  0.3148, -0.2026, -0.4121],
         [-1.1561, -0.3725,  0.4940,  ...,  0.5794, -0.5428,  0.4888]],

        [[-0.2939, -0.7236,  0.4708,  ...,  1.3297,  0.1328,  0.8328],
         [-0.7024, -1.2994,  0.4456,  ...,  0.9966, -0.1562,  1.3104],
         [ 0.7005,  0.1377,  0.3993,  ...,  1.8942, -2.1841,  0.3480],
         ...,
         [ 0.3527, -1.0393,  0.2524,  ...,  1.5634, -0.7411, -0.6155],
         [-0.2554, -0.6178, -0.8620,  ...,  2.0396, -1.2657, -0.1814],
         [ 0.1674, -0.4586, -0.4357,  ...,  1.2865, -0.0959, -0.7021]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what color is that shirt? ', '<Img><ImageHere></Img> [vqa] is the spoon to the right of the napkin? ', '<Img><ImageHere></Img> [vqa] what is in the bottles? ', "<Img><ImageHere></Img> [vqa] is the zebra's mane thick and black? ", '<Img><ImageHere></Img> [vqa] how thick is the hair? ', '<Img><ImageHere></Img> [vqa] what kind of furniture is in the hospital? ']
processed prompt_list:['Based on the image, respond to this question with a short answer: what color is that shirt?', 'is the spoon to the right of the napkin?', 'what is in the bottles?', "is the zebra's mane thick and black?", 'how thick is the hair?', 'what kind of furniture is in the hospital?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.7578e-04,  1.1184e-03, -7.3389e-04,  ..., -2.0334e-04,
          -5.6970e-04,  8.3289e-04],
         [-7.0129e-04,  1.2868e-03, -1.0314e-03,  ..., -4.6641e-04,
          -3.0927e-04, -1.0662e-04],
         [-9.3117e-04,  1.1243e-03, -1.0301e-03,  ..., -4.3230e-04,
          -4.9174e-04,  7.1241e-04],
         ...,
         [-9.4830e-04,  2.5487e-04, -9.3027e-04,  ...,  1.5648e-05,
          -6.4834e-04,  5.0880e-04],
         [-7.7760e-04, -3.4493e-05, -8.3046e-04,  ..., -7.9951e-04,
          -7.9522e-05,  1.7500e-04],
         [-8.2564e-04,  7.8275e-05, -3.9155e-04,  ..., -1.7286e-04,
          -1.5729e-05, -1.0504e-04]],

        [[-1.1225e-03, -1.4934e-04, -7.6051e-04,  ..., -1.4430e-03,
           4.1854e-05, -2.5517e-04],
         [-1.1697e-03,  2.9673e-04, -6.6079e-04,  ..., -1.4018e-03,
          -3.9103e-04, -2.6236e-04],
         [-7.2700e-04,  2.2020e-04, -8.4976e-04,  ..., -1.9512e-04,
          -9.2379e-04,  9.6105e-04],
         ...,
         [-1.0202e-03,  8.7774e-05, -8.5379e-04,  ..., -1.2900e-03,
          -4.0568e-04, -1.3145e-04],
         [-1.3767e-03, -2.0689e-04, -5.7299e-04,  ..., -8.8189e-04,
           8.0025e-05,  1.0469e-04],
         [-1.1481e-03, -4.7258e-04, -8.4274e-04,  ..., -1.2529e-03,
           2.3939e-04, -9.5338e-05]],

        [[-4.7602e-04,  1.7623e-04, -7.0588e-04,  ..., -5.9215e-04,
          -2.4365e-04,  4.8274e-04],
         [-4.4051e-04,  4.6057e-04, -6.9670e-04,  ..., -7.6594e-04,
          -2.7052e-04, -3.7652e-04],
         [-1.5793e-04,  3.2842e-05, -4.6565e-04,  ..., -9.3274e-04,
          -4.2425e-04,  5.9343e-04],
         ...,
         [-7.6147e-04,  2.0201e-04, -4.8060e-04,  ..., -6.4096e-04,
          -4.6284e-04,  6.8513e-04],
         [-5.5390e-04,  2.5455e-04, -7.3170e-04,  ..., -1.0801e-03,
           1.3168e-04,  1.7324e-05],
         [-3.4823e-04,  9.6062e-05, -6.3827e-04,  ..., -8.9825e-04,
           2.7238e-04, -2.6213e-04]],

        [[-6.5735e-04,  3.3801e-04, -8.5795e-04,  ...,  5.0797e-04,
          -2.4800e-04,  9.2690e-04],
         [-7.0165e-04,  5.5024e-04, -9.9062e-04,  ...,  5.5693e-04,
           1.3959e-04,  4.6450e-04],
         [-2.5382e-04,  5.2813e-04, -7.1974e-04,  ...,  6.5206e-04,
          -2.5072e-04,  6.5444e-04],
         ...,
         [-4.5862e-04, -2.6612e-04, -7.2712e-04,  ..., -9.0711e-05,
          -5.7321e-04,  7.8572e-04],
         [-1.9011e-04,  2.5570e-04, -5.5472e-05,  ..., -1.4984e-04,
          -1.1059e-04, -2.8653e-04],
         [-9.3667e-04, -1.9514e-04, -5.9977e-04,  ..., -1.0006e-04,
          -2.7498e-04,  3.6252e-04]],

        [[-7.6484e-04,  4.1645e-04, -1.0909e-03,  ..., -2.2833e-04,
          -1.3790e-04,  3.1698e-04],
         [-4.1665e-04,  2.3547e-04, -1.3930e-03,  ..., -7.1992e-04,
           3.5613e-04,  1.9397e-04],
         [-6.4461e-04,  5.0062e-04, -2.9728e-04,  ...,  5.9628e-05,
          -6.7465e-04, -1.1014e-04],
         ...,
         [-3.0385e-04,  8.2025e-04, -6.4954e-04,  ..., -4.2368e-04,
           1.7867e-04,  9.2784e-05],
         [-3.8659e-04,  4.0116e-04, -9.1503e-04,  ..., -2.2338e-04,
          -2.3986e-04,  2.9394e-04],
         [-1.0212e-03,  2.5338e-04, -7.7405e-04,  ..., -7.0459e-04,
          -4.7629e-05, -1.7747e-04]],

        [[-7.6833e-04,  3.3359e-04, -1.1169e-03,  ...,  7.6037e-05,
          -2.0158e-04,  7.8257e-04],
         [-5.4596e-04,  7.4974e-05, -8.1607e-04,  ..., -3.6111e-04,
          -3.5671e-05,  6.2933e-04],
         [-6.9053e-04, -2.1102e-05, -4.5741e-04,  ..., -4.3713e-04,
          -8.6662e-04,  3.7014e-05],
         ...,
         [-2.5514e-04,  6.5238e-04, -3.8652e-04,  ...,  4.2705e-04,
           1.2256e-04,  3.6339e-04],
         [-8.5167e-04,  7.1490e-05, -5.6810e-04,  ...,  6.0963e-04,
           5.3850e-04,  6.1154e-04],
         [-9.9397e-05, -2.0131e-04, -1.1521e-03,  ...,  8.4733e-04,
           8.9290e-05,  4.3108e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] the location of the spoon next to the pizza is ', '<Img><ImageHere></Img> [refer] could you tell me the location for orange sitting in boiling wate with a crack on the side and a white spot on top ? ', '<Img><ImageHere></Img> [refer] where is a black cow alongside a brown cow ? ', '<Img><ImageHere></Img> [refer] where is the skiir standing up ? ', '<Img><ImageHere></Img> [refer] give me the location of a blonde-haired small child ', '<Img><ImageHere></Img> [refer] where can I locate the a man in a white soccer uniform ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.8252, -0.5191, -0.2379,  ...,  0.1308, -0.4408, -0.0451],
         [-0.8297,  1.1003, -0.8943,  ...,  0.8022, -0.5908,  0.2717],
         [-1.3497,  0.1968,  0.6010,  ...,  0.1484, -1.1732, -0.1106],
         ...,
         [-0.5699,  1.5269, -1.6915,  ...,  0.7020,  0.5230, -0.4566],
         [-0.0620,  0.6137, -0.0956,  ...,  0.4664, -0.1450,  0.3973],
         [-0.7582,  1.1572,  0.9814,  ..., -0.2170, -0.4718, -0.2128]],

        [[-1.0153,  0.7156,  0.7274,  ..., -0.1135, -0.9847,  0.1510],
         [-0.6258,  0.4492,  0.5332,  ..., -0.2464, -1.2248, -0.2929],
         [-0.7522,  0.3972,  0.3055,  ..., -0.0205, -1.1072,  0.2144],
         ...,
         [ 0.3690, -0.5204,  0.3814,  ...,  1.4971, -0.0338,  0.1826],
         [-0.0563, -0.1818,  0.2858,  ...,  1.3271, -1.0485, -0.5464],
         [-0.3964, -0.3623,  0.6222,  ...,  0.2753, -0.6110, -0.5695]],

        [[-0.6161, -0.5526,  1.0627,  ..., -0.3807, -0.3370,  0.5396],
         [-0.9156, -1.4442,  0.2786,  ..., -0.2227, -0.1972,  0.0685],
         [-1.2637,  0.5679, -0.0162,  ...,  0.4008, -0.7096,  0.0445],
         ...,
         [-1.1600, -0.0715, -0.1584,  ...,  0.1436, -1.0884, -0.1981],
         [-0.4007,  0.0773,  0.4723,  ...,  0.8084, -1.3008, -0.0796],
         [-0.1470, -0.5545,  1.1776,  ...,  0.7839,  1.0543,  0.3733]],

        [[-1.1777, -0.0877,  0.4045,  ..., -0.9439, -0.7036, -0.6514],
         [-1.0528, -0.0127,  0.3134,  ..., -0.5335, -0.9514, -0.5114],
         [ 0.0246, -0.7330,  1.1753,  ..., -0.2976, -1.8606, -0.8666],
         ...,
         [-0.5813, -1.1131,  1.1614,  ...,  1.1108,  0.5931,  1.0747],
         [-0.7948, -1.1603,  0.7291,  ...,  1.3630,  0.8201,  1.0789],
         [-0.1589, -1.2856,  0.5690,  ...,  0.9229, -0.0488,  0.9873]],

        [[-1.2385,  0.2359,  0.7002,  ...,  0.3227,  0.1855, -0.0067],
         [-0.1363,  0.4297,  0.4237,  ...,  0.4117,  0.0968, -0.0061],
         [ 0.2648,  0.1212, -0.2782,  ...,  1.1943, -0.3484,  0.5457],
         ...,
         [-1.0056,  0.5809,  0.5636,  ...,  0.2736, -0.5688,  0.0390],
         [-0.3178,  0.9210,  0.3741,  ...,  0.4261, -0.0256, -0.4203],
         [-1.1879,  0.1115,  0.5016,  ...,  0.1181,  0.0994,  0.1687]],

        [[ 0.4980,  1.1657, -0.4009,  ..., -0.2412,  0.7135, -0.8792],
         [ 0.2708,  1.3809,  0.3509,  ...,  0.2351, -0.1729, -0.8849],
         [ 0.1893,  1.3256,  0.2410,  ...,  0.4004, -0.3854, -1.0527],
         ...,
         [-0.2128, -0.1916,  0.6036,  ...,  0.5981, -0.4178, -0.7211],
         [ 0.7559, -0.2489,  0.9351,  ...,  0.6510,  1.1152,  0.0906],
         [ 0.6660, -0.2730,  1.0235,  ...,  0.5464,  0.9813,  0.1104]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] the location of the spoon next to the pizza is ', '<Img><ImageHere></Img> [refer] could you tell me the location for orange sitting in boiling wate with a crack on the side and a white spot on top ? ', '<Img><ImageHere></Img> [refer] where is a black cow alongside a brown cow ? ', '<Img><ImageHere></Img> [refer] where is the skiir standing up ? ', '<Img><ImageHere></Img> [refer] give me the location of a blonde-haired small child ', '<Img><ImageHere></Img> [refer] where can I locate the a man in a white soccer uniform ? ']
processed prompt_list:['the location of the spoon next to the pizza is', 'could you tell me the location for orange sitting in boiling wate with a crack on the side and a white spot on top ?', 'where is a black cow alongside a brown cow ?', 'where is the skiir standing up ?', 'give me the location of a blonde-haired small child', 'where can I locate the a man in a white soccer uniform ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-2.3998e-04,  1.1183e-03, -3.1178e-04,  ...,  2.4308e-04,
          -7.2853e-04, -8.2418e-05],
         [-5.6934e-04,  4.6348e-04, -1.8728e-04,  ..., -5.5694e-04,
          -5.5789e-04,  4.3296e-04],
         [-4.7270e-04,  6.0599e-04, -4.9984e-04,  ..., -7.2976e-04,
          -1.2177e-03,  2.2481e-04],
         ...,
         [-6.7198e-04,  1.0336e-03, -6.5330e-04,  ..., -1.8069e-04,
          -5.9679e-04,  4.4400e-04],
         [-6.7582e-04,  9.5996e-04, -8.3193e-04,  ..., -2.3392e-04,
           5.2305e-04,  4.7617e-04],
         [-8.2161e-04,  7.5477e-04, -8.4882e-04,  ..., -3.9099e-04,
          -5.7575e-04,  6.8090e-05]],

        [[-5.1864e-04,  8.9025e-04, -6.6326e-04,  ..., -6.0244e-04,
          -4.2046e-04, -1.9419e-04],
         [-6.5230e-04,  3.2137e-04, -5.3657e-04,  ..., -6.8530e-04,
          -6.1356e-04, -1.2426e-05],
         [-7.6706e-04,  4.4170e-04, -6.5023e-04,  ..., -6.5885e-04,
          -1.3862e-04,  3.4498e-04],
         ...,
         [-3.1953e-04, -1.4526e-04, -9.5382e-04,  ...,  2.3120e-04,
           4.8594e-04,  2.4345e-04],
         [-3.0521e-04, -6.1540e-05, -1.9245e-04,  ..., -1.4537e-04,
           6.8358e-05, -1.6885e-04],
         [-1.2635e-03,  7.5755e-05, -1.0186e-03,  ..., -7.0848e-04,
           3.9039e-05, -1.3996e-04]],

        [[-6.9799e-04,  6.2276e-04, -9.0462e-04,  ..., -6.4276e-04,
          -7.6655e-04, -5.8562e-04],
         [-6.6308e-04,  3.7453e-05, -5.1970e-04,  ..., -8.4171e-04,
          -4.3658e-04, -2.1043e-04],
         [-7.3219e-04, -9.1523e-05, -1.8113e-04,  ..., -5.9906e-04,
          -7.1543e-04,  1.6087e-05],
         ...,
         [-6.4048e-04,  5.9343e-04, -5.5982e-04,  ..., -4.9212e-04,
          -5.0893e-04, -2.4414e-04],
         [-1.1344e-03,  6.8074e-04, -4.8682e-04,  ..., -4.5558e-04,
          -3.7329e-04, -7.7663e-04],
         [-6.1614e-04, -4.5184e-05, -1.1411e-03,  ..., -2.5989e-04,
          -4.2544e-05,  4.8157e-04]],

        [[-6.7184e-04,  5.7818e-04, -6.0112e-04,  ..., -1.2890e-04,
          -9.8315e-05, -9.8972e-05],
         [-8.7483e-04,  4.3192e-04, -6.7107e-04,  ..., -3.1401e-04,
          -6.9116e-05, -1.5689e-04],
         [-2.2452e-04,  4.6616e-04, -3.7555e-04,  ..., -3.1228e-04,
          -6.3550e-04,  1.4484e-04],
         ...,
         [-7.6093e-04,  1.5138e-04, -1.1949e-03,  ..., -2.2445e-04,
          -1.8061e-04,  1.2203e-04],
         [-6.1356e-04,  1.1798e-04, -9.7998e-04,  ..., -4.0040e-04,
          -1.4293e-04,  6.3625e-05],
         [-4.1609e-04,  2.2081e-04, -7.4916e-04,  ..., -4.8170e-04,
          -1.5413e-04, -2.3870e-04]],

        [[-9.7680e-04, -4.2087e-05, -1.2184e-03,  ..., -4.7818e-04,
           1.1223e-03,  3.9139e-04],
         [-8.8046e-04, -1.2538e-05, -1.0775e-03,  ..., -8.1478e-04,
           8.9473e-04,  8.1859e-04],
         [-6.1232e-04,  3.4832e-04, -9.8603e-04,  ...,  1.6949e-04,
           1.5188e-04, -3.3329e-05],
         ...,
         [-9.9224e-04,  5.2621e-05, -7.4632e-04,  ..., -1.0179e-03,
           1.2386e-03,  7.3205e-04],
         [-9.0793e-04,  4.1231e-06, -7.3074e-04,  ..., -1.1214e-03,
           1.0441e-03,  1.0412e-03],
         [-1.0853e-03,  1.8922e-05, -1.0224e-03,  ..., -5.0642e-04,
           1.2234e-03,  2.8442e-04]],

        [[-1.7257e-04,  2.8913e-04, -9.7823e-04,  ...,  3.6612e-04,
          -3.0415e-04,  1.6959e-04],
         [-8.3125e-04,  3.2542e-04, -1.3256e-04,  ...,  4.1180e-04,
          -6.5132e-04,  9.1117e-04],
         [-9.7788e-04,  3.0068e-04, -2.4184e-04,  ...,  3.8393e-04,
          -6.6595e-04,  1.1013e-03],
         ...,
         [-1.0660e-03, -4.4871e-04,  2.6458e-04,  ..., -1.3947e-04,
          -1.2173e-03,  9.6255e-05],
         [-5.8568e-04,  1.1581e-04, -6.7064e-04,  ..., -4.4105e-04,
           1.0442e-04,  3.9857e-04],
         [-5.3419e-04,  1.3200e-04, -6.6834e-04,  ..., -4.2392e-04,
           1.2269e-04,  4.6330e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: are there both windows and doors in this picture? ', '<Img><ImageHere></Img> [vqa] what kind of meat is the lettuce on? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: do you see both cranberries and oranges? ', '<Img><ImageHere></Img> [vqa] are there both windows and doors in the picture? ', '<Img><ImageHere></Img> [vqa] are there carriages behind the black animal? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is under the bench that is made of wood? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.3389, -0.9919,  0.4877,  ...,  0.6165, -0.0830,  0.6157],
         [-0.4565, -1.2672,  0.6980,  ...,  0.6335, -0.0652,  0.8773],
         [-0.0687, -0.7638,  0.2114,  ...,  0.3558, -0.0030, -0.0036],
         ...,
         [-0.1449, -0.4929,  0.2116,  ...,  0.9736, -0.0480,  0.2324],
         [-0.1392,  0.1254, -0.1718,  ...,  1.9392, -0.6172,  0.1378],
         [ 0.6685, -0.0811, -0.3172,  ...,  1.7280, -1.1090, -0.9046]],

        [[-0.9009, -0.3275,  0.6663,  ...,  0.5425, -0.0139, -0.3120],
         [-0.3569,  0.8958,  0.1486,  ...,  1.0974, -0.2542, -0.4888],
         [-0.0082, -0.0561,  0.5259,  ...,  0.1416, -0.6348,  0.0870],
         ...,
         [-0.4146,  0.2127, -0.4244,  ...,  0.8405, -0.1789, -0.4466],
         [ 0.7440,  0.7941,  0.7091,  ..., -0.4034,  0.7645,  0.2696],
         [-0.1903,  0.5739,  0.6196,  ..., -0.0400,  0.5060,  0.1891]],

        [[ 1.0230, -0.2617, -0.2659,  ..., -0.2608,  0.8235,  0.6023],
         [ 0.3323, -0.2138,  0.2676,  ..., -1.2784, -0.0833, -0.0639],
         [-0.1438,  0.8154,  1.1406,  ..., -1.0034, -0.6695, -0.0892],
         ...,
         [ 0.7394, -0.5781,  0.3127,  ..., -0.4894,  0.1172, -0.0945],
         [ 0.8530, -0.4338, -0.1054,  ..., -0.4710,  0.6195,  0.4413],
         [ 0.9970, -0.2428, -0.2599,  ..., -0.1536,  0.6296,  0.5356]],

        [[-0.4731, -1.5826, -0.0253,  ...,  0.5457, -0.0950,  1.4126],
         [-0.2257, -1.4027, -0.0300,  ...,  0.8480, -0.4627,  1.3906],
         [-0.3186, -1.5392,  0.6843,  ...,  0.5467, -1.2523,  1.1037],
         ...,
         [ 0.0640, -0.7305,  0.7400,  ...,  0.6732, -0.5046, -0.0548],
         [-0.0473, -0.9013,  0.3079,  ...,  0.7855, -1.3582,  0.9833],
         [-0.5171, -1.0475,  0.2738,  ...,  0.9214,  0.4929,  1.6397]],

        [[-0.2930, -0.4004, -0.7136,  ...,  0.9975,  1.2347, -0.3486],
         [ 0.0047,  0.3136, -0.0460,  ...,  0.7190,  0.4368, -0.2041],
         [ 0.8609, -0.1231, -0.2285,  ...,  0.3538, -0.0085,  0.4288],
         ...,
         [-0.7078, -1.5485,  0.8712,  ...,  1.6481,  0.8939,  0.8022],
         [-1.0305, -1.4190,  0.9046,  ...,  1.5702,  0.8795,  0.5552],
         [-0.6815, -1.3720,  0.7401,  ...,  1.6122,  0.9451,  0.9009]],

        [[-0.0210,  1.1849,  0.8496,  ...,  1.2499, -0.0882,  0.5175],
         [-0.4176, -0.1230,  0.3791,  ..., -0.1723, -0.1118,  1.3757],
         [ 0.0713,  0.9462,  0.7201,  ...,  1.4122, -0.1301, -0.4091],
         ...,
         [-0.6037,  0.0174, -0.7740,  ...,  0.8745, -1.5683,  0.3847],
         [-0.2370, -0.5866,  0.5824,  ...,  0.1096, -0.9303,  0.7896],
         [-0.3383, -0.8698, -0.6896,  ..., -0.4430, -0.6908,  0.2267]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: are there both windows and doors in this picture? ', '<Img><ImageHere></Img> [vqa] what kind of meat is the lettuce on? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: do you see both cranberries and oranges? ', '<Img><ImageHere></Img> [vqa] are there both windows and doors in the picture? ', '<Img><ImageHere></Img> [vqa] are there carriages behind the black animal? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is under the bench that is made of wood? ']
processed prompt_list:['Based on the image, respond to this question with a short answer: are there both windows and doors in this picture?', 'what kind of meat is the lettuce on?', 'Based on the image, respond to this question with a short answer: do you see both cranberries and oranges?', 'are there both windows and doors in the picture?', 'are there carriages behind the black animal?', 'Based on the image, respond to this question with a short answer: what is under the bench that is made of wood?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-3.7718e-04,  4.2478e-04, -7.2676e-04,  ..., -2.4773e-04,
          -6.9011e-04,  3.1460e-04],
         [-3.9846e-04,  4.6483e-04, -7.7931e-04,  ..., -4.0512e-04,
          -5.1383e-04,  9.5689e-05],
         [-6.4636e-04,  3.7613e-04, -1.4120e-03,  ...,  9.4509e-05,
           2.1451e-05,  6.4493e-04],
         ...,
         [-7.8250e-04,  3.4580e-04, -1.2118e-03,  ...,  3.9417e-05,
           1.6778e-04,  3.8744e-04],
         [-9.5455e-04, -2.4771e-04, -9.2925e-04,  ...,  5.0897e-06,
           3.1786e-04, -2.0403e-05],
         [-1.0312e-03,  5.9232e-05, -1.2580e-04,  ..., -4.7076e-04,
          -1.7039e-04, -4.9556e-04]],

        [[-9.4842e-04,  1.1116e-03, -8.6637e-04,  ..., -1.4491e-05,
          -4.8304e-04,  1.2314e-05],
         [-4.7507e-04,  1.1471e-03, -8.7606e-04,  ..., -9.1107e-05,
          -6.3040e-04,  4.9419e-04],
         [-6.7287e-04,  6.6621e-04, -1.1222e-03,  ...,  3.0338e-04,
           4.6102e-04,  5.1166e-04],
         ...,
         [-5.7284e-04,  1.2817e-03, -9.3828e-04,  ..., -2.6295e-04,
          -5.6661e-04, -1.3183e-04],
         [-8.0972e-04,  2.0576e-04, -8.9202e-04,  ..., -1.3142e-04,
          -5.0905e-04, -4.4928e-05],
         [-1.1194e-03,  1.7022e-04, -7.6056e-04,  ..., -3.7384e-04,
          -6.5177e-04, -1.6044e-05]],

        [[-9.6226e-04,  2.2523e-04, -6.9018e-04,  ..., -1.3128e-04,
          -2.6851e-04,  4.4593e-04],
         [-9.7033e-04, -1.2570e-05, -5.6761e-04,  ..., -7.0487e-04,
           1.0181e-04, -3.6840e-04],
         [-1.1845e-03, -2.1043e-04, -3.8563e-04,  ..., -1.1569e-03,
           4.2133e-04, -2.5042e-04],
         ...,
         [-7.6286e-04,  7.8667e-04, -6.1000e-04,  ..., -1.4381e-04,
           4.2738e-04, -1.2161e-04],
         [-1.0806e-03,  2.2634e-04, -4.9743e-04,  ..., -2.6966e-04,
          -2.3206e-04,  5.1505e-04],
         [-1.0249e-03,  1.8509e-04, -5.1436e-04,  ..., -3.4877e-04,
          -9.9981e-05,  3.9874e-04]],

        [[-2.2177e-04,  1.7530e-04, -1.9729e-04,  ..., -4.8490e-04,
           1.4000e-04, -2.3770e-04],
         [-1.3270e-04,  1.1823e-05, -2.8292e-05,  ..., -6.6138e-04,
           7.6597e-05, -4.2480e-04],
         [-3.7547e-04, -2.2309e-04, -1.0172e-04,  ..., -1.2600e-03,
           5.4046e-05, -6.1998e-04],
         ...,
         [-8.0822e-04,  9.3707e-04,  3.5218e-05,  ..., -8.0678e-04,
          -4.2695e-04,  2.6756e-04],
         [-1.4010e-04,  4.8564e-05, -6.3309e-04,  ..., -7.6937e-04,
          -3.0746e-04, -6.4313e-04],
         [-7.4186e-04,  1.0310e-04, -9.4238e-04,  ..., -3.9914e-04,
          -9.3799e-05,  2.7826e-04]],

        [[-4.8030e-04,  1.0050e-03, -6.4183e-04,  ..., -3.4149e-05,
          -4.9485e-04,  2.5220e-04],
         [-5.7811e-04,  9.8312e-04, -7.9042e-04,  ..., -1.6174e-04,
          -4.9013e-04,  2.2737e-04],
         [-8.1931e-04,  4.3159e-04, -1.0835e-03,  ..., -5.8271e-05,
          -5.6941e-04,  6.5192e-04],
         ...,
         [-7.0785e-04, -7.6953e-05, -7.4018e-04,  ..., -1.1261e-04,
          -5.2590e-06,  5.1389e-04],
         [-9.2240e-04, -1.5516e-04, -7.3963e-04,  ..., -2.6582e-04,
          -2.1225e-05,  4.6715e-04],
         [-7.9392e-04, -9.5617e-05, -8.5806e-04,  ..., -6.1765e-05,
          -8.0057e-05,  6.3143e-04]],

        [[-5.2425e-04,  6.0234e-05, -4.7330e-04,  ..., -1.6618e-04,
          -8.1933e-07, -9.2613e-05],
         [-8.1051e-04,  2.1154e-04, -9.9009e-04,  ...,  4.7094e-05,
          -1.9645e-04,  8.4804e-04],
         [-4.9883e-04,  2.1654e-04, -5.5648e-04,  ..., -2.3608e-04,
           6.0954e-05, -3.1326e-04],
         ...,
         [-1.1749e-03,  5.0031e-05, -9.9763e-05,  ..., -7.1106e-05,
          -2.5839e-04, -5.6264e-04],
         [-7.9302e-04,  5.4912e-04, -6.3327e-04,  ..., -2.3878e-04,
           1.3574e-04,  6.4944e-04],
         [-2.3144e-04,  4.9812e-04, -4.7217e-04,  ...,  6.4765e-04,
          -2.7263e-04, -2.1358e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] the location of tomatoesin square container is ', '<Img><ImageHere></Img> [refer] where can I locate the silver car with spoiler ? ', '<Img><ImageHere></Img> [refer] give me the location of withe outreach girl ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of small cow out of view ', '<Img><ImageHere></Img> [refer] grey part of seat next to the main one ', '<Img><ImageHere></Img> [refer] where is boarder ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.1524, -0.0113,  0.4420,  ...,  0.3503,  0.3137,  0.2737],
         [-0.6398, -0.4852,  0.1448,  ...,  0.0572, -0.5982, -0.3340],
         [-1.4266, -0.2648,  0.7184,  ..., -0.0846, -0.8364, -0.2508],
         ...,
         [-0.1512,  0.0852,  0.4707,  ...,  0.6365,  0.3215,  0.2966],
         [ 0.1326,  0.4348,  0.1865,  ...,  0.8041,  0.9201,  0.5347],
         [ 0.2024,  0.3211,  0.0668,  ...,  0.8230,  0.9934,  0.5655]],

        [[-0.5550, -0.6105,  0.1907,  ...,  0.1673, -0.4038, -0.1710],
         [-0.2086, -0.1707,  0.7596,  ...,  1.1222, -0.6649, -0.2143],
         [-0.1425,  0.5783,  0.5625,  ...,  0.8988, -0.5410, -0.1842],
         ...,
         [-0.7544,  0.9915,  1.4309,  ...,  0.4749, -0.2957, -0.5223],
         [-0.8941,  0.7362,  0.7069,  ...,  0.4467, -0.4021, -0.0695],
         [-0.0391, -0.4410,  0.9211,  ...,  1.3188,  0.6581,  0.7684]],

        [[-0.1083, -0.7985, -1.3018,  ...,  0.5274, -0.4995, -0.7027],
         [-0.0708, -0.2735,  0.0719,  ...,  1.1422,  0.7269,  0.1633],
         [ 0.0164,  0.1336, -0.1657,  ...,  0.9141,  0.4534, -0.5404],
         ...,
         [-0.3184, -0.5555, -0.7861,  ...,  0.3971, -0.6622, -0.0893],
         [ 0.2787, -0.1563,  0.2359,  ...,  1.2809,  0.7196,  0.1341],
         [ 0.3415, -0.4150, -0.5989,  ...,  1.1607, -0.0950, -0.5260]],

        [[-0.3064, -1.1464,  0.6447,  ...,  1.1220,  0.8187,  0.3165],
         [ 0.4312,  0.0899,  0.4781,  ...,  0.3952,  0.4439,  0.2976],
         [-0.2617, -0.7993,  0.4781,  ...,  0.6989,  0.3369,  1.2771],
         ...,
         [ 0.3039, -0.3113, -0.4915,  ...,  0.8811,  0.1925, -0.1403],
         [ 0.1665, -0.3466, -0.5233,  ...,  0.7728,  0.5547, -0.0384],
         [ 0.7455,  0.0571, -0.0438,  ...,  0.5896, -0.5857,  0.0769]],

        [[-0.4230, -0.0766,  0.7568,  ...,  1.3341,  0.3223,  0.5970],
         [-0.1404,  1.1663,  0.1103,  ...,  0.6960, -1.0631, -0.6779],
         [-0.5421,  0.5555,  1.4391,  ...,  0.3260, -0.4913, -1.0912],
         ...,
         [-0.2558,  0.3886,  1.0682,  ..., -0.1919, -1.1795,  0.2657],
         [ 0.3055,  0.2143,  0.7705,  ...,  0.1306, -1.2363,  1.0587],
         [-0.4209,  0.0186, -0.0417,  ...,  1.5481,  0.8876,  0.6907]],

        [[ 0.6164,  0.1765, -0.4238,  ...,  0.2337, -0.1563, -0.3750],
         [-0.1371, -0.0732,  0.3749,  ...,  0.5456, -0.0038,  0.0346],
         [-0.5089,  0.9229,  0.6186,  ..., -0.0551, -1.6794, -1.1907],
         ...,
         [ 0.2664,  0.3511, -0.1181,  ..., -0.1765, -0.4935, -0.7886],
         [-0.7080, -0.5302,  0.1587,  ...,  0.3272,  0.3592, -0.3527],
         [-0.5966, -0.4386,  0.1776,  ...,  0.3925,  0.2195, -0.2799]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] the location of tomatoesin square container is ', '<Img><ImageHere></Img> [refer] where can I locate the silver car with spoiler ? ', '<Img><ImageHere></Img> [refer] give me the location of withe outreach girl ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of small cow out of view ', '<Img><ImageHere></Img> [refer] grey part of seat next to the main one ', '<Img><ImageHere></Img> [refer] where is boarder ? ']
processed prompt_list:['the location of tomatoesin square container is', 'where can I locate the silver car with spoiler ?', 'give me the location of withe outreach girl', 'from this image, tell me the location of small cow out of view', 'grey part of seat next to the main one', 'where is boarder ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-9.4484e-04, -2.6944e-04, -1.3884e-03,  ..., -1.1453e-04,
           3.2924e-04,  2.1524e-04],
         [-7.7407e-04,  4.1397e-04, -6.3299e-04,  ...,  2.4023e-04,
           1.1909e-05, -2.0543e-04],
         [-1.0730e-03,  3.9235e-04, -3.6204e-04,  ..., -1.7243e-04,
          -8.9555e-05,  1.6228e-04],
         ...,
         [-7.7598e-04, -2.2944e-04, -1.1866e-03,  ..., -2.2968e-04,
           2.3812e-04,  2.2183e-04],
         [-9.5599e-04, -4.0639e-05, -1.0941e-03,  ..., -3.7145e-04,
          -2.2550e-04,  1.4237e-04],
         [-1.0205e-03, -2.3575e-05, -1.2145e-03,  ..., -3.8102e-04,
          -2.1356e-04,  1.1783e-04]],

        [[-1.0235e-03,  5.2838e-04, -9.7211e-04,  ..., -3.5146e-04,
          -4.4563e-04, -4.2137e-04],
         [-5.9343e-04,  2.7453e-04, -1.1143e-03,  ..., -5.6385e-04,
          -5.8246e-04,  7.3797e-04],
         [-4.2647e-04,  2.7953e-04, -8.4959e-04,  ..., -1.4130e-03,
          -6.5670e-04,  5.5140e-04],
         ...,
         [-4.7017e-04, -6.4780e-07, -5.4921e-04,  ..., -6.2180e-04,
          -5.4013e-04, -2.3186e-04],
         [-7.0064e-04,  2.5673e-04, -7.4494e-04,  ..., -2.8745e-04,
          -3.5223e-04, -1.8135e-04],
         [-5.4021e-04,  2.2421e-04, -9.1635e-04,  ..., -2.2267e-04,
           1.5954e-04, -1.8237e-04]],

        [[-5.3291e-04,  3.0613e-04, -7.9388e-04,  ..., -1.5474e-04,
           9.8518e-05,  1.1786e-03],
         [-6.6711e-04,  8.7144e-05, -1.1502e-03,  ..., -3.0399e-04,
          -3.2759e-04, -8.0825e-05],
         [-6.7427e-04, -3.3138e-04, -1.0380e-03,  ..., -7.4903e-04,
          -1.1609e-04, -1.4173e-04],
         ...,
         [-5.3601e-04,  6.1491e-04, -7.8465e-04,  ..., -1.4189e-04,
           2.7350e-04,  1.3541e-03],
         [-5.4080e-04,  1.5009e-04, -1.1350e-03,  ..., -1.8964e-04,
          -3.6046e-04, -3.4128e-05],
         [-4.6446e-04, -4.7330e-04, -9.9677e-04,  ..., -5.6719e-04,
          -4.2289e-05, -9.2880e-05]],

        [[-3.9150e-04, -2.2070e-04, -6.3762e-04,  ..., -4.0386e-04,
          -4.6182e-04,  5.9628e-04],
         [-4.0849e-04,  7.6032e-04, -8.7982e-04,  ..., -1.6330e-04,
           3.6564e-04,  2.5114e-04],
         [-5.8375e-04,  1.7270e-04, -1.0058e-03,  ..., -1.0952e-03,
          -4.3389e-04, -7.5289e-05],
         ...,
         [-7.0870e-04,  3.9091e-04, -4.7343e-04,  ...,  3.7840e-04,
          -3.8514e-04,  7.8423e-05],
         [-8.9577e-04,  4.6661e-04, -6.0710e-04,  ...,  2.5144e-04,
          -1.7951e-04,  6.4601e-04],
         [-5.3978e-04,  2.6725e-04, -5.3834e-04,  ..., -2.8571e-04,
          -5.3403e-04,  3.5570e-04]],

        [[-5.9937e-04,  4.2374e-04, -1.0324e-03,  ..., -1.8882e-04,
          -1.2857e-04,  2.2910e-04],
         [-7.0153e-04,  3.3934e-04, -5.9445e-04,  ...,  1.5123e-04,
          -2.0632e-04, -3.4244e-04],
         [ 7.9380e-06,  3.9545e-04, -2.6856e-04,  ..., -4.7774e-04,
          -4.6200e-04, -3.5634e-04],
         ...,
         [-1.0083e-03,  6.5840e-04, -5.8080e-04,  ..., -4.1775e-04,
          -1.9444e-05,  1.0264e-03],
         [-1.1675e-03,  7.5432e-04, -5.8039e-04,  ..., -5.8659e-04,
          -1.4879e-04,  9.7304e-04],
         [-6.1184e-04,  6.7024e-05, -7.7931e-04,  ..., -6.5656e-04,
           1.4868e-04,  2.1077e-04]],

        [[-5.5396e-04,  7.4770e-04, -9.7972e-04,  ...,  2.9037e-04,
          -5.0421e-04,  1.8298e-04],
         [-2.7793e-04,  1.2072e-03, -1.1127e-03,  ...,  3.8353e-05,
          -3.6986e-04,  2.0391e-04],
         [-4.4426e-04,  3.7480e-04, -7.2686e-05,  ..., -3.8798e-05,
          -4.1935e-04,  2.7278e-04],
         ...,
         [-1.4513e-03,  8.2598e-04, -6.2056e-04,  ..., -2.9093e-04,
          -8.4796e-04, -1.6989e-05],
         [-2.6875e-04,  1.3319e-04, -5.7328e-04,  ..., -3.6629e-04,
          -1.3140e-04,  1.6943e-04],
         [-1.6405e-04,  1.6881e-04, -4.7597e-04,  ..., -3.9811e-04,
          -1.1712e-05,  2.5263e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [identify] {<7><38><52><98>} ', '<Img><ImageHere></Img> [identify] identify the object present at this location {<0><24><89><84>} ', '<Img><ImageHere></Img> [identify] what object is in this location {<1><6><23><96>} ', '<Img><ImageHere></Img> [identify] what is it in {<41><47><73><80>} ', '<Img><ImageHere></Img> [identify] what is it in {<15><5><33><93>} ', '<Img><ImageHere></Img> [identify] what object is in this location {<17><5><51><98>} ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.2832, -0.7206,  1.0769,  ...,  0.9491,  0.4822,  1.0160],
         [ 1.0919,  0.5434,  0.2868,  ...,  0.8852, -0.9584, -0.0370],
         [ 1.2963,  1.0332,  0.0856,  ...,  0.1589, -0.8746, -0.4452],
         ...,
         [ 0.2393,  0.9346, -0.4209,  ...,  0.5974, -1.3050,  0.0737],
         [ 0.2870,  0.6674, -0.4300,  ...,  0.6571, -0.7086, -0.8262],
         [-0.2824,  0.4656, -0.1691,  ...,  0.7768, -0.0076, -0.2823]],

        [[-1.2920, -0.0868,  1.2184,  ...,  0.0102, -0.9356, -0.5545],
         [-1.1725,  0.2320,  0.4432,  ..., -0.4164, -0.7094, -0.4449],
         [-0.6471, -0.9369,  1.1738,  ..., -0.2242, -1.1001, -0.9355],
         ...,
         [-0.5890, -0.0528,  0.6535,  ...,  0.0420, -0.3768,  0.3911],
         [-0.2691, -0.0904,  0.6260,  ...,  1.1251,  0.6454,  0.0108],
         [-0.3540, -0.0959,  0.7089,  ...,  1.0623,  0.5809,  0.0112]],

        [[ 0.1245, -0.2795,  0.8149,  ...,  0.9427,  0.4354,  0.9815],
         [ 0.0882,  0.3824,  0.2369,  ...,  0.2620,  0.2810, -0.0646],
         [-0.5377, -0.7662,  0.7450,  ...,  0.8505, -0.2023,  0.6690],
         ...,
         [ 0.4814, -0.1509,  1.0098,  ...,  0.9601,  0.5890,  0.9708],
         [ 0.7247,  0.4014, -0.3959,  ...,  0.7336, -0.5452,  0.3111],
         [-0.3217, -0.9928,  0.4279,  ...,  0.5583, -0.3326,  0.1027]],

        [[ 0.9552,  0.3665, -0.2122,  ...,  1.0518, -1.1917, -0.1275],
         [-0.0641, -1.4609,  1.2487,  ...,  1.1739,  0.7706, -0.1214],
         [-0.1770,  0.5583,  1.0286,  ...,  1.2438, -0.6244, -0.5706],
         ...,
         [ 0.4563, -0.0776,  0.8808,  ...,  0.6792, -0.6277, -0.1022],
         [ 0.7226,  0.4258, -0.7032,  ...,  0.7263, -1.5271,  0.4046],
         [ 0.8146,  0.8148,  0.3718,  ...,  1.1370, -0.8442, -0.1766]],

        [[ 0.1848, -0.2406,  0.5749,  ...,  1.2310,  1.0870,  1.1387],
         [-0.2651, -0.4650,  0.2456,  ...,  1.3049,  1.1845,  0.9745],
         [ 0.7927,  0.4113,  0.8318,  ...,  0.9507,  0.4550,  0.7555],
         ...,
         [ 0.0730, -0.1850,  0.3288,  ...,  0.2196, -0.1503, -1.1091],
         [ 0.6333,  0.0881,  0.0629,  ...,  0.1876,  0.6670, -0.5405],
         [-0.1005, -0.3264,  0.2391,  ...,  0.7430, -0.4512,  0.5379]],

        [[-0.0591, -0.1274, -0.5912,  ...,  0.3485,  0.7824,  0.4585],
         [-0.0689,  0.1232, -0.2181,  ...,  0.4711,  0.8654,  0.9071],
         [ 0.3867,  0.1763,  0.1069,  ...,  1.2293, -0.3734,  0.4828],
         ...,
         [ 0.6288,  0.3801,  0.8330,  ..., -0.4847, -1.0325, -0.8737],
         [ 0.6403,  0.7667, -0.0329,  ...,  0.1531, -1.4441, -0.5559],
         [-0.3129,  0.3594, -0.1963,  ...,  0.4827,  0.4275,  0.3234]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [identify] {<7><38><52><98>} ', '<Img><ImageHere></Img> [identify] identify the object present at this location {<0><24><89><84>} ', '<Img><ImageHere></Img> [identify] what object is in this location {<1><6><23><96>} ', '<Img><ImageHere></Img> [identify] what is it in {<41><47><73><80>} ', '<Img><ImageHere></Img> [identify] what is it in {<15><5><33><93>} ', '<Img><ImageHere></Img> [identify] what object is in this location {<17><5><51><98>} ']
processed prompt_list:['{<7><38><52><98>}', 'identify the object present at this location {<0><24><89><84>}', 'what object is in this location {<1><6><23><96>}', 'what is it in {<41><47><73><80>}', 'what is it in {<15><5><33><93>}', 'what object is in this location {<17><5><51><98>}']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.0013e-04,  4.4257e-04, -1.2271e-03,  ..., -3.3413e-05,
           1.2961e-04,  1.5696e-04],
         [-5.4478e-04,  6.1946e-04, -6.2042e-04,  ..., -1.9221e-04,
          -2.1518e-04,  3.5521e-04],
         [-6.5947e-04,  3.6228e-04, -7.2599e-04,  ..., -4.6277e-04,
          -3.4218e-04,  7.2742e-04],
         ...,
         [-1.1898e-03,  3.7660e-04, -5.2557e-04,  ..., -7.2069e-04,
          -3.1491e-04,  1.1806e-04],
         [-5.6420e-04,  7.1925e-04, -1.0011e-03,  ..., -7.7189e-04,
          -2.2001e-04, -2.1738e-04],
         [-4.7751e-05,  9.5919e-04, -8.9095e-04,  ..., -4.6814e-04,
          -2.5101e-04,  5.8995e-05]],

        [[-1.4104e-04,  2.9353e-04, -6.3240e-04,  ..., -2.7492e-04,
          -4.1309e-04, -3.5581e-04],
         [-2.7132e-04,  1.1518e-04, -5.6653e-04,  ...,  2.5511e-05,
          -2.4840e-04, -4.9297e-04],
         [-4.6503e-04,  6.1976e-05, -6.6139e-04,  ...,  1.9971e-04,
          -4.1755e-04, -4.1087e-04],
         ...,
         [-5.8955e-04,  1.7054e-04, -4.6830e-04,  ...,  1.0908e-04,
           9.6190e-05,  1.0287e-04],
         [-8.5752e-04,  1.0104e-04, -1.0382e-03,  ..., -4.3856e-05,
           8.7174e-05,  9.9602e-05],
         [-8.6731e-04,  1.1122e-04, -1.0165e-03,  ..., -6.5502e-05,
           1.1019e-06,  1.0256e-04]],

        [[-9.0242e-04,  2.6327e-05, -1.2680e-03,  ..., -8.7577e-05,
          -2.3025e-04,  4.0171e-04],
         [ 3.2874e-06,  2.0537e-04, -9.6604e-04,  ..., -5.3041e-04,
          -5.3759e-04,  7.8365e-04],
         [-7.3830e-04,  1.1197e-04, -9.6759e-04,  ..., -6.3364e-04,
          -2.5641e-04,  2.0598e-04],
         ...,
         [-8.3988e-04,  7.8233e-05, -1.3316e-03,  ...,  1.4172e-04,
          -1.6396e-04,  3.7476e-04],
         [-7.0104e-04,  7.5771e-05, -8.5582e-04,  ...,  1.9275e-04,
          -3.0931e-04,  1.0274e-03],
         [-3.9602e-04,  2.1615e-04, -8.8991e-04,  ...,  2.8621e-04,
          -4.2639e-05,  2.1699e-04]],

        [[-3.8633e-04,  8.8242e-04, -7.2971e-04,  ..., -3.5149e-04,
          -6.5526e-04,  6.7709e-05],
         [-6.6884e-04,  2.9857e-05, -7.9104e-04,  ..., -5.1489e-04,
          -1.9800e-04,  1.1812e-04],
         [-8.8441e-04,  5.7623e-04, -1.2623e-03,  ..., -7.6878e-04,
          -6.8278e-04,  7.5301e-04],
         ...,
         [-8.8715e-04,  1.6121e-04, -3.1460e-04,  ...,  1.6513e-04,
          -1.0109e-03,  2.5202e-04],
         [-7.6990e-04,  7.3597e-04, -5.5484e-04,  ..., -8.5962e-05,
          -6.7432e-04,  5.4911e-04],
         [-4.8955e-04,  6.4171e-04, -1.0754e-03,  ..., -4.0688e-04,
          -7.5529e-04,  7.9267e-04]],

        [[-6.3530e-04, -5.5024e-05, -9.2940e-04,  ..., -9.7675e-05,
          -2.4954e-05,  2.8553e-04],
         [-7.2236e-04, -1.0900e-04, -5.8132e-04,  ..., -3.8381e-04,
          -1.4068e-04,  1.7511e-04],
         [-4.9120e-04, -1.8283e-04, -5.3732e-04,  ...,  9.7420e-05,
          -7.2705e-04, -6.4677e-06],
         ...,
         [-5.4674e-04,  9.1471e-04, -7.3786e-04,  ...,  1.7071e-05,
          -1.2955e-04,  8.1630e-04],
         [-6.6974e-04,  5.7556e-04, -6.2693e-04,  ...,  2.8136e-04,
          -5.5415e-04,  7.7248e-04],
         [-6.4191e-04, -8.7104e-05, -7.9045e-04,  ..., -4.0549e-04,
          -3.4961e-04,  6.6806e-05]],

        [[-4.7773e-04,  2.5184e-04, -6.1270e-04,  ..., -4.3108e-04,
           3.2971e-06,  1.1330e-04],
         [-4.6901e-04,  3.2887e-04, -5.6575e-04,  ..., -3.7748e-04,
          -6.8644e-05,  1.0291e-04],
         [-5.7998e-04, -9.6504e-05, -3.2663e-04,  ..., -4.7941e-04,
          -6.7098e-04,  5.7040e-04],
         ...,
         [-4.2574e-05,  2.4039e-04,  2.2433e-04,  ...,  6.1288e-05,
          -1.6137e-04, -5.1024e-05],
         [-8.1103e-04, -5.0062e-07, -5.2064e-05,  ...,  3.1227e-04,
          -4.0576e-04,  3.9691e-04],
         [-5.1734e-04,  1.0425e-04, -9.3257e-05,  ..., -4.7978e-04,
          -1.4455e-04, -1.2708e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] A photo of  ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-1.9532e-01, -7.1062e-01, -3.7274e-02,  ...,  1.7502e-01,
          -7.0407e-01,  1.8681e+00],
         [-1.2511e-01, -3.6662e-01, -1.0189e+00,  ..., -1.7696e-01,
          -1.4151e+00,  2.2327e+00],
         [ 8.5248e-01, -9.8369e-01,  5.5461e-01,  ..., -1.2833e+00,
          -5.2235e-01,  1.0560e+00],
         ...,
         [ 4.4546e-02, -1.1720e-01,  1.2161e-03,  ...,  1.8947e-01,
          -9.9950e-02,  1.0673e-02],
         [-2.8556e-01, -1.0762e-01,  2.4003e-01,  ...,  9.1826e-01,
          -1.7091e-01, -1.9806e-01],
         [-2.8967e-01, -8.8847e-02,  2.2952e-01,  ...,  9.3892e-01,
          -1.3933e-01, -1.6841e-01]],

        [[ 2.6838e-01, -2.9287e-01, -6.1776e-01,  ...,  7.8379e-01,
          -5.0541e-01,  1.3076e+00],
         [-5.4256e-02, -1.8028e-01, -6.1572e-03,  ...,  7.6958e-01,
          -9.1429e-01,  1.1529e+00],
         [ 2.8394e-01, -6.8883e-01, -2.9325e-01,  ..., -5.0769e-01,
          -4.4670e-01,  1.6413e+00],
         ...,
         [ 3.3035e-02, -1.6575e-01, -5.8713e-04,  ...,  1.9240e-01,
          -7.6346e-02,  3.3697e-02],
         [ 1.4115e-01, -6.5133e-02,  4.5900e-01,  ...,  8.4901e-01,
          -5.9651e-02,  6.9661e-02],
         [ 7.4945e-02, -3.9695e-02,  4.7727e-01,  ...,  8.6101e-01,
          -3.2445e-02,  5.3467e-02]],

        [[ 3.6325e-01, -3.3324e-01,  1.9236e-01,  ...,  9.6343e-01,
           5.0466e-01,  1.2043e+00],
         [ 4.9538e-02,  3.1530e-01, -1.0713e+00,  ..., -2.1004e-01,
          -7.4129e-02,  1.6967e+00],
         [ 3.4765e-01, -2.4927e-01, -4.5924e-01,  ..., -5.2921e-01,
          -5.5001e-01,  1.1793e+00],
         ...,
         [ 4.4610e-02, -1.6798e-01,  2.5968e-02,  ...,  2.1784e-01,
          -8.9372e-02,  2.8071e-02],
         [-2.2045e-01, -8.5781e-02,  5.6656e-01,  ...,  4.2833e-01,
          -3.0765e-02,  3.5206e-01],
         [-2.0623e-01, -1.0501e-01,  5.5513e-01,  ...,  4.3506e-01,
          -3.9086e-02,  3.4124e-01]],

        [[ 5.4401e-02, -4.4085e-01, -3.1376e-01,  ...,  2.3732e-01,
          -5.1508e-01,  3.7013e-01],
         [-2.7793e-01, -1.0810e-01, -9.6897e-01,  ..., -1.0020e-01,
          -1.0485e+00,  1.3777e+00],
         [ 1.4241e+00, -5.6019e-02, -7.9863e-02,  ..., -7.5436e-01,
          -6.1201e-01,  6.4081e-01],
         ...,
         [ 6.2331e-03, -1.7546e-01,  1.8153e-02,  ...,  2.2023e-01,
          -5.3829e-02,  2.5750e-02],
         [ 2.4060e-01, -3.3314e-01,  3.0125e-01,  ...,  6.6420e-01,
          -3.0714e-01,  3.8928e-01],
         [ 2.5870e-01, -3.8830e-01,  3.3783e-01,  ...,  6.4841e-01,
          -2.6826e-01,  4.3436e-01]],

        [[-4.5859e-03,  6.2780e-02, -1.0553e-01,  ...,  4.6023e-01,
          -6.2278e-01, -6.0136e-01],
         [-5.3221e-02,  2.5834e-01,  6.6827e-02,  ...,  2.6499e-01,
          -1.0507e+00,  9.0292e-01],
         [ 1.8530e-01, -5.0319e-01, -2.1427e-01,  ..., -1.9821e-01,
          -7.7649e-01, -2.8644e-01],
         ...,
         [ 9.8644e-01,  3.8622e-02, -4.1196e-01,  ...,  1.0408e+00,
          -6.5078e-01,  8.3677e-01],
         [ 1.9639e-01, -3.0241e-01, -2.6259e-01,  ...,  5.3822e-01,
          -1.6842e-01, -2.1160e-01],
         [ 1.9341e-01, -2.4708e-01, -2.1358e-01,  ...,  4.7794e-01,
          -3.7100e-02, -1.7740e-01]],

        [[ 2.4760e-01, -1.1107e+00, -2.2449e-01,  ...,  1.2032e+00,
           2.3710e-01,  9.2990e-01],
         [ 1.6852e-02, -6.3325e-01, -1.1629e+00,  ...,  7.4715e-01,
          -8.6242e-01,  1.4133e+00],
         [ 4.9197e-01, -4.4931e-01,  3.2284e-02,  ..., -3.2383e-01,
          -1.6583e+00,  6.7735e-01],
         ...,
         [ 2.7038e-02, -1.6904e-01,  1.8451e-02,  ...,  1.8561e-01,
          -5.3426e-02, -4.0643e-03],
         [-1.9590e-01, -1.2695e-01, -1.7338e-01,  ...,  8.6271e-01,
          -3.6197e-01,  4.3155e-02],
         [-2.5787e-01,  7.6373e-02, -3.6969e-02,  ...,  9.8529e-01,
          -1.9021e-01,  3.1685e-02]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] A photo of  ']
processed prompt_list:['Briefly describe this image.', 'Write a description for the photo.', 'Could you use a few words to describe what you perceive in the photo?', 'Provide a concise depiction of this image.', 'An image that shows', 'A photo of']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.1971e-03,  2.2672e-04, -1.0489e-03,  ..., -1.1431e-04,
           3.9168e-04, -7.9498e-06],
         [-1.4051e-03, -2.8264e-04, -1.4089e-03,  ...,  1.3598e-04,
           6.7644e-04,  4.4534e-04],
         [-1.0346e-03, -1.8307e-04, -9.0076e-04,  ..., -5.8042e-04,
           9.9853e-04,  2.2697e-04],
         ...,
         [ 5.5829e-04, -1.0582e-03,  1.1439e-03,  ..., -2.8503e-04,
           9.2528e-06, -7.6965e-04],
         [-4.2334e-04,  7.6229e-04, -4.9113e-04,  ...,  5.2526e-04,
           2.2980e-04, -7.2946e-05],
         [-4.0817e-04,  7.8506e-04, -4.7881e-04,  ...,  5.5324e-04,
           2.2435e-04, -4.9896e-05]],

        [[-1.0546e-03, -3.7223e-04, -1.5278e-03,  ...,  9.3234e-05,
          -3.1295e-05,  3.9688e-04],
         [-1.2144e-03, -4.1956e-04, -1.2599e-03,  ..., -3.4739e-04,
           1.0542e-04,  6.4602e-04],
         [-1.0985e-03, -4.4714e-04, -8.7437e-04,  ..., -6.6395e-04,
           4.7060e-04,  3.2522e-05],
         ...,
         [ 5.4744e-04, -1.0384e-03,  1.1363e-03,  ..., -2.8548e-04,
          -1.3940e-05, -7.9623e-04],
         [-7.3623e-04,  8.2524e-04, -7.0214e-04,  ...,  3.4208e-04,
           3.4752e-04,  4.6802e-04],
         [-7.2519e-04,  7.9572e-04, -6.7643e-04,  ...,  3.5407e-04,
           3.4366e-04,  4.5727e-04]],

        [[-5.2458e-04,  2.3437e-04, -7.4272e-04,  ..., -6.7685e-04,
           6.0113e-05, -1.7208e-04],
         [-1.2150e-03, -1.4733e-04, -1.1480e-03,  ..., -3.6635e-04,
           4.6840e-04,  4.2920e-04],
         [-6.2809e-04, -5.8051e-04, -4.3134e-04,  ..., -5.8860e-04,
           9.7544e-04,  8.8682e-05],
         ...,
         [ 5.5981e-04, -1.0420e-03,  1.1452e-03,  ..., -2.8914e-04,
           1.6162e-05, -7.7484e-04],
         [-5.8124e-04,  5.9500e-04, -9.8502e-04,  ...,  4.3249e-04,
           2.2241e-04,  1.9620e-04],
         [-5.6127e-04,  5.9400e-04, -9.7451e-04,  ...,  4.5452e-04,
           2.1575e-04,  1.7970e-04]],

        [[-1.0207e-03, -2.8325e-04, -7.4534e-04,  ..., -1.4359e-05,
           8.7401e-05,  1.7444e-04],
         [-1.2258e-03, -2.5047e-04, -1.1205e-03,  ...,  3.3087e-04,
           4.1128e-04,  5.6307e-04],
         [-8.7996e-04, -5.6799e-04, -7.2540e-04,  ..., -7.7233e-04,
           6.2346e-04,  1.3097e-04],
         ...,
         [ 5.6539e-04, -1.0573e-03,  1.1298e-03,  ..., -2.8646e-04,
           2.0063e-06, -7.8383e-04],
         [-8.0733e-04,  8.3346e-04, -6.9661e-04,  ...,  1.7819e-04,
           3.5425e-04,  1.0252e-04],
         [-7.7162e-04,  8.5334e-04, -6.9607e-04,  ...,  2.3828e-04,
           3.3212e-04,  9.4492e-05]],

        [[-7.8733e-04,  6.9795e-04, -9.7751e-04,  ...,  5.6483e-04,
           2.0016e-04,  8.3143e-05],
         [-9.4108e-04, -3.0615e-04, -7.0140e-04,  ..., -1.1978e-04,
           6.1992e-04,  7.1426e-04],
         [ 2.7113e-05,  9.3018e-04, -2.8674e-04,  ...,  5.1295e-06,
           3.0128e-05,  5.0854e-04],
         ...,
         [-8.7665e-04,  4.6019e-04, -3.5394e-04,  ...,  5.2711e-05,
           2.0431e-04,  2.5791e-04],
         [-2.1216e-04,  2.0932e-04, -9.9828e-04,  ...,  3.4239e-04,
           7.2834e-04, -5.9373e-05],
         [-1.2421e-04,  1.0622e-04, -9.5866e-04,  ...,  3.3747e-04,
           7.9952e-04, -6.0449e-05]],

        [[-7.2513e-04,  5.1312e-04, -1.0672e-03,  ..., -3.0325e-04,
           1.2661e-04,  1.1804e-04],
         [-1.1416e-03,  1.2318e-04, -1.0740e-03,  ...,  8.6643e-05,
           5.8413e-04,  6.4411e-04],
         [-6.0904e-04,  4.4169e-04, -5.8479e-04,  ..., -6.0666e-04,
           1.0136e-03, -1.5229e-05],
         ...,
         [ 5.6538e-04, -1.0473e-03,  1.1261e-03,  ..., -2.7379e-04,
           1.8782e-05, -7.4494e-04],
         [-5.6109e-04,  6.2696e-04, -8.2410e-04,  ...,  2.6230e-04,
           3.8243e-04,  2.2546e-04],
         [-5.5685e-04,  6.6907e-04, -8.1728e-04,  ...,  2.9358e-04,
           3.1844e-04,  2.3439e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.5977, -1.4594, -0.3082,  ...,  0.5332, -0.1075,  0.3946],
         [-0.0875,  0.0782, -0.2787,  ...,  0.3863, -0.2132, -0.1902],
         [ 0.3386, -0.2624, -0.7793,  ..., -0.5343, -0.5669,  0.7697],
         ...,
         [ 0.0452, -0.1792,  0.0217,  ...,  0.2130, -0.0700,  0.0242],
         [-0.0492, -0.3416, -0.0473,  ...,  0.1801, -0.2824,  0.0258],
         [-0.0456, -0.3251, -0.0259,  ...,  0.2103, -0.3054,  0.0212]],

        [[ 0.4124, -0.1900, -0.0225,  ...,  1.3105,  0.2514, -0.4832],
         [ 1.2956,  0.9771,  0.0629,  ...,  1.8601, -0.3435, -0.2825],
         [ 0.4431,  0.7756,  0.3608,  ...,  1.2979, -0.6961,  0.0067],
         ...,
         [ 0.0200, -0.1274, -0.0053,  ...,  0.2027, -0.0755,  0.0363],
         [-0.0173, -0.0268, -0.2192,  ...,  1.1274, -0.1267, -0.4742],
         [-0.0568, -0.0756, -0.2014,  ...,  1.0569, -0.2032, -0.4214]],

        [[ 0.1010, -1.2060, -0.5428,  ...,  0.2091, -0.9311,  1.1404],
         [ 0.0922,  0.6371,  0.6039,  ...,  0.7350, -0.8028,  0.3887],
         [ 0.7481, -0.1971,  0.1204,  ..., -0.5454, -0.9267,  0.7114],
         ...,
         [ 0.0678, -0.2012,  0.0162,  ...,  0.1889, -0.0627,  0.0607],
         [ 0.1807, -0.1035,  0.4936,  ...,  0.7721, -0.3780, -0.0621],
         [ 0.1856, -0.1011,  0.4743,  ...,  0.7623, -0.3349, -0.0613]],

        [[ 0.2816,  0.4800,  0.3543,  ...,  0.8427,  0.3334, -0.5637],
         [ 0.3958, -0.3700,  0.6643,  ...,  0.6238,  0.2334, -0.1036],
         [ 0.2199,  0.3497,  0.0525,  ..., -0.1555,  0.2402,  0.7533],
         ...,
         [ 0.4422,  0.0831,  0.5634,  ...,  0.3862,  0.2907,  0.6834],
         [-0.3176,  0.0678, -0.2156,  ...,  0.9498,  0.5119,  0.7943],
         [-0.2396, -0.0840,  0.1671,  ...,  0.2257,  0.2645,  0.1847]],

        [[ 0.1831, -0.2247, -0.0132,  ..., -0.6442, -0.5755,  1.9534],
         [ 0.4287, -0.3147, -0.6471,  ..., -0.6002, -0.6300,  1.7912],
         [ 0.6641,  0.3240, -0.7900,  ..., -0.7055,  1.3778,  0.2185],
         ...,
         [ 0.0441, -0.1816,  0.0176,  ...,  0.2489, -0.0588, -0.0136],
         [-0.3529,  0.2578, -0.0043,  ...,  0.2056,  0.3223, -0.0022],
         [-0.3576,  0.2752, -0.0325,  ...,  0.2649,  0.3988, -0.0379]],

        [[ 0.2113, -0.7793,  0.2155,  ...,  0.7392,  0.1148,  0.3946],
         [ 0.7545, -0.8159,  0.2465,  ...,  0.9643,  0.5122,  0.4886],
         [-0.1940,  0.9743,  0.4028,  ...,  1.4550, -1.7362, -0.1116],
         ...,
         [ 0.5818, -1.0670,  0.4552,  ...,  0.8062, -0.4171,  0.2249],
         [-0.3662, -0.3220,  0.6003,  ...,  0.6209, -0.2744, -0.1697],
         [ 0.4971, -0.6287, -0.2047,  ...,  0.4440, -0.4519,  0.0902]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ']
processed prompt_list:['Use a few words to illustrate what is happening in the picture.', 'Briefly describe this image.', 'A short image description:', 'Briefly describe this image.', 'Can you briefly explain what you see in the image?', 'Provide a concise depiction of this image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.4249e-04,  1.4563e-04, -7.9051e-04,  ..., -3.0364e-04,
          -1.5586e-04, -5.4541e-04],
         [-7.9633e-04,  2.4802e-04, -7.7210e-04,  ...,  2.2415e-04,
           1.8257e-04,  3.8249e-04],
         [-7.7641e-04, -1.9303e-04, -8.9391e-04,  ..., -3.1232e-04,
           4.9191e-04, -1.9077e-04],
         ...,
         [ 5.7387e-04, -1.0537e-03,  1.1382e-03,  ..., -2.8955e-04,
           8.5733e-06, -7.9334e-04],
         [-6.2822e-04,  8.6462e-04, -6.5522e-04,  ...,  4.2118e-04,
           1.6546e-04,  1.5646e-04],
         [-5.9873e-04,  8.8293e-04, -6.4799e-04,  ...,  4.1660e-04,
           1.7348e-04,  1.4175e-04]],

        [[ 6.0346e-05,  8.6875e-04, -2.3125e-04,  ..., -4.6703e-04,
           2.5941e-05,  4.5130e-04],
         [-8.6446e-04,  3.3866e-04, -2.8546e-04,  ..., -1.0032e-03,
           1.4831e-04,  8.6731e-04],
         [-1.0942e-03,  4.5852e-04, -1.1171e-04,  ..., -1.1018e-03,
          -2.4283e-04,  3.6281e-04],
         ...,
         [ 5.6303e-04, -1.0479e-03,  1.1449e-03,  ..., -2.8199e-04,
           1.9126e-05, -7.7364e-04],
         [-5.0988e-04,  4.3938e-04, -7.1165e-04,  ...,  2.2254e-04,
           1.0623e-04, -2.0177e-05],
         [-5.4241e-04,  5.1774e-04, -6.7956e-04,  ...,  2.7429e-04,
           1.3216e-04,  1.7010e-05]],

        [[-7.5242e-04,  5.2323e-04, -6.7170e-04,  ...,  8.4923e-05,
           6.3662e-05,  3.8726e-04],
         [-6.2297e-04,  8.2332e-04, -1.3719e-03,  ..., -5.6854e-05,
           3.7541e-04,  8.9558e-05],
         [-4.6350e-04, -5.7998e-05, -4.5037e-04,  ..., -7.5030e-04,
           4.7401e-04,  8.1012e-05],
         ...,
         [ 6.0515e-04, -1.0492e-03,  1.1114e-03,  ..., -2.8162e-04,
           2.2149e-05, -7.7281e-04],
         [-2.4450e-04,  2.6966e-04, -1.1404e-03,  ...,  1.9465e-05,
           7.9616e-04, -1.5940e-04],
         [-2.1852e-04,  2.3727e-04, -1.1243e-03,  ...,  2.9986e-05,
           8.0571e-04, -1.5905e-04]],

        [[-1.2968e-03,  2.3768e-05, -1.3930e-04,  ..., -7.5103e-04,
          -3.3780e-04,  1.7093e-04],
         [-1.1236e-03, -7.3986e-06, -6.3646e-04,  ..., -5.7712e-04,
          -4.8213e-04,  5.7813e-05],
         [-4.8632e-04,  3.0816e-04, -6.6566e-04,  ..., -1.8824e-04,
          -8.7869e-04, -4.2434e-05],
         ...,
         [-1.1025e-03,  2.9638e-04, -7.2735e-04,  ..., -4.9253e-04,
          -5.8083e-04,  2.7466e-04],
         [-1.0996e-03, -2.9089e-04, -1.0099e-03,  ..., -4.5841e-04,
           1.3530e-04,  7.3307e-04],
         [-6.8576e-04,  9.5580e-04, -1.0526e-03,  ...,  5.6759e-04,
          -1.4083e-04,  1.0897e-04]],

        [[-1.2789e-03, -1.2468e-04, -8.2200e-04,  ..., -2.7337e-04,
           6.7177e-04,  3.1449e-04],
         [-1.3315e-03, -1.8868e-04, -8.6751e-04,  ..., -1.9368e-04,
           8.0374e-04,  4.3756e-04],
         [-1.1795e-04,  6.4053e-04, -5.1118e-04,  ..., -5.4841e-04,
           1.1491e-04,  3.2169e-04],
         ...,
         [ 5.8564e-04, -1.0616e-03,  1.1278e-03,  ..., -2.7722e-04,
           1.1388e-05, -7.8085e-04],
         [-6.5604e-04,  7.3264e-04, -5.5757e-04,  ...,  5.9735e-05,
           1.5081e-04,  4.9524e-04],
         [-6.6142e-04,  7.2756e-04, -5.6482e-04,  ...,  1.0367e-04,
           1.5465e-04,  4.9535e-04]],

        [[-3.8882e-04,  9.1711e-05, -1.4674e-03,  ..., -1.5034e-04,
          -1.7721e-04,  3.1836e-04],
         [-6.8232e-04, -2.9378e-04, -1.4161e-03,  ..., -1.0999e-04,
           2.4736e-04,  5.3900e-04],
         [-4.9562e-05,  2.4885e-04, -3.2753e-04,  ..., -2.7160e-04,
           2.8307e-05,  9.3259e-05],
         ...,
         [-8.2029e-04, -2.6494e-04, -1.0817e-03,  ..., -4.8727e-04,
           9.2539e-05,  4.8656e-04],
         [-2.3967e-04,  1.1146e-03, -5.9964e-04,  ...,  1.8724e-05,
           4.4676e-04,  2.9530e-04],
         [-5.5288e-04, -4.2648e-05, -1.1688e-03,  ..., -2.3690e-04,
          -2.3056e-04,  3.5337e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.3170e-01, -1.4664e+00, -5.5352e-02,  ...,  1.0559e+00,
           5.1316e-01,  1.3123e+00],
         [-8.7294e-01, -6.8607e-01, -2.2383e-01,  ...,  9.5694e-01,
          -1.3450e+00,  1.5306e+00],
         [ 4.4436e-01,  8.6258e-01, -1.7992e+00,  ...,  2.0380e-01,
          -1.4717e+00,  1.4763e+00],
         ...,
         [ 4.0439e-02, -1.4542e-01,  2.4831e-02,  ...,  2.4750e-01,
          -7.4322e-02, -1.8778e-03],
         [-2.0702e-01,  1.2479e-01,  2.3125e-01,  ...,  1.2288e+00,
          -2.1709e-01,  1.6181e-01],
         [-2.0598e-01,  1.3121e-01,  2.1058e-01,  ...,  1.2326e+00,
          -1.9733e-01,  1.2667e-01]],

        [[ 5.0937e-01, -1.0928e+00,  2.1149e-01,  ...,  8.5221e-01,
           3.5603e-01,  8.1451e-01],
         [ 2.5504e-02, -3.1321e-01,  8.0099e-01,  ...,  5.6553e-01,
           1.7339e-01, -4.4109e-01],
         [ 5.5054e-01,  5.3352e-01, -6.0620e-01,  ...,  7.9947e-01,
           4.3739e-01,  1.0317e+00],
         ...,
         [ 4.9430e-02, -1.3561e-01, -7.7124e-03,  ...,  2.1381e-01,
          -6.0402e-02,  7.7871e-03],
         [ 1.4751e-01, -3.1948e-02,  4.9654e-01,  ...,  3.1635e-01,
           5.1428e-02, -4.4983e-01],
         [ 1.5006e-01, -3.1735e-02,  4.8608e-01,  ...,  3.1163e-01,
           7.5869e-02, -4.4552e-01]],

        [[-6.8074e-01, -2.4949e-01,  4.0821e-01,  ...,  1.2676e+00,
          -8.9177e-01, -5.2344e-02],
         [-6.2052e-01, -1.0657e-01,  4.1011e-01,  ...,  1.1456e+00,
          -8.0557e-01, -4.2170e-03],
         [ 1.4987e+00,  1.0099e+00, -2.1340e+00,  ...,  2.1637e-01,
          -1.5910e+00,  2.0456e+00],
         ...,
         [ 8.3845e-03, -1.5759e-01,  4.6235e-02,  ...,  1.9389e-01,
          -5.0063e-02,  3.0979e-02],
         [ 5.2622e-02, -7.6908e-01, -6.1245e-01,  ...,  4.1396e-01,
          -5.7667e-01,  3.3843e-01],
         [ 1.4927e-01, -7.5654e-01, -5.9257e-01,  ...,  4.7236e-01,
          -4.6398e-01,  2.9577e-01]],

        [[-7.7790e-02,  5.3535e-01, -5.8312e-02,  ...,  1.2918e-01,
          -4.1963e-01,  1.4967e-01],
         [-3.5708e-01,  5.0801e-01, -1.2174e-01,  ...,  8.0140e-01,
          -5.3900e-01,  1.0018e+00],
         [ 1.9858e-01,  2.1141e-01,  7.5026e-02,  ...,  3.4375e-01,
          -1.2791e+00,  8.1940e-01],
         ...,
         [ 4.5296e-01,  1.6969e-01, -2.5640e-01,  ...,  3.2651e-01,
          -9.2487e-01, -4.2046e-02],
         [-1.0501e-01,  8.7861e-01, -7.2178e-03,  ...,  9.8837e-01,
          -6.9038e-01,  1.3577e+00],
         [-1.1714e-01, -2.2607e-01, -3.5923e-01,  ...,  7.1483e-01,
          -6.6113e-01,  2.2382e-01]],

        [[ 4.5080e-01, -1.4906e+00,  5.6051e-01,  ...,  5.1835e-01,
          -2.1051e-01,  9.1740e-01],
         [-2.3841e-01,  6.8735e-02,  4.7884e-01,  ...,  9.5794e-01,
          -3.8255e-01,  1.6702e-01],
         [ 1.0567e+00, -3.9527e-02, -8.0708e-01,  ..., -2.5884e-01,
          -8.6972e-01,  1.6428e+00],
         ...,
         [ 2.8059e-02, -1.2253e-01,  4.6248e-02,  ...,  2.5527e-01,
          -5.2029e-02,  1.7335e-02],
         [-2.2252e-02, -4.8141e-02,  9.5949e-02,  ...,  2.2917e-01,
          -1.7538e-01, -1.4933e-01],
         [-2.9915e-02, -5.7196e-02,  1.2621e-01,  ...,  2.8436e-01,
          -1.8274e-01, -1.5626e-01]],

        [[ 7.8884e-02, -1.2162e+00,  4.6064e-02,  ...,  1.1440e+00,
           5.7775e-02,  1.1901e+00],
         [-2.3987e-01,  7.0742e-02, -1.5378e-01,  ...,  3.7107e-01,
           7.7096e-02,  9.5172e-02],
         [ 4.8446e-01,  5.2760e-01, -1.1546e+00,  ...,  5.7908e-02,
          -1.2703e+00,  1.7614e+00],
         ...,
         [ 4.3560e-02, -1.5324e-01,  9.7408e-03,  ...,  2.5200e-01,
          -6.0335e-02,  3.4779e-03],
         [ 9.1752e-03, -6.2855e-01,  1.3628e-01,  ...,  8.0366e-01,
          -2.4796e-01, -1.7509e-01],
         [-5.5152e-03, -5.9374e-01,  1.8777e-01,  ...,  8.2017e-01,
          -2.0485e-01, -2.0177e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ']
processed prompt_list:['Briefly describe the content of the image.', 'Write a description for the photo.', 'Use a few words to illustrate what is happening in the picture.', 'Can you briefly explain what you see in the image?', 'Briefly describe the content of the image.', 'Summarize this image in a few words.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-5.3644e-04, -2.7035e-04, -9.6768e-04,  ..., -4.5540e-04,
          -3.7579e-04, -4.9853e-04],
         [-8.8145e-04,  2.3616e-04, -3.9986e-04,  ..., -8.6957e-04,
           7.6563e-05,  2.1858e-04],
         [-8.6248e-04, -1.5871e-04, -9.8175e-04,  ..., -5.1588e-05,
           3.6424e-04,  1.7048e-04],
         ...,
         [ 5.4496e-04, -1.0410e-03,  1.1313e-03,  ..., -2.8635e-04,
           6.0465e-06, -7.8711e-04],
         [-7.0973e-04,  6.1396e-04, -6.4146e-04,  ...,  8.2079e-05,
           3.6713e-05,  2.4582e-04],
         [-6.7915e-04,  6.0379e-04, -6.2228e-04,  ...,  1.2109e-04,
           3.9129e-05,  2.1789e-04]],

        [[-3.5773e-04, -2.0876e-06, -8.1458e-04,  ..., -7.7723e-04,
          -2.4315e-04, -1.1403e-04],
         [-9.3035e-04,  7.7759e-04, -1.1726e-03,  ..., -1.3586e-04,
           4.9016e-04,  3.5382e-04],
         [-7.0068e-04,  4.8498e-04, -9.9386e-04,  ..., -2.6497e-04,
          -2.6114e-04, -1.4085e-04],
         ...,
         [ 5.8618e-04, -1.0734e-03,  1.1309e-03,  ..., -2.6694e-04,
           1.7567e-05, -7.6618e-04],
         [-4.3271e-04, -3.0844e-05, -1.0915e-03,  ...,  3.4365e-04,
           8.9535e-04,  1.3027e-04],
         [-3.9874e-04, -5.0823e-05, -1.0744e-03,  ...,  3.4650e-04,
           9.0388e-04,  1.2266e-04]],

        [[-6.3942e-04,  3.2823e-04, -7.3035e-04,  ...,  2.6358e-04,
           5.9300e-04,  1.5962e-04],
         [-7.6587e-04,  2.6926e-04, -6.6877e-04,  ...,  2.9650e-04,
           5.3237e-04,  1.4162e-04],
         [-7.1272e-04,  8.4921e-05, -7.7084e-04,  ...,  1.8735e-04,
           5.6789e-04,  3.1801e-04],
         ...,
         [ 5.6422e-04, -1.0621e-03,  1.1569e-03,  ..., -2.9657e-04,
           1.3631e-05, -7.9560e-04],
         [-8.4957e-04,  8.9983e-04, -9.3159e-04,  ...,  1.6522e-04,
           4.3190e-04,  3.4514e-04],
         [-8.2086e-04,  8.9243e-04, -8.8911e-04,  ...,  2.2559e-04,
           4.4100e-04,  2.7939e-04]],

        [[-5.8377e-04,  6.8225e-04, -4.3509e-04,  ..., -1.0425e-04,
           1.1222e-04,  2.5454e-04],
         [-5.8675e-04,  1.1228e-06, -3.0764e-04,  ..., -4.7692e-04,
          -3.7849e-04, -2.4797e-04],
         [-5.0740e-04,  4.1087e-05, -2.6391e-04,  ..., -6.8113e-04,
          -8.1166e-04,  1.3955e-04],
         ...,
         [-5.8853e-04,  6.4109e-05, -9.6541e-04,  ..., -9.1135e-06,
          -1.6215e-03,  4.6714e-04],
         [-6.3446e-04, -1.2753e-04, -3.0347e-04,  ..., -5.1345e-04,
          -2.8117e-04, -2.0322e-04],
         [-5.6499e-04,  5.3279e-04, -4.3689e-04,  ...,  6.1993e-04,
          -1.2011e-04,  3.1328e-04]],

        [[-2.4112e-04, -4.1688e-04, -7.1730e-04,  ..., -5.3382e-04,
          -5.4522e-04, -6.1177e-04],
         [-1.2927e-03,  2.8666e-04, -9.9868e-04,  ...,  3.0847e-04,
           1.6965e-04, -3.2809e-05],
         [-6.3274e-04, -3.9399e-04, -5.7075e-04,  ..., -5.0449e-04,
           3.6677e-04, -7.6312e-05],
         ...,
         [ 5.5086e-04, -1.0405e-03,  1.1498e-03,  ..., -3.0229e-04,
          -1.0890e-05, -7.9213e-04],
         [-7.1000e-04,  9.1760e-04, -7.5123e-04,  ...,  4.5287e-04,
           2.6447e-04,  7.3168e-05],
         [-6.6499e-04,  9.5697e-04, -7.4557e-04,  ...,  4.6213e-04,
           2.6851e-04,  7.2519e-05]],

        [[-6.0330e-04, -2.9190e-04, -5.3484e-04,  ..., -3.1235e-04,
           2.6480e-04, -5.7240e-04],
         [-9.2522e-04,  2.4617e-04, -6.9926e-04,  ...,  3.2442e-04,
           4.0814e-04,  3.6533e-04],
         [-8.2735e-04, -3.8140e-04, -6.8638e-04,  ..., -2.6297e-04,
           6.1660e-04, -1.3979e-04],
         ...,
         [ 5.7297e-04, -1.0524e-03,  1.1497e-03,  ..., -2.8531e-04,
           6.6684e-06, -7.8506e-04],
         [-6.3777e-04,  8.6839e-04, -8.6886e-04,  ..., -1.1834e-04,
           3.2007e-04,  2.9018e-04],
         [-5.8812e-04,  8.8455e-04, -8.6273e-04,  ..., -6.9483e-05,
           3.1754e-04,  2.6062e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-1.1796e-01, -8.3769e-01, -3.9830e-01,  ..., -4.3123e-02,
          -1.0314e+00,  1.4448e+00],
         [ 1.4573e-01,  7.8494e-01,  3.4373e-01,  ...,  5.7644e-01,
          -1.0978e+00,  1.0378e+00],
         [-4.3501e-01,  1.7104e+00, -5.3840e-01,  ...,  1.4258e+00,
          -2.9445e-02,  2.8103e-01],
         ...,
         [ 1.0276e-01, -8.1958e-01, -4.7759e-01,  ...,  7.6855e-02,
          -7.6268e-01,  1.3467e+00],
         [ 4.9791e-01,  1.3790e+00, -1.1414e-02,  ...,  1.1142e+00,
          -2.7855e-01, -5.8714e-01],
         [ 1.0259e-01,  3.1486e-01, -2.4253e-01,  ...,  2.7243e-01,
          -1.0448e+00,  1.4310e+00]],

        [[ 6.1535e-01, -8.8902e-01, -1.3024e+00,  ..., -2.9028e-01,
          -8.9478e-01,  1.4658e+00],
         [ 6.1155e-01, -2.8052e-01, -3.7673e-01,  ..., -2.0478e-01,
          -6.5621e-01, -3.4593e-03],
         [-4.8314e-01,  4.1393e-01,  1.0474e+00,  ...,  7.0901e-01,
           1.6585e-01,  2.1499e-02],
         ...,
         [-1.0541e+00, -9.2406e-01,  1.1596e+00,  ...,  6.1327e-01,
          -1.0195e+00, -5.5235e-01],
         [ 5.1015e-01, -6.8314e-01, -1.0461e+00,  ..., -3.2050e-01,
          -7.5267e-01,  9.3751e-01],
         [ 6.6198e-01, -8.0655e-01, -1.3504e+00,  ..., -3.7124e-01,
          -8.3180e-01,  1.3411e+00]],

        [[ 8.2928e-01,  2.3081e-01, -1.5815e-01,  ..., -9.2595e-02,
           3.6079e-01, -2.5323e-01],
         [ 6.2622e-01,  1.7331e-01, -1.6346e-01,  ...,  7.1909e-02,
           4.8217e-02,  5.3974e-02],
         [ 8.7236e-01, -1.8367e-01,  3.8745e-01,  ...,  6.2179e-01,
           1.1578e-02,  2.4293e-01],
         ...,
         [-4.8807e-03,  1.7226e-01, -8.1364e-01,  ..., -1.6384e-01,
          -3.8407e-01, -4.8412e-01],
         [-3.9204e-01, -2.4854e-01, -1.0902e+00,  ..., -3.6992e-01,
          -4.0613e-02, -7.1649e-01],
         [ 2.4052e-02,  6.8012e-01,  2.9997e-01,  ..., -5.2865e-01,
          -1.0207e-01,  3.4930e-01]],

        [[-2.4431e-01,  8.4543e-01,  1.1583e+00,  ...,  9.7940e-01,
           1.9055e-01,  6.6641e-01],
         [ 4.9273e-01,  4.8129e-01,  3.5511e-02,  ...,  8.2334e-01,
          -5.2921e-03,  6.2191e-01],
         [ 8.0153e-02,  7.8380e-01,  2.9383e-01,  ..., -1.0690e+00,
           1.4536e+00,  1.5806e-01],
         ...,
         [ 3.7904e-02, -1.4858e-01,  1.0347e-02,  ...,  1.9852e-01,
          -8.6074e-02,  2.7359e-02],
         [-2.2575e-02, -1.6582e-01,  2.4403e-02,  ...,  7.0158e-01,
          -4.3515e-02, -5.3998e-01],
         [ 2.9009e-02, -2.4953e-01,  2.6465e-01,  ...,  7.0791e-01,
          -2.5133e-01, -5.1454e-01]],

        [[-4.2784e-01, -1.3144e-01,  5.0149e-01,  ...,  1.2780e-01,
          -1.3860e+00, -1.3044e-01],
         [-1.3606e-02,  6.1025e-01, -3.2409e-02,  ...,  1.4468e-01,
          -5.3118e-01, -1.4262e-02],
         [-9.0953e-01, -2.0609e-01,  7.8568e-01,  ...,  3.9480e-01,
          -1.2772e+00, -5.5883e-01],
         ...,
         [-1.4829e+00, -4.1980e-01,  4.8979e-01,  ..., -5.6767e-01,
          -1.2151e+00, -4.5049e-01],
         [-1.8036e-01,  5.4647e-01,  3.9288e-02,  ...,  2.8516e-01,
          -6.2764e-01, -1.8436e-01],
         [-6.6411e-01,  4.3226e-01,  1.0775e+00,  ..., -4.1335e-01,
          -9.4852e-01, -3.8135e-01]],

        [[ 4.4626e-01, -1.4841e-03,  4.8088e-01,  ...,  3.2634e-01,
          -4.1720e-01,  5.6261e-01],
         [-2.2058e-01,  5.8766e-01, -5.1906e-01,  ...,  5.0214e-01,
          -2.2029e-01, -3.6525e-01],
         [ 7.0202e-01, -1.9113e-03, -5.2081e-02,  ..., -6.9012e-02,
          -6.9092e-01,  8.5486e-01],
         ...,
         [-2.4244e-01,  5.3800e-01, -5.3723e-01,  ...,  5.6373e-01,
          -2.4028e-01, -4.2433e-01],
         [-3.5277e-01, -1.6574e-01,  7.3053e-01,  ...,  7.6603e-01,
          -1.3211e-01,  3.5143e-01],
         [-3.5853e-01, -1.4585e-01,  7.1551e-01,  ...,  7.6358e-01,
          -1.3421e-01,  3.5572e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Present a short description of this image. ']
processed prompt_list:['Using language, provide a short account of the image.', 'Present a short description of this image.', 'Provide a description of what is presented in the photo.', 'Provide a concise depiction of this image.', 'A short image caption:', 'Present a short description of this image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-5.5224e-04,  3.6720e-04, -6.4046e-04,  ...,  8.3813e-05,
          -3.0473e-04,  3.1999e-04],
         [-7.5271e-04,  6.5695e-04, -5.3643e-04,  ..., -2.1486e-04,
          -1.4567e-05,  6.1694e-04],
         [-8.5784e-04,  3.5891e-04, -7.9454e-04,  ..., -4.9677e-04,
          -6.4206e-04,  6.5117e-04],
         ...,
         [-5.1722e-04,  3.5005e-04, -8.0107e-04,  ...,  5.9711e-05,
          -1.2335e-04,  3.1314e-04],
         [-2.5302e-04,  6.2082e-04, -9.6609e-04,  ..., -1.9338e-04,
          -3.7206e-04,  6.4927e-04],
         [-5.7556e-04,  7.0294e-04,  3.1814e-05,  ..., -5.2661e-04,
          -1.8156e-04,  3.5765e-04]],

        [[-2.8260e-04, -1.4474e-04, -1.1768e-03,  ...,  7.1254e-04,
           3.3756e-04,  1.0101e-03],
         [-2.9528e-04, -7.3819e-05, -9.5525e-04,  ...,  5.6999e-05,
          -3.3189e-04,  4.8975e-04],
         [-1.2008e-03, -5.7855e-04, -4.1359e-04,  ..., -4.1549e-04,
          -1.9753e-04, -1.2384e-04],
         ...,
         [-1.1167e-03, -1.3768e-04, -7.9013e-04,  ..., -6.8827e-04,
          -7.2492e-04,  1.9301e-04],
         [-3.2428e-04, -1.7351e-04, -9.0107e-04,  ...,  3.7781e-04,
          -1.8861e-05,  6.9072e-04],
         [-2.9443e-04, -1.3727e-04, -1.0367e-03,  ...,  6.3241e-04,
           2.3467e-04,  8.9749e-04]],

        [[-8.6479e-04,  7.4037e-04, -2.2955e-04,  ..., -8.8720e-04,
          -7.2463e-04,  6.5694e-04],
         [-9.3100e-04,  6.8016e-04, -2.1585e-04,  ..., -9.4813e-04,
          -6.1210e-04,  5.1643e-04],
         [-7.1634e-04, -4.3137e-04,  8.6452e-05,  ..., -7.2442e-04,
           2.4747e-05,  3.6601e-04],
         ...,
         [-7.0629e-04,  3.6880e-04, -7.1483e-04,  ..., -3.1425e-04,
           1.6056e-04,  3.3986e-04],
         [-7.0957e-04,  4.8890e-04, -1.0824e-03,  ..., -4.8926e-05,
           4.0092e-04,  3.4313e-04],
         [-8.5168e-04,  3.6664e-04, -2.1710e-04,  ..., -1.0235e-03,
          -5.3707e-04,  1.0003e-05]],

        [[-1.0641e-03, -2.3758e-04, -8.6230e-04,  ..., -6.6243e-04,
           2.4841e-04,  4.7326e-04],
         [-1.3880e-03, -3.7866e-04, -1.1243e-03,  ..., -5.2740e-04,
           8.1443e-04,  4.5363e-04],
         [-5.3912e-04,  6.5638e-04, -6.9499e-04,  ..., -6.3350e-04,
           1.5694e-04,  9.8004e-04],
         ...,
         [ 5.7324e-04, -1.0578e-03,  1.1351e-03,  ..., -2.7553e-04,
          -1.5601e-06, -7.7328e-04],
         [-6.5047e-04,  5.8831e-04, -7.6433e-04,  ...,  7.9885e-05,
           4.0968e-04,  1.0183e-04],
         [-4.5312e-04,  6.1744e-04, -7.9243e-04,  ...,  1.7712e-04,
           3.2840e-04,  7.6054e-05]],

        [[-7.9788e-04,  3.6916e-05, -1.3351e-03,  ..., -1.4372e-03,
           9.4017e-04,  7.2530e-04],
         [-8.2217e-04,  5.0019e-05, -1.3934e-03,  ..., -8.0363e-04,
           1.0056e-03,  4.3817e-04],
         [-1.0573e-03,  5.4212e-05, -1.0411e-03,  ..., -1.2104e-03,
           5.8990e-04,  4.9183e-04],
         ...,
         [-8.2806e-04,  2.9796e-04, -7.4238e-04,  ..., -1.3182e-03,
           5.1789e-04,  2.4746e-04],
         [-7.7550e-04,  1.7971e-04, -1.3987e-03,  ..., -6.7886e-04,
           1.0121e-03,  4.2012e-04],
         [-5.5021e-04,  6.2806e-04, -9.2944e-04,  ..., -1.1195e-03,
           2.3773e-04,  3.7779e-04]],

        [[-7.2460e-04,  2.8139e-04, -9.4179e-04,  ..., -2.6683e-04,
          -5.5551e-05,  5.5419e-04],
         [-7.1739e-04,  4.5863e-04, -1.1926e-03,  ...,  2.6659e-04,
           1.2843e-04,  1.8706e-04],
         [-9.7023e-04,  2.1033e-04, -7.1287e-04,  ..., -5.4623e-04,
           6.3886e-04,  5.0708e-04],
         ...,
         [-7.5493e-04,  4.2780e-04, -1.1690e-03,  ...,  2.7372e-04,
           9.7750e-05,  1.3164e-04],
         [-8.0532e-04,  8.9722e-04, -6.9778e-04,  ...,  3.4913e-04,
           3.1692e-04,  4.7893e-04],
         [-7.9288e-04,  9.0750e-04, -6.9152e-04,  ...,  3.6163e-04,
           3.1781e-04,  4.7412e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.8093, -0.9227, -0.5628,  ...,  0.3355,  0.4436,  1.0888],
         [ 0.3100, -0.0550, -1.0759,  ..., -0.2008, -0.3401,  1.1331],
         [ 0.8319, -0.0599, -0.9043,  ..., -0.4911, -0.0240,  1.2368],
         ...,
         [ 0.0613, -0.1378, -0.0098,  ...,  0.2365, -0.0583,  0.0236],
         [-0.0192, -0.3622,  0.4445,  ..., -0.3922,  0.0962,  0.5165],
         [-0.0293, -0.3894,  0.4636,  ..., -0.3521,  0.1197,  0.5129]],

        [[ 0.0897, -0.7837,  0.2983,  ...,  0.5832, -0.0066,  1.8073],
         [-0.3180,  0.4230, -0.2784,  ...,  0.6195, -0.2664, -0.2920],
         [ 0.3440,  1.0289, -1.0768,  ...,  0.6549, -0.0499,  2.2188],
         ...,
         [-0.3492,  0.2419, -0.0566,  ...,  0.8590, -0.2456, -0.3935],
         [ 0.0237,  0.0883, -0.0124,  ...,  0.0749, -0.2723, -0.3941],
         [ 0.0245,  0.0971,  0.0022,  ...,  0.0697, -0.2461, -0.3861]],

        [[ 0.2509, -0.5889, -1.3920,  ..., -0.2796, -0.2911,  0.9195],
         [-0.9252,  0.3977, -0.3854,  ...,  0.4660,  0.3435, -0.0269],
         [ 1.1417, -0.3819, -0.2935,  ..., -1.3481, -0.5398,  1.2841],
         ...,
         [ 0.0596, -0.1465,  0.0125,  ...,  0.1940, -0.0572,  0.0040],
         [ 0.0495, -0.5427, -0.6990,  ...,  0.8839, -0.2467, -0.0790],
         [ 0.0751, -0.5110, -0.6634,  ...,  0.9039, -0.2149, -0.1357]],

        [[ 0.6741, -0.3091, -0.6780,  ..., -0.0989,  0.0703,  0.9792],
         [ 0.4150, -0.1140, -1.8007,  ..., -0.5622, -0.6212,  1.1622],
         [ 0.8846, -0.1752, -0.1635,  ..., -1.5646, -0.6348,  0.9669],
         ...,
         [ 0.0328, -0.1610,  0.0106,  ...,  0.2026, -0.0670,  0.0240],
         [ 0.1662,  0.1044,  0.0978,  ...,  0.3759,  0.2079, -0.2861],
         [ 0.1376,  0.0544,  0.1274,  ...,  0.4525,  0.2097, -0.2393]],

        [[ 0.7259, -1.0060, -0.9081,  ...,  0.9949, -0.5431,  1.5947],
         [ 0.2393, -0.2591, -0.0478,  ...,  0.5794, -0.5164, -0.1704],
         [ 1.0590, -0.3609, -0.6627,  ..., -0.1992, -0.9425,  1.2143],
         ...,
         [ 0.0276, -0.1896,  0.0456,  ...,  0.1693, -0.0747,  0.0136],
         [-0.4797,  0.1775,  0.4612,  ...,  0.2158, -0.0559, -0.2395],
         [-0.3642,  0.0693,  0.3907,  ...,  0.2750,  0.1709, -0.2265]],

        [[ 1.0107, -1.1290, -0.0243,  ...,  2.0321, -0.6442,  0.9211],
         [ 0.4446, -1.1401, -0.4958,  ...,  1.0794, -1.2600,  1.3058],
         [ 1.2838, -0.9582,  0.2927,  ..., -0.2421, -0.0602,  0.8902],
         ...,
         [ 0.0503, -0.1456,  0.0309,  ...,  0.2050, -0.0967,  0.0091],
         [-0.3640, -0.2695,  0.2204,  ...,  0.6633,  0.3370, -0.2878],
         [-0.0216,  0.0276,  0.5961,  ...,  0.7934, -0.3334, -0.3390]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Provide a concise depiction of this image. ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Can you briefly explain what you see in the image? ']
processed prompt_list:['Briefly describe this image.', 'Write a description for the photo.', 'Provide a concise depiction of this image.', 'Write a short description for the image.', 'Write a short description for the image.', 'Can you briefly explain what you see in the image?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-6.3169e-04, -1.6142e-05, -9.6713e-04,  ..., -1.2316e-04,
          -1.3021e-04,  1.6151e-04],
         [-7.7006e-04, -8.1540e-05, -1.0663e-03,  ...,  1.4872e-04,
           1.3317e-04,  4.9630e-04],
         [-6.2399e-04, -1.0295e-04, -4.7226e-04,  ..., -3.8288e-04,
           6.5765e-04,  6.6323e-05],
         ...,
         [ 5.6939e-04, -1.0726e-03,  1.1312e-03,  ..., -2.8422e-04,
           6.4344e-06, -7.9384e-04],
         [-7.0239e-04,  5.8131e-04, -7.6057e-04,  ...,  3.2731e-04,
           3.1525e-04,  4.2404e-04],
         [-6.8735e-04,  6.0220e-04, -7.6872e-04,  ...,  3.6685e-04,
           3.4320e-04,  4.2930e-04]],

        [[-2.0507e-04,  1.1325e-04, -9.7178e-04,  ..., -2.5890e-04,
          -2.0460e-04,  2.3520e-04],
         [-9.6317e-04,  3.8441e-04, -9.9635e-04,  ...,  2.9625e-04,
           3.7256e-04,  3.7067e-04],
         [-1.3329e-04, -1.3437e-04, -1.1667e-03,  ..., -6.7457e-04,
          -1.8608e-04, -3.0862e-04],
         ...,
         [-9.6174e-04,  4.6617e-04, -1.0471e-03,  ...,  2.5561e-04,
           4.2941e-04,  3.6990e-04],
         [-3.7947e-04,  1.7075e-04, -1.0708e-03,  ...,  1.4788e-05,
           8.0309e-04,  1.4999e-04],
         [-3.3512e-04,  1.4466e-04, -1.0471e-03,  ...,  2.0915e-05,
           8.1833e-04,  1.3860e-04]],

        [[-1.6726e-03,  1.2391e-05, -4.6117e-04,  ...,  2.2025e-04,
           1.2100e-04,  2.3368e-04],
         [-8.0550e-04,  7.3461e-04, -7.1272e-04,  ...,  1.7509e-04,
           5.2907e-04,  2.7387e-05],
         [-7.3600e-04, -1.1961e-04, -6.9999e-04,  ...,  2.6007e-05,
           2.1753e-04,  3.9975e-04],
         ...,
         [ 5.7736e-04, -1.0394e-03,  1.1689e-03,  ..., -2.7096e-04,
           2.2723e-05, -7.5879e-04],
         [-8.3384e-04,  7.5108e-04, -1.1349e-03,  ...,  3.0752e-04,
          -2.9339e-06,  8.3361e-05],
         [-8.1090e-04,  7.4337e-04, -1.1024e-03,  ...,  2.9796e-04,
           1.7069e-07,  4.7649e-05]],

        [[-6.1115e-04,  1.6449e-04, -8.1088e-04,  ..., -2.5277e-04,
          -3.1680e-04,  1.6414e-04],
         [-1.0479e-03, -2.1314e-04, -1.0403e-03,  ...,  1.7243e-04,
           2.7607e-04,  7.7042e-04],
         [-7.6447e-04, -5.3166e-04, -5.2406e-04,  ..., -8.6520e-04,
           7.1743e-04,  2.3257e-04],
         ...,
         [ 5.8000e-04, -1.0617e-03,  1.1401e-03,  ..., -2.7889e-04,
          -2.0016e-06, -7.8090e-04],
         [-7.9647e-04,  8.5340e-04, -9.9903e-04,  ...,  2.1252e-04,
           1.1753e-04,  3.0384e-04],
         [-7.3011e-04,  8.6001e-04, -9.8423e-04,  ...,  2.9868e-04,
           4.6817e-05,  2.7498e-04]],

        [[-7.3316e-04, -4.3500e-04, -9.5600e-04,  ..., -7.7034e-05,
           1.9885e-04,  1.1570e-04],
         [-7.8395e-04,  4.8563e-04, -9.1421e-04,  ...,  5.9397e-05,
           1.8006e-04,  5.0067e-05],
         [-5.1378e-04, -4.0640e-04, -6.3377e-04,  ..., -2.1737e-04,
           4.1926e-04,  1.1321e-04],
         ...,
         [ 5.9334e-04, -1.0344e-03,  1.1385e-03,  ..., -3.0754e-04,
           1.5927e-05, -7.8859e-04],
         [-8.6499e-04,  7.2739e-04, -4.8398e-04,  ...,  4.8422e-04,
           2.7022e-04,  6.1165e-06],
         [-8.1334e-04,  8.2569e-04, -5.4080e-04,  ...,  6.3197e-04,
           3.7130e-04, -5.1131e-05]],

        [[-8.8810e-05,  4.0395e-04, -1.4884e-03,  ...,  1.2594e-04,
          -4.8118e-04,  5.7836e-04],
         [-5.7440e-04, -5.9863e-04, -1.3939e-03,  ...,  4.1856e-04,
          -1.5868e-04,  9.8536e-04],
         [-3.7436e-04, -2.4602e-04, -1.0921e-03,  ...,  4.5878e-05,
          -8.3113e-05,  3.5613e-04],
         ...,
         [ 5.7536e-04, -1.0673e-03,  1.1393e-03,  ..., -2.7536e-04,
           1.0534e-06, -7.7536e-04],
         [-5.6259e-04,  8.4791e-04, -5.5216e-04,  ..., -7.4530e-05,
           2.1139e-04, -2.7490e-05],
         [-6.7026e-04,  4.7452e-06, -7.3410e-04,  ...,  3.0917e-04,
           6.0548e-04, -8.6879e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 5.4386e-01, -8.3730e-01, -4.2739e-01,  ..., -1.8501e-01,
           2.4001e-01,  1.3638e+00],
         [ 5.0264e-01, -4.2096e-01, -1.1987e+00,  ..., -5.0445e-01,
          -6.8661e-02,  1.2820e+00],
         [-2.3989e-01, -4.6304e-01, -1.3844e+00,  ..., -9.0691e-01,
           7.2678e-01,  2.7718e-01],
         ...,
         [-1.2344e+00,  3.0498e-01,  8.6322e-02,  ..., -3.1533e-03,
          -4.2540e-01, -1.8738e-01],
         [ 4.4169e-01,  1.9498e-01, -5.2586e-01,  ...,  4.6463e-01,
           3.9490e-01,  8.7904e-02],
         [ 9.2939e-01, -2.6243e-01, -4.7406e-01,  ..., -3.8481e-01,
           2.5396e-01,  5.4084e-01]],

        [[ 6.1819e-01, -1.4793e+00, -4.2157e-01,  ..., -5.0564e-01,
           1.4944e-02,  1.0595e+00],
         [ 5.5171e-01, -5.0664e-01,  2.5025e-01,  ..., -3.5530e-01,
          -3.3524e-01,  1.3185e+00],
         [ 9.2287e-01, -7.2210e-01, -6.7771e-01,  ..., -5.1293e-03,
          -5.7572e-01,  1.4716e+00],
         ...,
         [ 6.5488e-02, -1.4080e-01,  5.1264e-02,  ...,  2.1509e-01,
          -1.0567e-01,  3.0824e-02],
         [ 1.8533e-02,  1.0141e-01, -1.9877e-02,  ...,  3.4625e-01,
           2.3529e-01, -3.1909e-02],
         [ 3.4916e-02,  1.1614e-01, -2.1747e-02,  ...,  3.9819e-01,
           2.6022e-01, -3.5128e-02]],

        [[ 7.7006e-01, -1.0707e+00, -5.3920e-01,  ...,  1.1427e-02,
          -2.8210e-01,  1.8628e+00],
         [ 3.8802e-01, -1.1877e-01, -1.6519e+00,  ..., -6.0098e-01,
          -5.4866e-01,  1.8132e+00],
         [ 1.2873e+00, -6.7837e-01, -7.9365e-01,  ..., -8.6450e-01,
          -3.2625e-01,  1.7220e+00],
         ...,
         [ 3.3453e-02, -1.7678e-01, -1.0195e-02,  ...,  1.9928e-01,
          -8.7817e-02,  2.8563e-03],
         [-9.5495e-02, -2.3986e-02,  3.0487e-02,  ...,  1.0909e+00,
          -5.0478e-01, -1.8085e-01],
         [-8.1062e-02, -4.7553e-02,  6.7692e-02,  ...,  1.1171e+00,
          -4.7112e-01, -1.2471e-01]],

        [[ 6.0079e-01, -8.0355e-01, -2.1030e-02,  ...,  1.2578e+00,
          -3.5399e-01,  1.5893e+00],
         [ 9.0806e-01, -1.2769e+00,  7.0096e-01,  ...,  6.3328e-01,
          -7.7803e-01,  2.6729e+00],
         [ 1.3220e+00, -4.7780e-01, -4.6715e-01,  ...,  4.1302e-01,
          -1.1487e+00,  2.0320e+00],
         ...,
         [ 4.3387e-03, -1.6728e-01, -2.7193e-02,  ...,  1.7298e-01,
          -8.5897e-02,  2.8409e-02],
         [-2.1963e-02, -8.1125e-04,  5.6464e-01,  ...,  9.5388e-01,
          -2.1863e-03,  1.1608e-01],
         [ 1.4017e-02, -2.7058e-02,  5.0070e-01,  ...,  9.1519e-01,
          -3.3558e-02,  1.3784e-01]],

        [[ 1.1934e+00, -1.3449e-01, -3.2270e-01,  ...,  5.1602e-01,
           5.7062e-01,  2.1819e+00],
         [-7.2713e-01, -2.1684e-02,  1.5341e-01,  ...,  4.8314e-01,
          -8.4311e-01,  2.1328e-01],
         [ 1.5863e+00,  2.4011e-01, -1.3086e+00,  ...,  8.0322e-01,
          -2.7431e-01,  1.4208e+00],
         ...,
         [ 1.7511e-02, -1.8677e-01,  1.3887e-02,  ...,  2.3648e-01,
          -1.0143e-01,  2.2622e-02],
         [-5.0206e-02,  8.6756e-02, -2.7988e-01,  ...,  5.4806e-01,
          -3.2462e-01, -1.1022e-02],
         [-3.1384e-02,  1.0187e-01, -2.5743e-01,  ...,  6.1644e-01,
          -3.1408e-01,  4.1355e-02]],

        [[ 2.5874e-01,  9.2529e-01,  1.9789e-01,  ...,  4.3615e-01,
           5.9847e-01,  1.4235e-01],
         [ 3.8827e-01, -7.6869e-01,  2.0470e-01,  ...,  7.2852e-02,
          -1.4380e+00,  6.7764e-01],
         [-6.8970e-01,  8.4019e-01, -3.0101e-01,  ...,  1.1840e+00,
          -1.5114e+00, -9.7970e-01],
         ...,
         [ 1.5063e-01, -1.3607e-01, -9.1637e-01,  ...,  2.6117e-01,
          -2.7841e-01, -6.6075e-01],
         [ 4.9390e-01,  3.3664e-01,  1.4463e-02,  ...,  3.5149e-01,
          -6.3245e-01,  8.1949e-01],
         [-7.7425e-02,  9.2007e-01,  5.0976e-01,  ...,  3.6919e-01,
          -1.0781e+00,  4.0101e-02]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Briefly describe this image. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ']
processed prompt_list:['A short image caption:', 'Briefly describe this image.', 'An image that shows', 'Provide a description of what is presented in the photo.', 'Briefly describe this image.', 'Briefly describe the content of the image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-7.0393e-04,  2.1582e-05, -9.7409e-04,  ...,  1.1088e-05,
          -1.2224e-04,  5.1368e-04],
         [-7.5529e-04, -5.2731e-05, -8.9313e-04,  ...,  2.3303e-04,
           4.1401e-04,  7.0918e-04],
         [-4.4445e-04,  6.2701e-04, -5.1853e-04,  ..., -4.5114e-04,
          -3.7348e-04, -3.5813e-05],
         ...,
         [-9.7373e-04,  3.7635e-04, -1.8997e-04,  ..., -8.7496e-04,
          -1.1880e-03,  2.3657e-05],
         [-1.1059e-03, -5.3104e-06, -7.8650e-04,  ..., -5.5818e-04,
          -1.7172e-04, -3.6107e-04],
         [-7.9187e-04,  2.5104e-06, -5.8687e-04,  ..., -5.6161e-04,
           1.1609e-04,  1.9225e-04]],

        [[-5.8354e-04, -2.9355e-06, -7.1666e-04,  ..., -7.6580e-04,
           4.9533e-05,  1.5901e-04],
         [-9.8803e-04, -4.7303e-04, -7.2529e-04,  ..., -5.8557e-04,
           1.4329e-04,  4.6660e-04],
         [-8.9276e-04, -2.5209e-04, -2.7896e-04,  ..., -8.7612e-04,
           3.1796e-04, -1.5889e-05],
         ...,
         [ 5.5414e-04, -1.0582e-03,  1.1328e-03,  ..., -2.8722e-04,
           4.4361e-06, -7.6654e-04],
         [-2.7821e-04,  9.8381e-04, -5.6496e-04,  ...,  5.7349e-04,
           2.6374e-04,  3.6834e-04],
         [-2.5474e-04,  1.0009e-03, -5.7685e-04,  ...,  5.9060e-04,
           2.8605e-04,  3.3989e-04]],

        [[-7.8197e-04, -4.6249e-05, -7.5096e-04,  ..., -2.1851e-04,
           9.9774e-05,  6.3502e-04],
         [-9.6642e-04, -2.8249e-04, -9.3686e-04,  ...,  3.4042e-04,
           5.6593e-04,  7.2565e-04],
         [-8.7431e-04, -5.1711e-04, -6.1647e-04,  ..., -7.0210e-04,
           1.2358e-03,  4.6862e-04],
         ...,
         [ 5.5731e-04, -1.0524e-03,  1.1514e-03,  ..., -2.7865e-04,
           2.0728e-05, -7.8720e-04],
         [-6.4001e-04,  5.6078e-04, -8.4307e-04,  ...,  4.2201e-04,
           3.8904e-04,  1.7542e-04],
         [-6.4577e-04,  5.8551e-04, -8.6071e-04,  ...,  4.9251e-04,
           3.6796e-04,  1.8896e-04]],

        [[-9.6391e-04, -4.6866e-04, -1.0351e-03,  ..., -3.4900e-04,
           3.7369e-04, -6.4696e-05],
         [-1.3654e-03, -4.8745e-04, -9.9675e-04,  ..., -9.1646e-04,
           4.3412e-05,  9.9390e-04],
         [-1.0284e-03, -6.9257e-04, -1.1768e-03,  ..., -2.2249e-04,
           5.1848e-04, -3.0591e-05],
         ...,
         [ 5.7453e-04, -1.0391e-03,  1.1301e-03,  ..., -2.9485e-04,
          -1.3466e-05, -7.7552e-04],
         [-8.7756e-04,  6.6398e-04, -5.7143e-04,  ...,  1.4499e-04,
           4.3451e-04,  1.8118e-04],
         [-8.1970e-04,  6.9297e-04, -5.6007e-04,  ...,  1.8428e-04,
           4.6775e-04,  1.1534e-04]],

        [[-9.2463e-04,  4.4831e-04, -7.5375e-04,  ..., -4.0891e-04,
           3.0449e-04, -3.1873e-04],
         [-1.0281e-03,  7.6705e-04, -1.1759e-03,  ...,  4.6478e-04,
           4.8894e-04,  4.8302e-04],
         [-1.2749e-03,  3.0300e-04, -1.0138e-03,  ..., -6.0981e-05,
           3.7184e-04, -9.0579e-05],
         ...,
         [ 5.5664e-04, -1.0305e-03,  1.1443e-03,  ..., -2.9291e-04,
          -5.6978e-08, -7.7685e-04],
         [-4.5247e-04,  5.9255e-04, -8.5564e-04,  ...,  5.9539e-04,
           1.8037e-04,  2.9628e-04],
         [-4.3386e-04,  5.9049e-04, -8.7057e-04,  ...,  6.3361e-04,
           1.9916e-04,  2.9738e-04]],

        [[-9.3995e-05,  2.9735e-04, -1.2028e-03,  ..., -3.4882e-04,
           6.9478e-04,  1.6929e-04],
         [-2.9835e-04, -8.4036e-05, -1.6784e-03,  ...,  7.2328e-05,
           5.8053e-04,  1.3277e-04],
         [ 4.5888e-04,  7.1122e-04,  2.0213e-04,  ..., -3.6754e-04,
          -2.2753e-04,  1.4922e-05],
         ...,
         [-3.0743e-04, -5.7926e-04, -5.6549e-04,  ...,  8.6829e-05,
          -3.0553e-04,  3.7818e-04],
         [-5.2505e-04, -1.4400e-04, -1.1615e-03,  ..., -1.7946e-04,
           5.1791e-04,  9.2169e-05],
         [-5.7154e-04, -4.0957e-04, -5.2737e-05,  ..., -5.9051e-04,
          -6.8917e-04,  3.1850e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] A short image description: ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.6721, -0.8027,  0.4135,  ..., -0.0500, -0.8489,  2.0152],
         [-0.8020,  0.3691,  0.0481,  ...,  0.8584, -0.6406, -0.1541],
         [ 1.8670,  0.5851, -1.4021,  ..., -0.8976, -1.2964,  1.4487],
         ...,
         [ 0.0297, -0.1426,  0.0583,  ...,  0.1801, -0.0899,  0.0669],
         [-0.1879,  0.0697, -0.0684,  ...,  0.5524,  0.3349, -0.1669],
         [-0.2077,  0.0784, -0.0694,  ...,  0.6019,  0.3692, -0.2344]],

        [[-0.0116, -0.4558, -0.4173,  ...,  0.1800,  0.0656,  0.9184],
         [-0.1728, -0.0440, -0.8564,  ..., -0.2327, -0.2734,  1.2049],
         [ 0.6167, -0.4866,  0.2457,  ..., -1.2910, -0.9994,  1.0485],
         ...,
         [ 0.0441, -0.1563,  0.0316,  ...,  0.2444, -0.0567,  0.0095],
         [ 0.1711, -0.3028,  0.1184,  ...,  0.8616,  0.0570,  0.0928],
         [ 0.1543, -0.2993,  0.1171,  ...,  0.8987,  0.0997,  0.1127]],

        [[ 0.2284, -0.3030,  0.4853,  ...,  0.3291,  0.6264,  2.1001],
         [-0.7657, -0.3446,  0.1543,  ...,  0.7391, -0.0897,  0.0163],
         [ 1.3899,  1.0127, -1.5015,  ..., -0.3789, -1.0426,  2.0828],
         ...,
         [ 0.0242, -0.1237,  0.0173,  ...,  0.2208, -0.0933,  0.0192],
         [ 0.1947, -0.0239,  0.1690,  ...,  0.6041,  0.0411,  0.3307],
         [ 0.1904, -0.0180,  0.1579,  ...,  0.6088,  0.0389,  0.3013]],

        [[ 0.2792, -0.7507,  0.4026,  ...,  0.1042,  0.2134,  1.1954],
         [ 0.1315, -1.1702, -0.4202,  ...,  0.4416, -0.6826,  0.8980],
         [ 0.8425,  0.1511,  0.4256,  ..., -0.2032, -1.3010,  1.5255],
         ...,
         [ 0.0745, -0.2386,  0.0664,  ...,  0.1671, -0.1122,  0.0198],
         [ 0.3289,  0.0244,  0.1307,  ...,  0.2700, -0.3233, -0.1473],
         [ 0.2510,  0.1557,  0.1758,  ...,  0.4517, -0.0950, -0.3752]],

        [[ 0.4864, -0.6603, -0.8190,  ...,  0.8492, -1.4322,  2.3348],
         [ 0.3370, -0.4792, -0.3383,  ..., -0.4277, -2.3626,  1.9659],
         [ 0.6652, -0.2709, -0.9269,  ...,  0.1333, -1.7403,  1.9563],
         ...,
         [ 0.0376, -0.1654, -0.0116,  ...,  0.1520, -0.0662,  0.0123],
         [-0.1949,  0.3601,  0.3731,  ...,  0.9264,  0.0408, -0.3500],
         [-0.1622,  0.3469,  0.3574,  ...,  0.9870,  0.1074, -0.3533]],

        [[ 0.2104,  1.2314,  0.3970,  ...,  0.6741,  0.6269,  0.1675],
         [ 1.2819,  1.7542, -0.0217,  ...,  0.9363,  0.3654,  0.7760],
         [ 0.8104,  1.5513, -0.4764,  ...,  1.5080,  0.3557,  0.5054],
         ...,
         [ 0.0892,  0.0203,  1.0923,  ...,  0.1641,  0.6297,  1.6122],
         [-0.3532, -0.4389,  0.8945,  ...,  0.8097,  0.2252, -0.0619],
         [ 0.5187,  0.1591,  0.4532,  ...,  0.4736,  0.3260,  0.0416]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] Briefly describe the content of the image. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] A short image description: ']
processed prompt_list:['A short image caption:', 'Briefly describe the content of the image.', 'Write a description for the photo.', 'Briefly describe the content of the image.', 'Summarize this image in a few words.', 'A short image description:']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-8.8559e-04, -1.8456e-04, -5.7661e-04,  ..., -1.5544e-04,
           1.3667e-04,  1.3156e-04],
         [-1.0047e-03,  6.2283e-04, -1.0275e-03,  ..., -3.0388e-05,
           3.9632e-04,  2.7797e-04],
         [-6.6341e-04, -1.5906e-04, -5.9812e-04,  ...,  1.2064e-04,
           8.5929e-04,  2.5593e-04],
         ...,
         [ 5.6217e-04, -1.0603e-03,  1.1469e-03,  ..., -3.1263e-04,
           2.5690e-05, -7.7169e-04],
         [-5.7677e-04,  1.0053e-03, -1.0243e-03,  ...,  3.9956e-04,
           1.9847e-04,  4.0597e-04],
         [-5.3856e-04,  1.0078e-03, -9.7549e-04,  ...,  3.9490e-04,
           2.3224e-04,  3.8326e-04]],

        [[-1.1043e-03, -4.5633e-04, -1.1242e-03,  ..., -1.1177e-04,
           3.4083e-04,  4.0510e-04],
         [-1.1627e-03, -4.3627e-04, -1.0639e-03,  ..., -2.0112e-05,
           5.6285e-04,  6.4692e-04],
         [-4.7468e-04, -3.7946e-04, -6.3954e-04,  ..., -1.1768e-03,
           7.2197e-04,  3.9628e-04],
         ...,
         [ 5.6188e-04, -1.0556e-03,  1.1294e-03,  ..., -2.9916e-04,
           8.6610e-06, -7.9383e-04],
         [-8.7730e-04,  7.4058e-04, -1.1450e-03,  ...,  6.2902e-05,
           2.7511e-04,  5.0654e-04],
         [-8.3957e-04,  8.1014e-04, -1.1220e-03,  ...,  1.4701e-04,
           2.9829e-04,  4.8931e-04]],

        [[-4.9096e-04,  2.9026e-04, -4.4286e-04,  ..., -4.8575e-04,
           4.0921e-04, -7.0706e-04],
         [-6.3472e-04,  9.7386e-04, -9.8049e-04,  ...,  1.7372e-04,
           6.0819e-04,  4.7651e-04],
         [-8.7159e-04, -1.1688e-04, -7.9864e-04,  ..., -1.7308e-04,
           5.0779e-04, -4.7799e-05],
         ...,
         [ 5.6159e-04, -1.0563e-03,  1.1467e-03,  ..., -2.8809e-04,
           2.2139e-05, -7.8142e-04],
         [-5.1715e-04,  5.6223e-04, -9.5602e-04,  ...,  4.2487e-04,
           3.8407e-04,  1.9820e-04],
         [-5.1907e-04,  5.5893e-04, -9.4752e-04,  ...,  4.3675e-04,
           3.9524e-04,  2.1221e-04]],

        [[-8.7554e-04, -9.6631e-04, -6.7273e-04,  ..., -8.2779e-04,
           2.2208e-04, -1.6369e-04],
         [-1.4843e-03, -6.4507e-04, -1.0827e-03,  ..., -5.9155e-04,
           3.9902e-04,  5.5792e-04],
         [-6.6241e-04, -1.0289e-03, -3.2243e-04,  ..., -1.0792e-03,
           3.4662e-04,  3.5302e-04],
         ...,
         [ 5.7817e-04, -1.0674e-03,  1.1176e-03,  ..., -2.8909e-04,
           1.6619e-05, -7.7973e-04],
         [-8.1432e-04,  5.7730e-04, -7.3769e-04,  ..., -2.9642e-05,
          -6.0146e-05, -5.5595e-05],
         [-7.6519e-04,  6.0920e-04, -7.0432e-04,  ...,  2.8820e-04,
           1.0694e-04, -9.5054e-05]],

        [[-9.4219e-04, -2.2756e-04, -3.1056e-04,  ..., -2.9625e-04,
           3.7115e-04,  2.1301e-04],
         [-8.6978e-04, -2.5528e-04,  4.5477e-04,  ..., -3.7359e-04,
           3.1587e-04,  1.3255e-04],
         [-8.6757e-04, -2.7270e-04, -7.1557e-04,  ..., -3.1166e-04,
           5.8985e-04,  5.1803e-05],
         ...,
         [ 5.8187e-04, -1.0621e-03,  1.1590e-03,  ..., -2.8714e-04,
           4.7381e-05, -7.6807e-04],
         [-6.2640e-04,  5.8986e-04, -6.0979e-04,  ...,  5.0112e-04,
           2.7805e-06, -3.3693e-05],
         [-5.7673e-04,  5.6819e-04, -6.0189e-04,  ...,  5.3876e-04,
           3.5482e-05, -3.1180e-05]],

        [[-5.6846e-04, -4.7356e-04,  2.7921e-04,  ..., -1.0968e-03,
           5.0679e-04, -1.0387e-04],
         [-4.5948e-04, -4.8762e-04,  3.3788e-04,  ..., -8.2931e-04,
          -2.7898e-04,  2.7689e-05],
         [-3.3410e-04,  1.4977e-04,  3.3434e-04,  ..., -7.7640e-04,
          -3.8772e-04, -3.0789e-04],
         ...,
         [-7.5431e-04, -1.1543e-03,  2.7144e-04,  ..., -8.3193e-04,
           5.2192e-04,  5.3954e-04],
         [-4.1530e-04,  9.5143e-04, -5.3968e-04,  ...,  4.1317e-04,
           4.6979e-04,  9.1565e-05],
         [-4.9894e-04,  8.0403e-04, -3.7576e-04,  ..., -4.3615e-04,
           3.3660e-04,  3.7122e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] where can I locate the the baseball player wearing the maroon uniform ? ', '<Img><ImageHere></Img> [refer] where can I locate the guy under bunkbed ? ', '<Img><ImageHere></Img> [refer] where can I locate the a man wearing glasses eating a huge hero ? ', '<Img><ImageHere></Img> [refer] where can I locate the top right blurry motorcyclist going out of frame ? ', '<Img><ImageHere></Img> [refer] where is the animal being petted by the blonde lady ? ', '<Img><ImageHere></Img> [refer] the location of a man standing with blue striped shirt is ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.7701, -1.0746,  1.4462,  ...,  0.4533,  0.1926,  0.9802],
         [-0.4117,  0.3035,  0.3435,  ...,  0.5652, -0.5323, -0.7430],
         [-0.3039, -0.7308,  0.6415,  ...,  0.8429,  0.6152,  1.4101],
         ...,
         [ 0.6653,  0.4962, -0.2576,  ...,  0.5546, -0.5575, -0.9871],
         [ 0.0715, -0.2696,  0.1396,  ...,  0.1022, -0.3524, -0.1591],
         [-0.1582, -0.7151,  1.0543,  ...,  0.9690,  0.3232,  0.9632]],

        [[ 0.6983,  0.1557, -0.3250,  ...,  0.7969,  0.1497,  0.2223],
         [ 0.2157,  0.5149, -0.3202,  ...,  0.7993, -1.0668, -0.5418],
         [-0.0156,  0.7894,  0.5193,  ..., -0.2392, -0.7643, -0.2300],
         ...,
         [ 0.8888,  0.7351, -0.2951,  ...,  1.1740,  0.8234,  0.6821],
         [ 1.1165,  0.5242, -0.3308,  ...,  1.1783,  0.7266,  0.4728],
         [ 1.4989,  0.7989,  0.1417,  ...,  1.1072,  1.5184,  0.9292]],

        [[-0.2690,  0.1151, -0.0333,  ...,  0.9092,  0.8058, -0.8802],
         [-0.9033,  0.6170,  0.3784,  ...,  1.0565, -0.5977, -0.3844],
         [-0.9963,  0.5209, -0.4474,  ...,  0.6634, -0.2729,  0.2417],
         ...,
         [-0.1237, -0.0910, -0.4881,  ...,  0.8533,  0.5777, -1.2833],
         [ 0.0485, -0.4757, -0.2081,  ...,  1.6124,  0.3209, -0.5842],
         [ 0.5322, -0.3342,  0.5842,  ...,  1.5278,  0.4868,  0.2225]],

        [[-1.0637,  0.0293,  0.2725,  ...,  0.9002,  0.3338,  0.7164],
         [-0.1373,  0.1875,  0.0367,  ...,  0.8318, -1.8880, -0.5425],
         [-0.4517,  0.4344,  0.0427,  ...,  1.3380, -1.1238, -0.2560],
         ...,
         [-0.7510,  0.5267,  0.0938,  ...,  1.0344,  0.0560,  0.8472],
         [-0.2890,  0.4911,  0.0857,  ...,  0.8030, -1.3892, -0.3253],
         [-0.1252, -0.5169,  0.5880,  ...,  1.0008,  0.8192,  0.4369]],

        [[-0.9571,  1.8294,  0.6325,  ...,  1.2718,  1.8712,  1.1738],
         [-0.8243,  1.7981,  0.0560,  ...,  0.3765,  0.7454,  1.5460],
         [-1.0546,  1.8211,  0.0560,  ...,  0.3249,  0.6689,  1.3368],
         ...,
         [-0.5432,  2.2646,  1.2336,  ...,  0.7099,  0.8687,  1.4450],
         [-0.9602,  2.2171,  0.5978,  ...,  0.8398,  1.1153,  1.6881],
         [-0.6289,  0.5695,  1.0141,  ...,  0.3455,  0.9429,  0.8344]],

        [[ 0.0135, -0.1917,  0.9518,  ...,  0.7992, -0.6041,  0.3072],
         [-0.4430, -0.2259,  0.6050,  ...,  1.5578, -1.5548, -0.0513],
         [-0.5910,  0.5767,  0.9502,  ...,  1.6348, -1.1058,  0.0314],
         ...,
         [-0.2624, -0.4128,  0.9910,  ...,  1.7619, -0.3020,  0.7477],
         [ 0.4102, -0.3598,  0.4758,  ...,  2.1359,  1.2877,  0.6120],
         [ 0.1592,  0.7480,  0.6908,  ...,  0.9356, -0.8577,  1.3253]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] where can I locate the the baseball player wearing the maroon uniform ? ', '<Img><ImageHere></Img> [refer] where can I locate the guy under bunkbed ? ', '<Img><ImageHere></Img> [refer] where can I locate the a man wearing glasses eating a huge hero ? ', '<Img><ImageHere></Img> [refer] where can I locate the top right blurry motorcyclist going out of frame ? ', '<Img><ImageHere></Img> [refer] where is the animal being petted by the blonde lady ? ', '<Img><ImageHere></Img> [refer] the location of a man standing with blue striped shirt is ']
processed prompt_list:['where can I locate the the baseball player wearing the maroon uniform ?', 'where can I locate the guy under bunkbed ?', 'where can I locate the a man wearing glasses eating a huge hero ?', 'where can I locate the top right blurry motorcyclist going out of frame ?', 'where is the animal being petted by the blonde lady ?', 'the location of a man standing with blue striped shirt is']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-8.3825e-04,  4.3008e-04, -8.3349e-04,  ...,  1.1751e-05,
          -3.0315e-04,  1.2092e-04],
         [-8.3958e-04,  6.7033e-04, -9.6852e-04,  ...,  2.2068e-04,
           3.3540e-04,  7.7890e-04],
         [-8.7725e-04,  2.4532e-04, -1.0715e-03,  ...,  9.7144e-06,
          -4.8179e-05,  2.6028e-04],
         ...,
         [-7.2354e-04,  1.8676e-05, -1.2258e-04,  ...,  9.8968e-05,
          -4.4118e-05,  2.3848e-04],
         [-7.3017e-04,  3.3796e-04, -7.9443e-04,  ..., -4.3030e-04,
          -1.6565e-04, -3.8651e-04],
         [-8.2541e-04,  4.3887e-04, -8.9392e-04,  ..., -1.9184e-04,
          -1.5271e-04,  5.0875e-05]],

        [[-1.0399e-03, -1.7908e-04, -1.0313e-03,  ..., -5.5051e-04,
          -7.1681e-04,  9.7546e-05],
         [-7.4934e-04,  9.4618e-05, -5.5072e-04,  ..., -4.5046e-04,
          -9.7172e-04,  2.6942e-04],
         [-8.1497e-04,  6.7093e-04, -5.2210e-04,  ..., -2.3329e-04,
          -1.8520e-04,  1.1801e-03],
         ...,
         [-1.1078e-03, -2.9132e-04, -1.1432e-03,  ..., -4.2309e-04,
          -3.0953e-04,  2.7311e-04],
         [-1.1359e-03, -3.4912e-04, -1.1551e-03,  ..., -3.1990e-04,
          -5.7994e-04,  3.0841e-04],
         [-1.0002e-03, -4.6220e-04, -9.7575e-04,  ..., -5.8194e-05,
          -6.0954e-04,  3.9500e-04]],

        [[-7.7115e-04,  5.2826e-04, -1.0222e-03,  ..., -4.9962e-04,
          -5.4019e-04,  1.4972e-04],
         [-4.0422e-04,  4.2529e-04, -6.7960e-04,  ..., -4.2793e-04,
          -7.1888e-04,  3.2041e-04],
         [-5.7805e-04,  1.3566e-04, -1.0374e-03,  ..., -2.6582e-04,
          -6.3930e-04,  3.7683e-04],
         ...,
         [-6.6280e-04,  6.5326e-04, -6.8714e-04,  ..., -7.3295e-04,
          -3.1303e-04, -1.3540e-05],
         [-8.9933e-04,  3.4674e-04, -9.3229e-04,  ..., -6.9921e-04,
          -6.7104e-04,  1.5689e-04],
         [-5.6023e-04,  5.0630e-04, -1.2273e-03,  ..., -3.2783e-04,
          -5.8361e-04,  2.9538e-04]],

        [[-9.6540e-04,  4.6868e-04, -1.7978e-03,  ..., -7.6918e-04,
          -4.4992e-04,  1.4348e-04],
         [-4.7776e-04,  7.8058e-04, -5.3441e-04,  ..., -7.8870e-04,
          -9.1107e-04,  8.1786e-04],
         [-7.2034e-04,  6.1518e-04, -6.4625e-04,  ..., -6.7876e-04,
          -6.5247e-04,  7.2225e-04],
         ...,
         [-9.7686e-04,  4.7964e-04, -1.7504e-03,  ..., -6.6756e-04,
          -5.4830e-04,  6.5865e-05],
         [-7.5336e-04,  5.5370e-04, -6.1803e-04,  ..., -6.6854e-04,
          -6.3233e-04,  1.7547e-04],
         [-9.9397e-04,  3.9806e-04, -1.6588e-03,  ..., -7.0719e-04,
          -7.5190e-04,  1.5825e-04]],

        [[-7.6984e-04, -7.5129e-04, -1.4959e-03,  ...,  3.7969e-04,
           8.3503e-05,  7.0799e-04],
         [-7.4762e-04, -4.1598e-04, -1.2313e-03,  ...,  2.5850e-04,
           1.1978e-04,  7.8956e-04],
         [-8.0642e-04, -2.6428e-04, -1.2830e-03,  ...,  3.3768e-04,
           6.9883e-05,  6.6821e-04],
         ...,
         [-6.0215e-04, -4.0596e-04, -1.3359e-03,  ...,  2.3385e-04,
           5.8969e-05,  3.4923e-04],
         [-6.6046e-04, -5.0332e-04, -1.3390e-03,  ...,  8.7975e-05,
          -1.5416e-04,  8.3141e-04],
         [-7.5343e-04, -1.8895e-04, -1.1237e-03,  ..., -3.0636e-04,
          -3.7553e-04,  3.0274e-05]],

        [[-6.4678e-04,  1.9781e-04, -6.9335e-04,  ..., -1.4649e-04,
           1.7762e-04,  2.1563e-04],
         [-7.7686e-04,  5.0122e-04, -2.0566e-04,  ..., -1.7252e-04,
          -5.7561e-04, -9.8718e-05],
         [-3.9353e-04,  5.0029e-04, -4.4380e-04,  ..., -5.8791e-04,
          -8.1148e-04,  1.7115e-04],
         ...,
         [-1.1056e-03,  1.4637e-05,  2.0176e-04,  ..., -9.1625e-04,
           1.8673e-04,  1.2014e-04],
         [-9.9612e-04,  1.8319e-04, -5.7821e-04,  ..., -6.0683e-04,
          -4.3151e-04,  1.5612e-04],
         [-8.2373e-04,  6.4489e-04, -4.7899e-04,  ..., -8.8270e-04,
          -8.0119e-04,  4.6149e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] where can I locate the a person is sitting down ? ', '<Img><ImageHere></Img> [refer] the location of a railroad train control box is ', '<Img><ImageHere></Img> [refer] black round steering wheel ', '<Img><ImageHere></Img> [refer] give me the location of myy love in black writing ', '<Img><ImageHere></Img> [refer] hanging lights on the ceiling ', '<Img><ImageHere></Img> [refer] where is a box of kindling & wood ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 4.1281e-02, -1.0353e+00,  7.5226e-01,  ...,  6.1774e-01,
           6.2093e-01,  9.8933e-02],
         [ 1.1711e-01, -1.2494e+00,  7.2271e-01,  ...,  6.4625e-01,
           6.5812e-01,  1.7487e-02],
         [-2.1266e-01, -9.9877e-01,  1.1309e+00,  ...,  8.8679e-01,
           3.0425e-01,  7.4367e-01],
         ...,
         [ 3.3053e-01,  6.8194e-01,  1.6226e-02,  ...,  5.2895e-01,
          -1.1428e+00,  6.1267e-04],
         [ 2.0441e-01, -5.9339e-01,  3.3956e-01,  ...,  9.7954e-01,
           1.9269e-01,  1.5428e+00],
         [ 7.4064e-01, -3.2089e-01,  3.7414e-01,  ..., -1.8339e-01,
          -1.9159e+00, -4.4315e-01]],

        [[-1.1825e-01, -2.9616e-01, -2.5078e-01,  ...,  4.9093e-01,
           9.0115e-01,  9.6519e-01],
         [-4.7262e-01, -4.2384e-01, -2.2393e-01,  ...,  5.3938e-01,
           8.8841e-01,  7.1155e-01],
         [ 4.1148e-01,  2.2925e-01, -6.2473e-02,  ...,  7.1258e-02,
          -1.4153e-01, -2.6152e-01],
         ...,
         [-8.3821e-02,  1.2443e+00, -9.8141e-02,  ...,  7.3767e-01,
           4.3099e-02,  5.7417e-01],
         [-2.0174e-01, -3.8528e-01,  1.8095e-01,  ...,  3.1776e-01,
           6.2564e-01,  6.3848e-01],
         [-2.3010e-01, -4.7134e-02,  7.6979e-03,  ...,  7.6363e-01,
           8.9408e-01,  1.1645e+00]],

        [[ 3.1542e-01,  7.5951e-01,  2.0620e-01,  ...,  3.1334e-01,
          -4.6067e-01,  2.5776e-02],
         [-7.3397e-01, -7.2032e-01,  4.1547e-01,  ...,  2.9275e-01,
          -1.0489e+00, -1.1682e+00],
         [-3.7435e-01,  1.9470e-01,  2.9815e-01,  ...,  1.3383e+00,
          -3.8443e-01, -5.0827e-01],
         ...,
         [-6.8163e-01, -5.1686e-01,  1.3752e+00,  ..., -2.9298e-01,
           3.7534e-01,  9.2344e-01],
         [-5.9965e-01, -5.9247e-02,  1.1202e+00,  ...,  6.2375e-01,
           1.3016e+00,  9.8364e-01],
         [-1.3249e+00, -5.7863e-01,  5.5677e-01,  ...,  1.1028e+00,
           6.1731e-01,  7.9495e-01]],

        [[ 7.5887e-01,  1.1922e+00,  3.6957e-01,  ...,  7.2989e-01,
          -2.5727e-01,  1.4998e+00],
         [ 4.8101e-01,  4.3076e-01,  3.6098e-01,  ...,  5.3363e-01,
           1.8821e-01,  1.2390e+00],
         [-6.6323e-01,  2.3831e-01,  7.2257e-01,  ..., -1.8117e-01,
          -6.1385e-01, -1.1133e-01],
         ...,
         [ 6.0441e-01,  1.6983e-01, -1.6677e-02,  ...,  2.3667e-01,
           1.7525e-01,  4.0267e-01],
         [-5.2832e-02, -2.7082e-02,  4.8349e-01,  ...,  5.1812e-01,
           8.9960e-02,  5.9547e-01],
         [ 1.5325e-01,  7.4605e-01,  7.6267e-01,  ...,  9.2787e-01,
           7.2845e-01,  7.7854e-01]],

        [[ 4.2723e-01,  8.9537e-02,  7.6796e-01,  ..., -4.9840e-01,
          -9.2727e-01,  2.4004e-01],
         [-2.7612e-01, -6.7266e-01,  7.1972e-01,  ...,  9.2935e-01,
           4.4301e-01,  8.9041e-01],
         [ 2.2922e-01,  4.8439e-01,  1.0507e+00,  ...,  8.5878e-01,
          -1.0579e+00, -1.0154e+00],
         ...,
         [ 8.2207e-02,  9.2458e-02,  7.2723e-01,  ...,  6.8654e-01,
          -1.5003e+00, -2.2397e-01],
         [ 5.0715e-01,  6.7279e-01,  8.7917e-01,  ...,  7.1556e-01,
          -2.6817e-01, -1.3132e+00],
         [ 3.2822e-01,  4.3289e-01,  1.0889e+00,  ...,  7.5990e-01,
          -9.2673e-01,  3.1277e-01]],

        [[-4.7245e-01, -5.6906e-01,  1.5417e+00,  ...,  4.8015e-01,
          -5.4621e-01,  4.4278e-02],
         [ 4.2116e-01,  3.9459e-01, -4.1488e-01,  ...,  7.8774e-01,
          -1.2821e-01,  8.3821e-02],
         [ 2.6275e-01,  1.2257e+00, -1.1558e+00,  ...,  1.1184e+00,
          -6.4777e-01, -6.6456e-01],
         ...,
         [-9.2613e-01,  1.4244e+00, -1.2476e+00,  ..., -5.3122e-01,
          -9.8003e-01, -5.6041e-01],
         [-3.9556e-02,  9.0245e-01, -8.5690e-01,  ...,  6.7138e-01,
          -8.5277e-02, -6.7187e-02],
         [-1.9750e-01,  9.7373e-01, -1.2857e+00,  ...,  1.4404e-01,
          -1.5176e-01, -7.0436e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] where can I locate the a person is sitting down ? ', '<Img><ImageHere></Img> [refer] the location of a railroad train control box is ', '<Img><ImageHere></Img> [refer] black round steering wheel ', '<Img><ImageHere></Img> [refer] give me the location of myy love in black writing ', '<Img><ImageHere></Img> [refer] hanging lights on the ceiling ', '<Img><ImageHere></Img> [refer] where is a box of kindling & wood ? ']
processed prompt_list:['where can I locate the a person is sitting down ?', 'the location of a railroad train control box is', 'black round steering wheel', 'give me the location of myy love in black writing', 'hanging lights on the ceiling', 'where is a box of kindling & wood ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-5.2689e-04,  7.8677e-04, -5.1593e-04,  ...,  4.7182e-04,
           4.3773e-04, -2.7015e-05],
         [-4.2997e-04,  8.6662e-04, -6.3066e-04,  ...,  5.3437e-04,
           2.7839e-04, -6.1493e-05],
         [-1.7946e-04, -2.1071e-04, -2.4066e-04,  ..., -3.7983e-04,
           4.4662e-04, -2.8974e-04],
         ...,
         [-7.1779e-04,  7.6224e-04, -5.1994e-04,  ...,  2.9316e-05,
          -5.5196e-04,  9.6343e-04],
         [ 1.4847e-05, -2.9551e-04, -2.7175e-04,  ...,  1.9701e-05,
           2.2531e-04, -3.5798e-04],
         [-6.8998e-04,  1.9943e-04, -3.4096e-04,  ..., -4.0763e-04,
          -4.9969e-04, -5.5284e-05]],

        [[-4.0803e-04,  3.5038e-04, -8.9530e-04,  ...,  1.2075e-04,
          -1.0604e-04,  9.6314e-05],
         [-3.7561e-04,  3.3779e-04, -5.9707e-04,  ..., -1.6782e-04,
          -1.6961e-04, -1.9768e-04],
         [-7.0424e-04,  8.9943e-06, -9.4674e-04,  ..., -1.3228e-04,
          -4.4276e-04, -2.3989e-04],
         ...,
         [-1.1146e-03,  3.0331e-04, -8.6611e-04,  ..., -2.4801e-04,
          -4.0289e-04, -5.5000e-05],
         [-5.8192e-04,  3.4596e-04, -5.3049e-04,  ..., -3.6501e-04,
          -2.6786e-04, -6.1859e-04],
         [-6.2354e-04,  1.6076e-04, -7.8704e-04,  ..., -1.0064e-04,
          -2.3526e-04, -2.7090e-04]],

        [[-6.4698e-04,  2.8734e-04, -6.6030e-04,  ..., -8.3584e-04,
          -5.4851e-04, -1.5770e-04],
         [ 9.7305e-05,  4.4023e-04, -1.1065e-04,  ..., -3.8445e-04,
          -3.4799e-04,  7.3664e-06],
         [-2.6641e-04,  7.2241e-04, -2.5708e-04,  ..., -4.0980e-04,
          -3.3966e-04,  3.4900e-04],
         ...,
         [-9.7308e-04,  1.0387e-03, -3.6114e-04,  ..., -1.0722e-03,
          -2.7498e-04, -6.2654e-04],
         [-9.6209e-04,  8.1265e-04, -4.2709e-04,  ..., -8.1981e-04,
          -3.2324e-04,  1.6532e-04],
         [-7.9111e-04,  5.3626e-05, -7.3748e-04,  ..., -3.1844e-04,
          -9.6397e-05,  6.2358e-04]],

        [[-1.2541e-03,  1.9299e-04, -6.4551e-04,  ..., -5.8963e-04,
          -5.2480e-05, -3.4513e-05],
         [-1.1156e-03, -4.1178e-05, -3.0049e-04,  ..., -7.5088e-04,
           1.4657e-04, -2.8816e-04],
         [-1.1715e-03,  4.3141e-04, -3.0319e-04,  ..., -6.0446e-04,
          -4.1895e-04,  7.8074e-05],
         ...,
         [-6.9746e-04, -3.2684e-04,  6.8866e-05,  ...,  1.8822e-05,
          -7.6407e-04,  5.5782e-05],
         [-1.0092e-03,  1.0197e-03, -8.0340e-04,  ...,  2.7602e-04,
           4.9229e-04,  9.5683e-05],
         [-1.0629e-03,  4.0728e-05, -6.3352e-04,  ..., -5.0853e-04,
          -6.5069e-04,  5.0138e-04]],

        [[-1.3972e-04,  9.3511e-04, -5.5460e-04,  ..., -2.5827e-04,
           7.7387e-04,  4.4282e-04],
         [-6.1629e-04,  4.7341e-04, -1.1011e-03,  ...,  1.9170e-04,
          -2.7076e-04,  6.3725e-04],
         [-1.3775e-04,  7.3133e-04, -7.6178e-04,  ...,  3.2070e-04,
          -8.7431e-05, -4.2615e-05],
         ...,
         [-4.6843e-04,  1.2089e-04, -3.6226e-04,  ..., -4.6204e-04,
          -5.0366e-04,  7.5336e-04],
         [ 1.0351e-04,  4.3190e-04, -9.5381e-04,  ..., -5.8952e-04,
          -8.9345e-05,  7.8381e-04],
         [ 7.6186e-05,  2.3366e-04, -5.7911e-04,  ..., -2.6796e-04,
           2.6914e-04, -2.0103e-04]],

        [[-8.4166e-04,  5.8807e-04, -1.2513e-03,  ...,  2.0593e-05,
          -7.5888e-04,  1.1152e-03],
         [-3.4156e-04,  1.0646e-03, -7.8004e-04,  ...,  9.7191e-06,
           1.5246e-05,  6.9840e-04],
         [ 7.7088e-05,  1.0058e-03, -3.8764e-04,  ..., -1.7751e-04,
           1.9573e-04,  3.7193e-04],
         ...,
         [-1.1776e-04,  8.9085e-04, -7.4854e-04,  ..., -3.8708e-04,
          -1.6662e-04, -1.6449e-04],
         [-1.0456e-04,  8.0019e-04, -7.5534e-04,  ...,  7.8432e-05,
           1.3754e-04,  5.3632e-04],
         [-2.4993e-04,  9.1148e-04, -7.0829e-04,  ..., -3.8306e-05,
           3.1837e-04,  2.4540e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] a silver sink here ', '<Img><ImageHere></Img> [refer] give me the location of flavor of the right bottle ', '<Img><ImageHere></Img> [refer] could you tell me the location for snow is on the ground ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of the bowl is white ', '<Img><ImageHere></Img> [refer] where can I locate the person wearing blue shirt ? ', '<Img><ImageHere></Img> [refer] where is the woman is watching the little girl play ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.0187,  0.0990, -0.5469,  ...,  0.4398, -1.1934, -0.0521],
         [-0.3466,  0.4754, -0.0473,  ...,  0.1179, -0.3482, -0.4018],
         [-0.0613,  0.5136,  0.2998,  ..., -0.1063, -0.7726, -0.0901],
         ...,
         [-0.9791, -0.2851, -0.6223,  ..., -0.1126, -1.8170,  0.1150],
         [-0.5029,  0.3047, -0.2827,  ...,  0.2249, -0.6209,  0.1130],
         [ 0.0459, -0.1110,  0.3289,  ...,  0.5492,  0.2804,  0.6832]],

        [[ 0.3211,  0.4952,  1.2172,  ...,  0.4034, -0.0309,  0.5316],
         [-0.1040,  0.4477,  1.0962,  ..., -0.6947, -0.5587,  0.2152],
         [-0.0724,  1.3324,  0.6695,  ..., -0.6284, -1.2396, -0.4247],
         ...,
         [ 0.3120,  0.4482,  0.9990,  ..., -1.5693, -0.6188, -0.1198],
         [-0.0380,  1.4477,  0.6168,  ..., -0.5296, -0.3443, -0.3312],
         [ 0.0141, -0.4784, -0.2255,  ...,  0.5715, -0.2446, -0.0120]],

        [[ 0.0326,  0.5316,  1.1437,  ...,  1.1448, -0.9897, -0.3591],
         [-0.0127,  0.9679,  0.4775,  ...,  0.4842,  0.2635, -0.4726],
         [ 0.0840, -0.7701, -0.1865,  ...,  0.9989,  0.3617,  0.0121],
         ...,
         [ 0.2360, -0.0699,  0.2253,  ...,  0.5218,  0.0160, -0.2898],
         [ 0.3269, -1.2826, -0.5773,  ...,  1.0980, -0.4957,  0.5292],
         [ 0.4794, -0.2983,  0.5357,  ...,  0.8954,  0.5301,  0.9520]],

        [[-0.2653, -1.0342,  0.2093,  ...,  1.3418,  0.4158,  0.7368],
         [-0.0885,  0.1875,  0.2748,  ...,  0.7602,  0.3378,  0.1186],
         [-1.1428,  0.1805,  1.1927,  ..., -0.0351, -0.8704, -0.7726],
         ...,
         [ 0.2162,  0.3848,  0.9863,  ..., -0.1521, -0.3343,  0.3411],
         [-0.0877,  0.1735,  1.1508,  ..., -0.3423, -0.3197, -0.0064],
         [ 0.0285, -0.3941,  0.1848,  ...,  1.7938,  0.7274,  0.7631]],

        [[-0.8689, -1.3480, -0.4260,  ...,  0.4163,  0.0852,  2.0659],
         [-0.9674,  0.9901,  0.5533,  ...,  0.3370, -0.2116, -0.9567],
         [ 0.4846,  0.9391, -1.0704,  ...,  0.3775,  1.3295, -0.3956],
         ...,
         [-1.6103,  0.2095,  1.1733,  ...,  0.1792, -1.5757, -0.1726],
         [ 0.0035,  0.4047,  0.2155,  ...,  0.2158, -0.8780,  0.4650],
         [-1.2711, -1.5803, -0.6242,  ...,  0.5489, -0.1140,  1.9008]],

        [[ 0.5148, -0.6280,  0.6577,  ...,  0.9715, -0.3122,  1.0458],
         [ 0.4718, -0.5781,  0.8256,  ...,  0.7855, -0.3596,  1.0244],
         [ 0.9357, -0.4550,  0.7502,  ...,  0.6177, -0.0183, -1.3271],
         ...,
         [ 1.1237,  0.9602,  1.1943,  ..., -0.1387,  0.0355,  1.1486],
         [ 0.3277, -1.0053,  0.2758,  ...,  1.2825, -0.3904,  1.0969],
         [ 0.4780, -0.7512,  0.5677,  ...,  1.1010, -0.4008,  1.0159]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] a silver sink here ', '<Img><ImageHere></Img> [refer] give me the location of flavor of the right bottle ', '<Img><ImageHere></Img> [refer] could you tell me the location for snow is on the ground ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of the bowl is white ', '<Img><ImageHere></Img> [refer] where can I locate the person wearing blue shirt ? ', '<Img><ImageHere></Img> [refer] where is the woman is watching the little girl play ? ']
processed prompt_list:['a silver sink here', 'give me the location of flavor of the right bottle', 'could you tell me the location for snow is on the ground ?', 'from this image, tell me the location of the bowl is white', 'where can I locate the person wearing blue shirt ?', 'where is the woman is watching the little girl play ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-5.7747e-04,  7.2483e-04, -4.4183e-04,  ...,  3.1158e-05,
          -8.0556e-05, -2.1876e-04],
         [-6.0634e-04,  5.3408e-04, -6.0012e-04,  ..., -1.0780e-04,
          -3.6347e-04,  3.1513e-04],
         [-4.0437e-04,  1.0258e-03, -3.5227e-04,  ..., -7.1578e-05,
          -1.9920e-04,  7.6477e-04],
         ...,
         [-4.8084e-04,  2.4833e-04, -5.6186e-04,  ...,  2.8452e-04,
           1.2668e-04,  2.3479e-04],
         [-3.8662e-04, -3.4400e-05, -5.8516e-04,  ..., -3.5876e-04,
           1.4867e-04,  1.4451e-04],
         [-7.1728e-04, -4.9417e-05, -8.6264e-04,  ..., -1.3249e-04,
          -5.0787e-06,  2.7809e-04]],

        [[-1.3229e-03,  1.3031e-04, -1.2638e-03,  ..., -1.0468e-04,
          -2.7064e-04,  6.8673e-04],
         [-1.1660e-03,  6.9301e-04, -1.0828e-03,  ..., -7.4132e-04,
          -1.7636e-04,  8.0409e-05],
         [-1.3181e-03,  1.3614e-04, -6.9399e-04,  ..., -1.0518e-03,
           3.6064e-04, -5.5228e-05],
         ...,
         [-1.3084e-03,  3.5892e-04, -8.3652e-04,  ..., -7.8627e-04,
          -1.0223e-04,  1.1695e-04],
         [-1.6266e-03, -2.3469e-05, -1.0106e-03,  ..., -1.2060e-03,
           1.2172e-04, -1.0867e-04],
         [-6.4554e-04,  8.4351e-04, -8.1936e-04,  ..., -1.4883e-04,
           3.8837e-04,  4.8498e-04]],

        [[-5.7191e-04, -5.0957e-05, -9.1183e-04,  ..., -6.4227e-04,
          -3.6868e-04,  5.6276e-05],
         [-5.4960e-04,  9.2032e-04, -8.1002e-04,  ..., -2.5874e-04,
          -8.9970e-04,  5.3905e-04],
         [-7.7713e-04,  4.0067e-06, -5.3377e-04,  ..., -3.7359e-04,
          -3.4222e-04, -1.3831e-04],
         ...,
         [-5.9711e-04,  5.5976e-04, -5.8753e-04,  ..., -6.3590e-04,
          -7.4028e-04,  6.4787e-04],
         [-6.4371e-04, -2.6440e-05, -5.6532e-04,  ..., -6.6461e-04,
          -2.3064e-04, -1.6247e-04],
         [-7.1397e-04,  2.2861e-04, -1.0299e-03,  ...,  1.1692e-04,
          -2.9072e-04,  3.3133e-04]],

        [[-5.3255e-04,  2.1669e-04, -8.0717e-04,  ..., -3.8261e-04,
          -2.3803e-04,  3.5185e-04],
         [ 4.8112e-05,  6.6145e-04, -1.4531e-03,  ...,  3.7611e-04,
          -6.8331e-04,  5.0654e-04],
         [-4.9421e-04,  6.2955e-04, -2.9333e-04,  ..., -6.8198e-04,
          -8.1589e-04, -2.1788e-05],
         ...,
         [-3.1989e-04,  5.4573e-04, -4.2780e-04,  ..., -2.1044e-04,
           4.5806e-05,  1.1268e-03],
         [ 1.3985e-04,  6.0193e-04, -3.4276e-04,  ..., -3.4539e-04,
           8.9811e-05,  5.7278e-04],
         [-7.1799e-04,  1.7354e-04, -1.1778e-03,  ..., -1.8557e-04,
          -2.7467e-04,  4.2451e-04]],

        [[-6.0298e-04,  5.3022e-04, -6.4577e-04,  ..., -3.1528e-04,
          -2.6734e-05,  1.6442e-04],
         [-9.3976e-04,  3.1103e-04, -5.6767e-04,  ..., -4.7793e-05,
          -8.9921e-04,  1.2928e-04],
         [-1.0599e-03,  9.3854e-04, -7.5551e-04,  ..., -2.8075e-04,
          -3.3021e-04,  1.3918e-04],
         ...,
         [-3.5869e-04,  7.4876e-04, -2.3580e-04,  ..., -6.6033e-04,
          -1.6176e-04,  1.7554e-04],
         [-2.4718e-04,  7.4226e-04, -8.4132e-04,  ...,  2.1308e-04,
          -3.5145e-05,  4.5272e-04],
         [-5.6221e-04,  4.3271e-04, -5.6364e-04,  ..., -3.8566e-04,
           6.5856e-07,  1.4756e-04]],

        [[-9.6166e-04,  3.2443e-04, -6.0757e-04,  ...,  2.3448e-04,
          -1.6589e-04,  5.8858e-04],
         [-8.7561e-04,  3.5186e-04, -6.1635e-04,  ...,  2.9155e-04,
          -1.7747e-04,  5.7694e-04],
         [-6.8510e-04,  3.5354e-04, -1.2555e-03,  ...,  2.8044e-04,
          -2.2383e-04,  5.7235e-04],
         ...,
         [-7.5985e-04,  3.4789e-04, -3.1776e-04,  ..., -1.0071e-03,
          -7.1107e-04,  4.5835e-04],
         [-9.7902e-04,  2.0898e-04, -3.5991e-04,  ...,  2.0092e-04,
          -3.4178e-05,  5.5443e-04],
         [-8.9923e-04,  2.9231e-04, -5.2720e-04,  ...,  3.2410e-04,
          -1.2136e-04,  6.5864e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
Train: data epoch: [0]  [  50/1000]  eta: 0:21:29  lr: 0.000001  loss: 5.8106  time: 0.9501  data: 0.0000  max mem: 36435
instruction_input prompt:['<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.4223, -1.2760, -0.7945,  ...,  1.0806, -1.1490,  1.0038],
         [ 0.0247,  0.0579,  0.2215,  ...,  0.7396, -0.2916, -0.1737],
         [ 0.9343, -0.4961, -1.4459,  ..., -0.0989, -1.1503,  1.2091],
         ...,
         [-0.5096,  0.2942,  0.5790,  ...,  0.3692, -1.4359, -0.0304],
         [ 0.2720, -0.4157,  0.4391,  ...,  0.7718,  0.2045, -0.2315],
         [ 0.2359, -0.3504,  0.4227,  ...,  0.7277,  0.2885, -0.2095]],

        [[ 0.4229, -0.7968, -0.4011,  ..., -0.1903,  0.4818,  0.3958],
         [ 0.3919,  0.5693, -1.4036,  ..., -0.8792, -0.4063,  0.4721],
         [ 0.4337,  0.6080, -1.1071,  ..., -0.2680, -0.3856,  0.5914],
         ...,
         [ 0.0527, -0.1422, -0.0272,  ...,  0.2095, -0.0579,  0.0267],
         [-0.2935, -0.5220,  0.3378,  ...,  0.5862, -0.2329, -0.1597],
         [-0.2934, -0.5266,  0.3538,  ...,  0.6336, -0.2027, -0.1387]],

        [[ 0.5976, -0.4706,  0.6106,  ..., -0.3002,  0.4837,  0.3200],
         [ 0.4140,  0.2949,  0.6325,  ..., -0.3281, -0.1101,  1.3799],
         [ 0.5828, -0.2587,  0.9070,  ..., -0.1779,  0.4344,  0.6685],
         ...,
         [ 0.4580,  0.5034,  0.6967,  ...,  0.0986,  0.1621, -0.2083],
         [-0.1512,  0.0176,  0.2180,  ...,  0.3536, -0.3796,  0.7007],
         [ 0.5205,  0.0518,  0.2877,  ..., -0.1658, -0.2887,  1.3668]],

        [[-0.1383,  0.9848,  0.0932,  ...,  0.2871,  0.0773, -0.5899],
         [-0.4362,  1.4329,  0.0038,  ...,  0.2936, -0.1804, -0.3741],
         [-0.1813,  1.3579, -0.1007,  ...,  0.3711,  0.0719, -0.4399],
         ...,
         [-1.3730, -0.6845,  1.2852,  ...,  0.6403, -0.8302, -0.6033],
         [ 0.8785,  0.6714,  0.0929,  ...,  0.1334, -0.5422,  1.8346],
         [ 0.9886, -0.1361, -0.5970,  ...,  0.0308, -0.1106,  2.1182]],

        [[ 0.2612, -0.8751, -0.1134,  ...,  1.8006, -0.3730,  1.6345],
         [-0.6226,  0.1423,  0.2556,  ...,  0.1118,  0.6454, -0.1887],
         [ 1.1912,  0.4596, -1.3426,  ...,  0.4887, -1.0717,  1.7575],
         ...,
         [ 0.0576, -0.1513,  0.0459,  ...,  0.2206, -0.0319,  0.0084],
         [ 0.4816, -0.1823, -0.7736,  ...,  0.4849, -0.3399,  0.1867],
         [ 0.4885, -0.1936, -0.7665,  ...,  0.4998, -0.3357,  0.1760]],

        [[ 0.6259, -0.5932, -0.7971,  ...,  0.0811, -0.7352,  2.0081],
         [ 0.0043,  0.0641, -1.4586,  ..., -0.7091, -0.9344,  1.3948],
         [ 0.6147, -0.4279, -0.0179,  ..., -1.5469, -0.8229,  1.6553],
         ...,
         [-0.0128, -0.1461,  0.0457,  ...,  0.2148, -0.0648,  0.0132],
         [ 0.0339, -0.4201, -0.2263,  ...,  0.3683, -0.2985,  0.0735],
         [ 0.0096, -0.4136, -0.2226,  ...,  0.4079, -0.2568,  0.0598]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ']
processed prompt_list:['A short image description:', 'Use a few words to illustrate what is happening in the picture.', 'Summarize this image in a few words.', 'Write a description for the photo.', 'An image that shows', 'Use a few words to illustrate what is happening in the picture.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-2.3613e-04,  7.0063e-04, -4.8252e-04,  ..., -6.2641e-05,
          -3.4268e-04,  1.3669e-05],
         [-8.1112e-04,  3.1270e-04, -1.0452e-03,  ...,  4.1006e-04,
           3.1767e-04,  4.0888e-04],
         [-7.8806e-05,  7.3798e-05,  6.1471e-04,  ..., -3.1117e-04,
          -4.8666e-04, -6.2329e-04],
         ...,
         [-6.6772e-04,  3.1879e-04, -2.8077e-04,  ..., -6.9307e-04,
          -5.5484e-04,  3.0540e-04],
         [-3.1255e-04,  1.7177e-04, -9.7574e-04,  ...,  1.1091e-04,
           9.4356e-04,  1.0475e-04],
         [-2.5226e-04,  8.3120e-05, -9.4183e-04,  ...,  1.3276e-04,
           9.6361e-04,  7.5193e-05]],

        [[-2.3938e-04,  4.6584e-04, -1.0246e-03,  ..., -2.7840e-04,
          -6.8882e-05,  1.7639e-05],
         [-6.7452e-04,  3.1161e-04, -9.0272e-04,  ...,  1.2896e-04,
           2.5936e-04,  6.1124e-04],
         [-3.4608e-04,  1.3035e-04, -4.3362e-04,  ..., -3.4465e-04,
           1.8835e-04, -1.3465e-04],
         ...,
         [ 5.5753e-04, -1.0704e-03,  1.1607e-03,  ..., -2.7948e-04,
          -1.8507e-05, -7.8662e-04],
         [-6.2233e-04,  6.9965e-04, -8.4669e-04,  ...,  2.4832e-04,
           4.7624e-04,  1.5890e-05],
         [-6.0099e-04,  7.3760e-04, -8.6852e-04,  ...,  2.7630e-04,
           4.7434e-04,  7.3652e-08]],

        [[-9.0163e-04,  3.8778e-04, -2.5525e-04,  ..., -6.2321e-04,
          -5.2245e-04,  4.8281e-04],
         [-6.7903e-04,  2.9823e-04, -4.6977e-04,  ..., -3.3429e-04,
          -1.8162e-04,  7.1841e-04],
         [-6.0228e-04,  2.8876e-04, -1.3141e-04,  ..., -5.1087e-04,
          -7.5464e-04,  5.5229e-04],
         ...,
         [-8.0174e-04,  7.3897e-04, -4.5651e-04,  ..., -4.6982e-04,
          -4.7719e-04, -1.3505e-04],
         [-7.8907e-04,  5.4279e-04, -9.3685e-04,  ..., -6.8339e-04,
          -9.8036e-04,  8.2733e-04],
         [-6.9396e-04,  2.7806e-04, -5.8501e-04,  ..., -3.2922e-04,
          -2.4561e-04,  7.4749e-04]],

        [[-5.5451e-04,  3.7286e-04, -5.5738e-04,  ..., -4.1994e-04,
          -6.2860e-04,  3.4991e-04],
         [-2.6846e-04,  4.4846e-04, -6.5405e-04,  ..., -5.2114e-04,
          -6.9708e-04,  3.7125e-04],
         [-3.8228e-04,  4.6093e-04, -7.1913e-04,  ..., -4.3153e-04,
          -6.0677e-04,  2.9884e-04],
         ...,
         [-1.1645e-03, -2.2256e-04,  3.7429e-04,  ..., -7.8471e-04,
           1.0748e-04,  7.4241e-04],
         [-8.8840e-04, -3.3481e-04, -5.8925e-04,  ..., -6.5488e-04,
           9.9576e-05,  7.9376e-04],
         [-1.2219e-03, -1.8661e-04, -1.5043e-03,  ..., -3.0340e-05,
           9.0335e-04,  8.8576e-04]],

        [[-1.0176e-03,  1.2618e-05, -6.1361e-04,  ..., -6.1598e-04,
          -9.5788e-05, -3.6063e-04],
         [-6.3484e-04,  8.3396e-04, -1.2962e-03,  ...,  3.7040e-05,
           4.2433e-04,  5.5329e-04],
         [-1.0454e-03, -2.1522e-05, -1.1146e-03,  ..., -3.7660e-04,
           2.8292e-04,  5.3567e-05],
         ...,
         [ 5.6677e-04, -1.0210e-03,  1.1373e-03,  ..., -2.9627e-04,
          -5.1713e-06, -7.7538e-04],
         [-1.0168e-03,  7.1311e-04, -6.8705e-04,  ...,  3.7551e-04,
           1.5624e-04,  2.6253e-05],
         [-9.9390e-04,  7.1487e-04, -6.7129e-04,  ...,  3.9652e-04,
           1.5361e-04,  7.2467e-06]],

        [[-1.0541e-03,  6.8490e-05, -9.2521e-04,  ...,  5.6688e-04,
           4.6900e-04,  4.8488e-04],
         [-1.5738e-03, -1.7866e-05, -1.1813e-03,  ...,  8.0826e-04,
           6.2195e-04,  6.5846e-04],
         [-9.3373e-04, -5.7708e-05, -9.7252e-04,  ..., -1.5219e-04,
           1.0690e-03,  5.2930e-04],
         ...,
         [ 5.4823e-04, -1.0671e-03,  1.1391e-03,  ..., -3.0020e-04,
           1.9385e-05, -7.5548e-04],
         [-7.4278e-04,  9.1422e-04, -7.4610e-04,  ...,  5.5851e-04,
           1.9329e-04,  1.4936e-04],
         [-7.2168e-04,  9.2347e-04, -7.1409e-04,  ...,  5.6643e-04,
           1.9680e-04,  1.2843e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 3.5358e-01,  3.2266e-01, -1.1807e+00,  ...,  3.9084e-01,
          -9.9794e-01,  1.1493e+00],
         [-2.2884e-01,  4.5803e-01,  1.9379e-01,  ...,  4.2643e-01,
          -8.4813e-01,  1.8708e+00],
         [-3.9324e-01,  1.0289e+00, -3.6471e-01,  ...,  1.3399e+00,
          -1.9477e-01,  1.1013e+00],
         ...,
         [-9.4796e-02,  2.0054e-01,  4.0390e-01,  ...,  8.3297e-01,
          -4.5542e-02,  3.1998e-01],
         [ 2.8572e-01, -3.7639e-01,  1.8652e-02,  ...,  4.2441e-01,
          -2.5190e-01, -2.1077e-01],
         [ 2.8059e-01, -3.7720e-01,  9.7701e-03,  ...,  4.1517e-01,
          -2.4033e-01, -2.1461e-01]],

        [[-1.0126e-01,  3.8426e-01,  1.5324e+00,  ...,  1.2627e-01,
          -8.2747e-01,  3.9823e-01],
         [-2.0386e-01, -1.7022e-01, -1.7850e-01,  ...,  3.2485e-01,
          -3.0087e-01, -3.7633e-01],
         [ 1.0055e+00,  1.0716e+00, -6.4031e-01,  ..., -3.9467e-01,
          -9.8034e-01,  1.1333e+00],
         ...,
         [ 2.2992e-02, -1.6083e-01, -1.0313e-02,  ...,  1.6416e-01,
          -6.7858e-02, -1.4077e-02],
         [-7.4510e-02,  7.3023e-02,  2.4348e-02,  ...,  7.4323e-01,
          -5.5900e-02,  1.0721e-01],
         [ 7.2918e-01,  3.5097e-01,  1.1416e+00,  ...,  5.5825e-01,
          -8.0682e-01, -7.7205e-02]],

        [[ 7.5580e-01, -1.5943e+00, -1.7468e-01,  ...,  1.0335e+00,
           3.3530e-01,  4.3003e-01],
         [-4.3317e-01,  3.9142e-01, -1.3663e-01,  ...,  4.8719e-01,
           5.8525e-02,  1.6175e-01],
         [ 4.9524e-01, -4.5138e-01, -8.5323e-01,  ..., -1.3648e-01,
          -6.5674e-01,  1.2981e+00],
         ...,
         [ 3.6449e-02, -1.4678e-01,  2.8702e-02,  ...,  1.8792e-01,
          -5.9616e-02,  2.7640e-02],
         [-2.0806e-02,  4.5697e-02,  1.2424e-01,  ...,  3.9968e-01,
          -4.2576e-01, -3.8347e-01],
         [ 1.4043e-02,  8.5455e-02,  1.6806e-01,  ...,  4.2028e-01,
          -4.4378e-01, -3.9162e-01]],

        [[ 4.4423e-01, -9.3105e-01,  3.8389e-01,  ...,  1.5117e+00,
           1.5374e-01, -1.6499e-01],
         [ 5.1669e-01, -5.7271e-01, -1.0157e+00,  ...,  7.7135e-02,
          -6.9598e-01, -7.2352e-02],
         [ 1.3654e+00, -4.1698e-01, -1.8989e-01,  ..., -4.4350e-01,
          -2.0850e-01,  1.3951e-01],
         ...,
         [ 5.5608e-02, -1.7348e-01,  2.0551e-02,  ...,  1.5907e-01,
          -7.1989e-02, -5.5517e-03],
         [-1.7601e-01,  5.1862e-04,  5.9190e-01,  ...,  6.5139e-01,
           1.4527e-01,  1.3178e-01],
         [-2.0879e-01,  1.0534e-01,  5.5716e-01,  ...,  6.6485e-01,
           1.3745e-01, -4.0430e-03]],

        [[ 2.9726e-01, -4.5141e-02,  1.4790e-01,  ...,  5.3685e-01,
           1.4286e-01,  1.2058e+00],
         [ 4.5175e-01,  1.1141e+00, -1.7696e+00,  ..., -1.4147e-01,
          -5.9932e-01,  1.5890e+00],
         [ 1.0867e+00,  4.4601e-01,  2.0538e-01,  ..., -1.7828e+00,
          -9.1371e-01,  1.2162e+00],
         ...,
         [ 2.7182e-02, -1.9800e-01,  5.4026e-02,  ...,  2.3763e-01,
          -6.7092e-02, -1.0530e-02],
         [ 3.3172e-01,  3.3697e-01,  3.5899e-01,  ...,  4.4522e-01,
          -5.9012e-01, -4.9190e-02],
         [ 3.1208e-01,  3.2620e-01,  3.6402e-01,  ...,  4.7026e-01,
          -5.5543e-01, -6.9413e-02]],

        [[ 1.1311e+00, -7.8535e-02,  1.0833e+00,  ...,  5.5839e-01,
           2.3719e-01,  4.2010e-01],
         [ 4.2083e-01,  2.9780e-01, -1.3678e-01,  ...,  1.9103e-01,
           2.8609e-01,  6.6694e-01],
         [ 1.3390e+00,  5.1895e-01,  8.9987e-01,  ..., -1.3875e+00,
          -2.1729e-02,  1.5201e-01],
         ...,
         [ 3.1441e-03, -1.6200e-01,  1.6642e-02,  ...,  1.8764e-01,
          -8.0436e-02,  5.9255e-03],
         [ 4.6544e-01, -4.6539e-01,  2.6655e-01,  ...,  8.1518e-01,
          -1.9074e-01,  2.9278e-01],
         [ 4.6154e-01, -4.5897e-01,  2.7534e-01,  ...,  8.1159e-01,
          -1.8488e-01,  3.0684e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Write a description for the photo. ', '<Img><ImageHere></Img> [caption] A photo of  ', '<Img><ImageHere></Img> [caption] Use a few words to illustrate what is happening in the picture. ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] A short image caption: ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ']
processed prompt_list:['Write a description for the photo.', 'A photo of', 'Use a few words to illustrate what is happening in the picture.', 'Using language, provide a short account of the image.', 'A short image caption:', 'Using language, provide a short account of the image.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-9.2849e-04,  2.1017e-04, -1.0831e-03,  ...,  2.1578e-04,
           3.9864e-04,  3.2516e-04],
         [-1.1734e-03, -2.8333e-04, -1.2639e-03,  ..., -6.9392e-04,
           4.2417e-04,  2.4592e-04],
         [-4.1325e-04, -8.7117e-06, -9.5402e-04,  ..., -3.1641e-04,
           3.7825e-04, -1.1506e-05],
         ...,
         [-8.1743e-04,  7.2958e-04, -9.8646e-04,  ..., -2.6309e-04,
           5.5387e-04,  4.3784e-04],
         [-2.4297e-04,  1.5615e-04, -1.0513e-03,  ...,  2.9185e-04,
           7.5971e-04,  2.2787e-04],
         [-2.1881e-04,  1.3807e-04, -1.0360e-03,  ...,  2.9183e-04,
           7.6918e-04,  2.1537e-04]],

        [[-1.3321e-03,  1.0518e-04,  2.1131e-04,  ..., -7.5065e-04,
           9.8288e-05, -3.3111e-04],
         [-1.1044e-03,  4.1535e-04, -8.4974e-04,  ...,  1.9101e-04,
           5.1556e-04,  4.4820e-04],
         [-1.1973e-03,  1.7905e-04, -6.3831e-04,  ...,  5.4419e-04,
           4.6297e-04,  7.0043e-04],
         ...,
         [ 5.7700e-04, -1.0403e-03,  1.1277e-03,  ..., -2.6736e-04,
           1.8707e-05, -7.4522e-04],
         [-7.5489e-04,  7.0640e-04, -8.1669e-04,  ...,  5.7425e-04,
           1.2681e-04,  3.0804e-04],
         [-1.5876e-03,  1.6669e-04, -3.9025e-04,  ..., -3.1030e-04,
          -5.7556e-05, -6.5854e-05]],

        [[-2.5155e-04,  2.2799e-04, -1.0424e-03,  ..., -4.5240e-04,
          -1.3743e-04, -7.8593e-05],
         [-9.1372e-04,  4.6777e-04, -9.6495e-04,  ...,  3.7906e-04,
           5.3087e-04,  1.8976e-04],
         [-5.1235e-04,  9.1142e-05, -1.3093e-03,  ..., -1.4158e-04,
           5.0662e-04,  1.9756e-04],
         ...,
         [ 5.6572e-04, -1.0564e-03,  1.1409e-03,  ..., -2.7811e-04,
           9.2031e-06, -7.8280e-04],
         [-5.9803e-04,  8.3581e-04, -4.8696e-04,  ...,  3.8089e-04,
           2.6721e-04,  2.3624e-04],
         [-5.5521e-04,  8.6746e-04, -5.0966e-04,  ...,  4.1878e-04,
           2.5151e-04,  2.1686e-04]],

        [[-2.3966e-04, -1.6568e-04, -1.0438e-03,  ...,  1.7745e-04,
          -2.2479e-04,  8.0021e-04],
         [-7.1379e-04, -2.7854e-04, -1.0420e-03,  ...,  2.6666e-04,
           1.7987e-04,  1.2148e-03],
         [-3.8951e-04, -1.0379e-04, -8.4935e-04,  ...,  5.7154e-05,
           2.1721e-04,  3.8095e-04],
         ...,
         [ 5.8158e-04, -1.0609e-03,  1.1234e-03,  ..., -2.6595e-04,
           4.9873e-06, -7.8932e-04],
         [-8.8395e-04,  7.5673e-04, -4.5741e-04,  ..., -6.5454e-05,
           1.9642e-04, -9.4057e-06],
         [-8.3330e-04,  8.2333e-04, -4.1760e-04,  ...,  4.5612e-05,
           2.4477e-04, -5.1547e-05]],

        [[-4.3817e-04,  7.2703e-04, -8.0192e-04,  ..., -2.5761e-04,
          -1.3095e-04, -4.5260e-05],
         [-9.6033e-04,  9.6723e-05, -7.6570e-04,  ...,  2.5840e-04,
           6.3388e-04,  3.4168e-04],
         [-6.5819e-04, -2.8042e-04, -4.0769e-04,  ..., -9.2460e-04,
           1.1255e-03,  3.1651e-04],
         ...,
         [ 5.7141e-04, -1.0412e-03,  1.1315e-03,  ..., -2.8782e-04,
           7.1757e-06, -7.4589e-04],
         [-7.1048e-04,  7.3844e-04, -8.2471e-04,  ...,  6.3702e-04,
           3.6188e-04, -1.6530e-05],
         [-7.0273e-04,  7.4443e-04, -8.2404e-04,  ...,  6.5819e-04,
           3.7340e-04, -1.4719e-05]],

        [[-8.1804e-04, -5.2724e-04, -1.2795e-03,  ..., -3.3418e-04,
          -4.4036e-05,  3.3370e-04],
         [-9.0143e-04, -3.1257e-04, -1.1940e-03,  ..., -1.4113e-04,
           4.0705e-04,  7.9025e-04],
         [-8.1392e-04, -5.5832e-04, -5.8355e-04,  ..., -1.2832e-03,
           5.5309e-04,  2.7321e-04],
         ...,
         [ 5.7272e-04, -1.0508e-03,  1.1322e-03,  ..., -2.9203e-04,
          -1.2503e-05, -7.7797e-04],
         [-8.5350e-04,  7.5429e-04, -5.5539e-04,  ...,  1.6662e-04,
           5.5967e-04, -4.7143e-05],
         [-8.4183e-04,  7.7634e-04, -5.4429e-04,  ...,  2.0773e-04,
           5.5284e-04, -6.5961e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to reference? ', '<Img><ImageHere></Img> [vqa] what is the genre of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the title of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to science & math? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what type of book is this? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to politics & social sciences? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.2116e-01, -7.0597e-01, -5.6864e-01,  ...,  6.6555e-01,
          -4.3714e-02, -1.0497e+00],
         [-2.8209e-01, -4.5725e-01, -7.2110e-01,  ...,  6.3999e-01,
          -9.0516e-02, -9.4333e-01],
         [ 3.5672e-01, -5.1711e-01, -1.4220e+00,  ..., -9.1316e-02,
           6.7350e-01, -5.7643e-02],
         ...,
         [-4.8040e-01, -8.9133e-01, -2.4282e-01,  ..., -5.8474e-02,
          -6.9320e-01, -1.9006e+00],
         [-1.3785e-01, -8.0845e-01, -3.9781e-01,  ..., -6.7536e-02,
          -2.8740e-01, -1.0433e+00],
         [ 6.6497e-01,  1.2206e-01, -8.6120e-01,  ...,  2.7967e-02,
           7.8041e-01, -6.9656e-01]],

        [[-2.7574e-01, -8.4617e-01,  1.3402e-01,  ...,  1.1683e-03,
          -1.4424e-01, -2.9984e-01],
         [-3.3228e-01, -1.4161e+00, -5.8961e-01,  ..., -2.9815e-01,
          -6.3041e-01, -1.0810e+00],
         [-1.8277e-01, -2.1592e-01, -7.3696e-02,  ...,  1.9873e-01,
          -1.0742e+00,  2.8947e-01],
         ...,
         [-4.1336e-01, -2.0818e-01,  3.7547e-03,  ..., -3.3777e-01,
          -1.1480e+00,  1.5275e-01],
         [ 1.8835e-01, -7.8975e-01, -6.2476e-01,  ..., -7.6709e-01,
          -1.2365e+00, -9.6357e-01],
         [-1.5855e-01, -7.1262e-01, -1.4632e-01,  ..., -1.5236e-01,
           7.8144e-02,  3.1747e-01]],

        [[ 7.4708e-01, -7.0875e-01, -2.2276e-01,  ...,  1.3491e+00,
          -4.1608e-01,  7.0486e-01],
         [ 7.9723e-01, -4.6334e-01, -2.7502e-02,  ...,  8.6581e-01,
          -7.3187e-01, -1.8746e-01],
         [-2.0287e-01, -1.3000e-01, -1.3006e-01,  ...,  1.0655e+00,
           1.2804e-01, -6.4243e-01],
         ...,
         [-9.1318e-01,  8.5972e-02,  9.3546e-01,  ...,  3.0168e-01,
          -1.7234e-01, -2.1499e-01],
         [ 7.7086e-01, -5.9047e-01, -4.6511e-02,  ...,  1.0111e+00,
          -5.3758e-01,  7.2936e-02],
         [ 6.7765e-01, -5.3349e-02, -6.2650e-01,  ...,  1.3942e+00,
          -9.1039e-01,  1.3233e+00]],

        [[ 6.9558e-01, -2.5400e-01,  2.0722e-01,  ...,  4.1203e-01,
           8.0237e-02,  1.0929e-01],
         [ 4.6012e-01, -3.8202e-01,  1.8427e-01,  ...,  5.4500e-01,
           7.4769e-02, -1.7458e-01],
         [-1.0251e+00, -6.1464e-01,  3.0020e-01,  ...,  1.2567e+00,
          -1.9266e+00, -6.2428e-01],
         ...,
         [-1.7396e+00,  2.3888e-01,  1.3689e+00,  ..., -1.3820e-01,
          -1.1364e+00, -2.4387e-01],
         [-4.3099e-01, -1.0300e-01, -6.0540e-02,  ...,  6.4678e-01,
          -9.8058e-01, -7.3878e-01],
         [-1.0250e+00, -1.1814e+00,  8.4322e-01,  ...,  8.4083e-01,
          -5.0137e-01, -3.5726e-01]],

        [[ 7.2557e-01, -7.2856e-01, -8.0930e-01,  ...,  7.9652e-01,
          -5.0005e-01,  5.3869e-01],
         [ 6.7053e-01, -7.9998e-01, -6.8497e-01,  ...,  7.8078e-01,
           2.5149e-01, -4.2900e-01],
         [-1.4611e-01,  6.1142e-01,  7.9608e-01,  ...,  2.1821e-01,
           1.9205e-01,  5.1691e-01],
         ...,
         [ 8.9938e-02, -1.0447e+00, -1.2904e+00,  ...,  5.8511e-01,
          -8.4853e-01,  5.9034e-02],
         [ 4.0127e-01, -1.0219e+00, -1.0761e+00,  ...,  9.2825e-01,
          -7.8289e-01,  7.5505e-02],
         [ 3.7068e-01, -4.8585e-01,  4.4025e-03,  ...,  6.6123e-01,
          -1.1424e+00,  9.5084e-01]],

        [[ 1.1051e+00, -5.3479e-01, -4.3980e-01,  ...,  1.1078e+00,
          -8.5972e-01,  1.4206e-01],
         [ 9.4957e-01, -2.5178e-01, -6.3825e-01,  ...,  9.9376e-01,
          -9.6800e-01,  6.7579e-01],
         [-5.5391e-02,  7.0356e-01,  2.1446e-01,  ...,  1.0147e+00,
          -5.8757e-01, -4.1791e-01],
         ...,
         [-6.6116e-01, -7.2471e-01,  9.0704e-02,  ...,  7.0984e-01,
           4.5079e-01, -8.1230e-01],
         [ 2.4848e-01, -4.2954e-01,  4.6002e-02,  ...,  8.3271e-01,
           9.7860e-01, -5.1287e-01],
         [ 4.8707e-02, -3.3709e-01, -1.7693e-01,  ...,  1.1436e+00,
           1.0040e+00, -3.8517e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to reference? ', '<Img><ImageHere></Img> [vqa] what is the genre of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what is the title of this book? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to science & math? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: what type of book is this? ', '<Img><ImageHere></Img> [vqa] Based on the image, respond to this question with a short answer: is this book related to politics & social sciences? ']
processed prompt_list:['Based on the image, respond to this question with a short answer: is this book related to reference?', 'what is the genre of this book?', 'Based on the image, respond to this question with a short answer: what is the title of this book?', 'Based on the image, respond to this question with a short answer: is this book related to science & math?', 'Based on the image, respond to this question with a short answer: what type of book is this?', 'Based on the image, respond to this question with a short answer: is this book related to politics & social sciences?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-2.3830e-04,  6.1521e-04, -8.6776e-04,  ...,  2.4708e-04,
          -6.7693e-04, -5.0224e-04],
         [-8.4685e-04, -2.2807e-05, -7.7739e-04,  ..., -3.5349e-04,
          -4.9574e-04, -4.0582e-04],
         [-4.1133e-04, -4.7984e-04, -1.1342e-03,  ..., -2.4941e-04,
          -2.1254e-04, -2.2404e-04],
         ...,
         [-8.7098e-04,  1.9735e-04, -1.2907e-03,  ..., -4.8247e-04,
          -8.4856e-04,  2.1786e-04],
         [-5.4456e-04, -3.8319e-05, -1.5232e-03,  ..., -3.3535e-04,
          -9.2156e-04, -6.5869e-05],
         [-8.7129e-04, -4.6003e-04, -1.4088e-03,  ..., -2.6469e-04,
          -9.5784e-04,  7.7230e-05]],

        [[-5.1152e-04,  1.5367e-04, -1.1701e-03,  ..., -3.7086e-04,
          -8.5062e-04,  1.3803e-04],
         [-5.1223e-04, -1.7603e-04, -1.2183e-03,  ..., -3.2963e-04,
          -4.5638e-04,  1.3152e-04],
         [-3.9622e-04, -6.3671e-04, -6.5617e-04,  ..., -4.0500e-04,
           2.5782e-04, -3.2702e-05],
         ...,
         [-4.6475e-04, -7.5087e-04, -2.7990e-04,  ..., -4.8243e-04,
           8.9634e-06,  6.9880e-04],
         [-5.1089e-04, -4.3580e-04, -8.5354e-04,  ..., -3.0059e-04,
          -4.0586e-04,  1.0758e-04],
         [-3.7896e-04,  6.1228e-05, -1.1087e-03,  ...,  9.6710e-05,
          -9.4524e-04,  6.4872e-05]],

        [[-4.9275e-04, -3.7684e-04, -9.3828e-04,  ..., -2.8573e-04,
          -6.7259e-04,  1.4167e-04],
         [-6.2473e-04, -6.5912e-05, -7.8569e-04,  ..., -1.5630e-04,
          -7.7853e-04, -2.1045e-05],
         [-5.1867e-04, -5.9140e-04, -8.6462e-04,  ..., -4.7800e-04,
           7.3686e-05,  1.1847e-03],
         ...,
         [-5.8787e-04, -2.6656e-04, -8.9680e-04,  ..., -5.4836e-04,
          -2.6918e-04,  7.3876e-04],
         [-7.0370e-04, -2.6263e-04, -7.2421e-04,  ..., -4.6730e-04,
          -6.7507e-04,  2.9627e-04],
         [-6.2061e-04, -4.3867e-04, -8.8924e-04,  ..., -3.4341e-04,
          -7.4445e-04,  3.9652e-04]],

        [[-9.8318e-04, -5.5334e-04, -8.5250e-04,  ..., -2.2150e-04,
          -6.6152e-04,  5.6291e-04],
         [-9.1946e-04, -1.6176e-04, -1.1876e-03,  ...,  5.7136e-05,
          -8.8684e-04,  3.3071e-04],
         [ 2.9052e-04,  4.3138e-04,  1.8255e-04,  ..., -9.5137e-05,
          -1.2014e-04,  5.2379e-05],
         ...,
         [-8.4081e-04,  1.1854e-04, -1.0318e-03,  ..., -8.8112e-04,
          -5.6006e-04,  8.0577e-04],
         [-6.1713e-04,  6.5946e-04, -6.6283e-04,  ..., -2.5133e-04,
          -6.9890e-04,  7.7635e-04],
         [-5.3023e-06, -3.9652e-05, -8.0386e-04,  ..., -3.2578e-04,
          -9.7853e-04, -3.8343e-05]],

        [[-2.4787e-04,  3.9722e-04, -7.3384e-04,  ..., -2.1376e-04,
          -6.7372e-04,  2.4131e-04],
         [-4.2182e-04,  4.9463e-05, -2.0379e-04,  ...,  5.7742e-05,
          -2.2468e-04,  1.7803e-04],
         [-6.5536e-04, -2.7403e-04, -6.4279e-04,  ...,  1.0536e-04,
          -2.7452e-04,  9.0716e-04],
         ...,
         [-4.8265e-04, -1.4614e-05, -8.7728e-04,  ..., -3.0543e-04,
          -2.8117e-04,  2.8569e-04],
         [-5.3496e-04,  2.1498e-04, -7.8676e-04,  ..., -2.2745e-04,
          -3.5204e-04,  2.8648e-04],
         [-2.4264e-04,  5.7640e-04, -4.7739e-04,  ..., -4.0348e-04,
          -8.4954e-04,  5.9362e-04]],

        [[-5.8641e-04,  3.6074e-04, -7.4859e-04,  ..., -2.4517e-04,
          -6.1019e-04,  3.4980e-04],
         [-4.8103e-04,  2.6346e-04, -9.7776e-04,  ..., -3.4383e-04,
          -8.2986e-04,  5.2550e-04],
         [-8.2959e-04,  3.7472e-04, -5.4532e-05,  ..., -2.1085e-04,
          -1.8199e-04,  4.3554e-04],
         ...,
         [-5.2485e-04,  1.2164e-04,  3.6170e-04,  ...,  4.5476e-04,
          -4.6792e-04, -1.1387e-04],
         [-5.0474e-04, -9.2427e-07,  6.4991e-04,  ...,  2.3458e-04,
          -4.9901e-04,  8.4379e-04],
         [-4.0067e-04, -7.5514e-05,  5.6677e-04,  ...,  5.1172e-04,
          -4.5787e-04,  6.2805e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] the location of the person who is getting their hair cut is ', '<Img><ImageHere></Img> [refer] where can I locate the a guy in white color pants running behind the girl in green and white tops ? ', '<Img><ImageHere></Img> [refer] where can I locate the a pink color ring chocolate iced doughnut in front of the brown color ? ', '<Img><ImageHere></Img> [refer] a bench on which the guy is operating the skate board ', '<Img><ImageHere></Img> [refer] where can I locate the a man in blue shirt and blue hat who just threw a frisbee ? ', '<Img><ImageHere></Img> [refer] where is a woman wearing white ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-7.1603e-01, -9.0738e-01,  9.5676e-01,  ..., -2.5267e-01,
           4.5872e-01,  2.8245e-01],
         [-6.2505e-01, -7.8749e-01,  1.2886e+00,  ...,  8.3731e-02,
           5.1276e-01,  5.6101e-01],
         [-7.4315e-01,  9.9788e-01,  3.9981e-01,  ...,  1.5714e+00,
          -2.8707e-01, -3.1520e-01],
         ...,
         [ 2.4142e-01,  2.0622e-01,  7.5720e-01,  ...,  7.5012e-02,
          -2.9978e-01,  4.6432e-02],
         [ 6.5304e-01,  8.5623e-01, -1.3432e-01,  ...,  2.5668e-02,
          -9.8960e-01, -8.2430e-01],
         [-6.4676e-01, -1.9313e-01,  8.1414e-01,  ..., -7.6275e-01,
           5.5911e-02,  3.6616e-01]],

        [[-9.0352e-01,  3.1059e-01, -6.9880e-01,  ...,  1.1590e+00,
          -3.3930e-01, -8.3740e-01],
         [-1.1161e+00,  3.0982e-01, -6.5237e-01,  ...,  1.3598e+00,
          -1.0652e+00, -2.5543e-01],
         [-1.3831e+00,  1.8902e-01, -3.3600e-01,  ...,  1.6179e+00,
          -7.2837e-01, -3.2104e-01],
         ...,
         [-3.1715e-01,  5.2160e-01, -3.3161e-01,  ...,  1.2262e+00,
          -1.6317e+00, -6.8818e-01],
         [ 3.6142e-01, -1.7012e-01,  7.9382e-01,  ...,  1.8705e+00,
           4.5002e-01,  5.1664e-01],
         [ 2.7959e-01, -2.1819e-01,  6.3091e-01,  ...,  1.6701e+00,
           5.0040e-01,  6.3475e-01]],

        [[-3.5811e-01, -3.4516e-02,  6.5090e-01,  ..., -1.2374e-01,
          -1.4536e+00, -7.2590e-01],
         [-3.3746e-02,  2.6337e-01,  4.4436e-01,  ..., -1.4437e-01,
          -1.5802e+00, -3.4521e-01],
         [-6.1627e-01,  5.8403e-01,  2.2823e-01,  ..., -1.2825e-01,
          -1.9393e+00,  3.8136e-01],
         ...,
         [-8.4541e-04,  2.1839e-01,  4.6350e-01,  ...,  4.4673e-01,
          -5.7686e-01,  4.2883e-01],
         [ 5.5606e-01,  4.8280e-01, -5.3243e-01,  ..., -3.4903e-01,
          -1.4534e+00, -2.2745e-02],
         [ 1.6944e-01,  2.5138e-01,  2.6994e-01,  ..., -1.0941e-01,
          -1.7235e-01,  3.9192e-01]],

        [[ 4.9944e-01,  5.2094e-01,  4.7294e-01,  ...,  4.5983e-01,
           4.4332e-01,  9.0144e-01],
         [-1.7500e+00,  8.6619e-01,  7.5937e-01,  ...,  1.2307e+00,
          -8.3300e-01, -8.4449e-01],
         [-9.7083e-01,  7.7664e-01,  4.0717e-01,  ...,  1.1215e+00,
           1.5275e-01, -3.1098e-01],
         ...,
         [ 2.4643e-01,  6.8701e-02,  7.4324e-02,  ...,  7.9681e-01,
           5.0175e-01,  7.1066e-01],
         [ 7.0540e-01,  1.3294e+00,  7.4877e-01,  ...,  9.2043e-01,
           1.8898e-01,  1.5127e+00],
         [ 1.4975e-01, -3.6024e-01,  8.3817e-01,  ...,  1.4776e+00,
           9.3366e-01,  2.7262e-01]],

        [[-5.0937e-01, -3.2427e-01,  4.0712e-01,  ...,  3.8195e-01,
          -2.4714e-01,  8.0062e-01],
         [-6.7252e-02,  1.7391e-01, -2.7161e-01,  ...,  6.7004e-01,
           9.9175e-01, -3.2448e-01],
         [-8.2188e-02,  1.4914e-01, -2.5434e-03,  ...,  5.2405e-01,
           6.6516e-01, -2.6447e-01],
         ...,
         [ 1.1302e+00, -1.1646e-01,  1.2589e+00,  ...,  1.0510e+00,
           1.2309e-02,  3.4766e-01],
         [-7.3163e-01, -2.6634e-01,  1.5102e+00,  ...,  4.7031e-01,
          -7.3517e-01, -5.9617e-01],
         [-2.1566e-01, -6.7645e-01,  9.3976e-01,  ...,  1.4862e+00,
           4.0161e-01,  1.0204e+00]],

        [[-1.0361e-01, -8.5063e-02,  3.4317e-01,  ..., -9.3594e-01,
          -1.4473e+00, -9.4748e-01],
         [-6.8559e-01,  2.2176e-01, -4.1997e-01,  ..., -1.3268e+00,
          -1.3392e+00,  1.7549e-01],
         [ 1.4364e-01, -3.9884e-01, -1.0358e-01,  ...,  4.6082e-02,
          -1.5155e-01, -1.2182e-01],
         ...,
         [ 1.0385e-01, -4.1094e-01,  7.1357e-01,  ...,  1.1910e+00,
          -4.6010e-01, -4.7053e-01],
         [-5.8499e-01, -7.3453e-01,  6.9916e-02,  ...,  8.0922e-01,
           8.2710e-01,  5.8294e-01],
         [-6.1327e-01, -1.6508e+00, -6.1812e-01,  ...,  3.4939e-01,
           8.5830e-02,  4.9871e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] the location of the person who is getting their hair cut is ', '<Img><ImageHere></Img> [refer] where can I locate the a guy in white color pants running behind the girl in green and white tops ? ', '<Img><ImageHere></Img> [refer] where can I locate the a pink color ring chocolate iced doughnut in front of the brown color ? ', '<Img><ImageHere></Img> [refer] a bench on which the guy is operating the skate board ', '<Img><ImageHere></Img> [refer] where can I locate the a man in blue shirt and blue hat who just threw a frisbee ? ', '<Img><ImageHere></Img> [refer] where is a woman wearing white ? ']
processed prompt_list:['the location of the person who is getting their hair cut is', 'where can I locate the a guy in white color pants running behind the girl in green and white tops ?', 'where can I locate the a pink color ring chocolate iced doughnut in front of the brown color ?', 'a bench on which the guy is operating the skate board', 'where can I locate the a man in blue shirt and blue hat who just threw a frisbee ?', 'where is a woman wearing white ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.4407e-03,  3.3853e-04, -1.2095e-03,  ..., -3.1545e-04,
          -3.6374e-04,  1.9960e-04],
         [-1.3105e-03,  4.7239e-04, -1.2229e-03,  ..., -3.8501e-04,
          -4.7882e-04,  2.9286e-04],
         [-6.6686e-04,  7.5208e-04, -1.1049e-03,  ..., -6.3670e-04,
          -2.1722e-04,  3.3032e-04],
         ...,
         [-1.2753e-03, -3.5639e-05, -5.4104e-04,  ..., -1.1366e-03,
          -4.7287e-04,  7.6421e-05],
         [-1.0291e-03,  1.5389e-04, -2.5753e-04,  ..., -8.0800e-04,
          -4.3224e-04,  1.1416e-04],
         [-1.4020e-03,  1.2608e-04, -9.4479e-04,  ..., -9.3396e-05,
          -6.9050e-05,  6.5121e-05]],

        [[-2.3302e-04,  5.9673e-04, -6.1104e-04,  ...,  2.3063e-04,
           7.4532e-05,  2.1453e-04],
         [-4.6932e-04,  7.5053e-04, -3.2060e-04,  ..., -2.6999e-04,
          -2.6068e-04,  5.9650e-05],
         [-5.4780e-04,  1.0124e-03, -4.0774e-04,  ...,  1.6754e-04,
          -1.4699e-04,  2.3258e-05],
         ...,
         [-1.0081e-03,  3.9489e-05,  1.1796e-04,  ..., -4.3465e-04,
          -4.2964e-04, -5.7610e-05],
         [-7.3010e-04,  3.4057e-04, -9.6633e-04,  ..., -3.8549e-04,
          -2.9874e-04, -6.4822e-05],
         [-7.2753e-04,  4.0178e-04, -9.7415e-04,  ..., -4.1104e-04,
          -2.9557e-04, -2.6897e-06]],

        [[-7.7008e-04,  7.0725e-04, -2.9961e-04,  ..., -3.7457e-04,
          -2.6629e-04,  1.4814e-04],
         [-8.8936e-04,  8.1167e-04, -2.8525e-04,  ..., -3.5293e-04,
          -8.6267e-05,  3.9607e-04],
         [-9.3848e-04,  4.2749e-04, -2.1157e-05,  ..., -4.6781e-04,
          -9.1963e-05,  3.6833e-04],
         ...,
         [-9.3737e-04,  8.6114e-04, -5.8640e-04,  ..., -7.0818e-04,
          -1.8580e-04,  4.1906e-04],
         [-1.2265e-03,  2.6492e-04, -7.9524e-04,  ..., -2.1084e-04,
           1.4628e-04,  9.7976e-05],
         [-1.4162e-03,  1.6833e-04, -1.2016e-03,  ..., -5.6220e-04,
           1.1928e-05,  3.8624e-04]],

        [[-7.5560e-04, -2.2473e-04, -1.2608e-03,  ..., -2.3639e-04,
          -4.6303e-04,  1.7616e-04],
         [ 1.6682e-04,  5.5288e-04, -5.2523e-04,  ..., -2.4054e-06,
          -1.4465e-04, -9.2762e-05],
         [-6.4803e-04,  3.1519e-04, -9.2529e-04,  ..., -2.3323e-04,
           8.9415e-05,  3.3356e-04],
         ...,
         [-8.2206e-04, -9.3302e-05, -1.1798e-03,  ..., -2.4131e-04,
          -4.5503e-04,  2.2954e-04],
         [-9.2001e-04, -1.9300e-04, -1.1583e-03,  ..., -1.5218e-04,
          -1.6412e-04,  1.5922e-04],
         [-7.2990e-04, -4.9566e-04, -1.1755e-03,  ..., -3.5994e-04,
          -2.9983e-04, -2.0680e-04]],

        [[-6.0866e-04,  5.4103e-04, -1.1287e-03,  ..., -2.9361e-04,
          -2.4337e-04, -3.8071e-05],
         [-6.7538e-04,  9.3128e-04, -6.7347e-04,  ..., -2.8986e-04,
          -3.3458e-04,  3.4893e-04],
         [-7.0447e-04,  1.0318e-03, -7.7769e-04,  ..., -3.0749e-04,
          -4.3886e-04,  4.2498e-04],
         ...,
         [-5.7066e-04,  5.4960e-04, -6.3864e-04,  ..., -7.7030e-04,
          -6.7215e-04,  2.5996e-04],
         [-2.2365e-04,  3.5232e-04, -1.9925e-04,  ..., -8.9842e-04,
          -8.5891e-04,  2.5282e-04],
         [-7.2966e-04,  5.2227e-04, -1.2063e-03,  ..., -5.7555e-04,
          -3.4010e-04, -2.6221e-05]],

        [[ 1.2533e-04,  1.0241e-04, -2.2768e-04,  ..., -4.8721e-04,
          -6.1769e-04, -4.5489e-04],
         [-3.3035e-04, -6.1927e-05, -4.1945e-04,  ...,  1.0988e-04,
          -7.1899e-04, -4.8060e-04],
         [-4.5732e-04,  6.0418e-04, -8.7350e-04,  ..., -3.0520e-04,
          -7.6586e-04,  5.5347e-04],
         ...,
         [-6.8804e-04,  5.9821e-04, -1.0120e-03,  ...,  2.0438e-04,
           6.0872e-04,  4.3313e-04],
         [-4.3526e-04,  3.2817e-04, -1.0971e-03,  ..., -6.5015e-04,
          -2.1918e-04,  4.5434e-04],
         [-2.4904e-04,  1.8994e-04, -8.5699e-04,  ..., -5.8960e-04,
           1.1922e-04, -2.9015e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of a zebra with his back to the camera ', '<Img><ImageHere></Img> [refer] could you tell me the location for the kid wearing glasses ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for a plant arrangement set in a white planter and placed upon a breakfast table adjacent to the ocean ? ', '<Img><ImageHere></Img> [refer] where is a baby cow drinking milk ? ', '<Img><ImageHere></Img> [refer] three pice of carrot ', "<Img><ImageHere></Img> [refer] from this image, tell me the location of a woven basket with w's on it "]
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-0.1782, -0.2133, -0.2948,  ...,  0.2942,  0.1453,  0.2955],
         [-0.7438, -0.2208,  0.7645,  ...,  1.6348, -0.1202, -0.7644],
         [-0.4275, -0.4337, -0.8752,  ...,  0.5753, -0.2053,  0.6241],
         ...,
         [-1.0613,  0.4955,  1.0607,  ...,  0.2606, -0.6721,  0.2096],
         [-1.0798, -0.2091,  1.4282,  ...,  0.5949, -0.3129,  0.3788],
         [-1.2933,  0.2745,  0.7656,  ..., -0.3329, -0.3585, -0.0959]],

        [[-0.7624, -0.1219,  0.4625,  ..., -0.0661, -0.6980, -0.0348],
         [-0.2082, -1.0099,  0.1502,  ...,  0.7527, -0.1764, -0.7383],
         [-0.3062, -0.0827, -0.2021,  ..., -0.7939,  0.4269,  0.2976],
         ...,
         [-1.3282, -1.0725,  0.1432,  ..., -0.0044,  0.2235, -0.6037],
         [ 0.0164, -0.3172,  0.5346,  ...,  1.2997,  0.3509,  0.1570],
         [-0.4471, -0.5788,  0.4772,  ...,  0.3721,  0.3467, -0.1571]],

        [[-0.2331,  1.0519,  0.1725,  ...,  0.1697, -0.7182,  0.3420],
         [ 0.0533,  0.5117,  0.0751,  ..., -0.2768, -0.6290,  0.3837],
         [ 0.2937,  0.6777,  0.8761,  ..., -0.5102, -1.7573,  0.1974],
         ...,
         [-0.4150,  0.7886,  0.4982,  ...,  0.2114, -1.1246,  0.1340],
         [-0.0964,  0.1247, -0.5198,  ..., -0.6768, -0.2330,  0.5156],
         [-0.8994,  0.2219,  0.0655,  ..., -0.2976,  0.5238,  1.3978]],

        [[-0.6461, -1.1560,  0.8637,  ...,  0.9995,  0.6817,  1.1258],
         [-0.4856, -0.9871,  0.9603,  ...,  1.0261,  0.6593,  1.0717],
         [-0.5606, -0.6803,  0.7827,  ...,  0.4059,  0.3716,  0.7066],
         ...,
         [-0.8978, -1.2243,  0.5846,  ...,  0.5842,  0.1600,  0.6159],
         [-0.9567, -1.1261,  0.6386,  ...,  0.9103,  0.3353,  0.7325],
         [-0.9346, -0.4278,  0.9024,  ...,  0.4286,  0.1248,  0.3885]],

        [[-0.3419,  0.2598,  0.1032,  ..., -0.4476, -0.4026,  0.0433],
         [-0.4414,  0.3374,  0.1421,  ..., -0.2202, -0.5049,  0.0538],
         [-0.3845,  0.3453,  0.1597,  ..., -0.2033, -0.5715, -0.0339],
         ...,
         [-0.2375,  0.4672, -0.2511,  ...,  0.8719, -0.6630, -1.0118],
         [-0.3903,  0.2333,  0.2001,  ...,  0.3218,  0.0390, -1.4100],
         [-0.4183,  0.1092,  0.1868,  ...,  0.3228,  0.0642, -1.4021]],

        [[-0.1344, -0.4988,  0.6932,  ...,  0.4148, -0.3062,  0.8163],
         [ 0.2187,  1.7883,  0.2910,  ...,  1.1298, -1.2328,  0.0503],
         [ 0.3964, -0.0278,  0.7280,  ...,  0.6941, -0.4921, -0.6445],
         ...,
         [-0.6123, -0.2370,  0.2257,  ...,  1.3479,  0.2114, -0.7389],
         [-0.2500,  0.6922,  0.1035,  ...,  1.6511,  0.3331, -0.4140],
         [ 0.2092, -0.0087,  0.8045,  ...,  2.0712, -0.7442, -0.5170]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] from this image, tell me the location of a zebra with his back to the camera ', '<Img><ImageHere></Img> [refer] could you tell me the location for the kid wearing glasses ? ', '<Img><ImageHere></Img> [refer] could you tell me the location for a plant arrangement set in a white planter and placed upon a breakfast table adjacent to the ocean ? ', '<Img><ImageHere></Img> [refer] where is a baby cow drinking milk ? ', '<Img><ImageHere></Img> [refer] three pice of carrot ', "<Img><ImageHere></Img> [refer] from this image, tell me the location of a woven basket with w's on it "]
processed prompt_list:['from this image, tell me the location of a zebra with his back to the camera', 'could you tell me the location for the kid wearing glasses ?', 'could you tell me the location for a plant arrangement set in a white planter and placed upon a breakfast table adjacent to the ocean ?', 'where is a baby cow drinking milk ?', 'three pice of carrot', "from this image, tell me the location of a woven basket with w's on it"]
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.0747e-03,  6.9069e-05, -9.0935e-04,  ..., -3.6916e-04,
          -4.0004e-04, -4.4826e-04],
         [-5.7103e-04,  6.0786e-04, -2.2299e-04,  ...,  1.4455e-04,
          -7.6102e-05,  1.9160e-05],
         [-6.5867e-04,  2.8328e-04, -1.9927e-04,  ..., -7.9292e-05,
          -4.4580e-04,  1.6503e-04],
         ...,
         [-9.9198e-04,  2.9111e-04, -4.4001e-04,  ...,  2.9257e-05,
          -3.0136e-04,  2.2465e-04],
         [-1.0987e-03,  8.3522e-04, -2.6131e-04,  ..., -3.9065e-04,
          -2.5343e-04, -1.9234e-04],
         [-8.7393e-04,  7.4193e-04, -2.1610e-04,  ..., -3.3475e-04,
          -6.0422e-04,  5.1702e-04]],

        [[-4.6769e-04,  8.7918e-04, -8.0917e-04,  ..., -1.8943e-04,
           4.0393e-05,  4.6912e-04],
         [-4.4059e-04,  2.3655e-04, -1.2470e-03,  ..., -3.7511e-04,
          -3.5399e-04,  2.5387e-04],
         [-4.3042e-04,  5.3260e-04, -1.3434e-03,  ..., -6.2979e-04,
           7.0923e-05,  5.1688e-04],
         ...,
         [-5.8858e-04,  3.7729e-04, -1.2815e-03,  ..., -2.7627e-04,
           2.2196e-04,  4.2875e-04],
         [-7.3745e-04,  7.1993e-05, -1.0704e-03,  ..., -6.6901e-05,
          -2.4463e-04,  2.1645e-04],
         [-6.6518e-04,  9.2670e-05, -1.3285e-03,  ..., -2.4034e-04,
          -3.0378e-04,  4.4210e-04]],

        [[-3.4771e-04,  5.8142e-04, -6.7920e-04,  ...,  3.5677e-04,
          -4.5598e-04,  1.6133e-04],
         [-3.2504e-04,  8.6614e-04, -1.1085e-03,  ..., -1.5569e-05,
          -4.0792e-04,  6.6925e-04],
         [-6.2794e-04,  4.5586e-04, -5.7569e-04,  ...,  3.4225e-04,
          -3.7197e-04,  3.1852e-04],
         ...,
         [-5.7407e-04, -1.1127e-04, -9.1728e-04,  ..., -2.3420e-04,
          -6.0596e-04,  1.6934e-04],
         [-6.9891e-04, -1.9857e-04, -4.7150e-04,  ..., -5.2824e-04,
          -4.4314e-04, -1.4779e-05],
         [-6.0895e-04, -8.1174e-05, -5.1713e-04,  ..., -5.6661e-04,
          -4.0367e-04,  4.3031e-04]],

        [[-3.0964e-04,  2.6479e-04, -9.7186e-04,  ..., -3.5567e-04,
          -2.3929e-04,  7.6259e-04],
         [-3.3487e-04,  3.0399e-04, -8.2838e-04,  ..., -3.8379e-04,
          -2.5887e-04,  6.9491e-04],
         [-5.3083e-04,  6.8332e-04, -6.6759e-04,  ..., -5.3560e-04,
          -1.6678e-04,  1.9433e-06],
         ...,
         [-5.3307e-04,  1.7579e-04, -5.4590e-04,  ..., -8.7752e-04,
          -2.5371e-04,  1.9099e-04],
         [-5.0937e-04, -4.3726e-06, -6.0146e-04,  ..., -7.4720e-04,
          -1.9594e-04,  3.6339e-04],
         [-6.0528e-04,  4.5931e-04, -1.0308e-03,  ..., -8.7013e-05,
          -8.9384e-09, -4.4279e-05]],

        [[-4.8208e-04, -2.7708e-04, -7.4958e-04,  ...,  8.2334e-04,
          -1.8440e-04,  4.9764e-04],
         [-5.1426e-04, -2.6120e-04, -7.5702e-04,  ...,  6.7754e-04,
          -1.6663e-04,  4.9558e-04],
         [-5.1954e-04, -2.0889e-04, -6.7947e-04,  ...,  5.6694e-04,
          -1.7083e-04,  5.2337e-04],
         ...,
         [-6.5294e-04,  6.3034e-04, -6.9381e-04,  ..., -3.8441e-04,
          -4.9115e-04,  1.4064e-04],
         [-9.1490e-05,  8.8138e-04, -5.3633e-04,  ..., -6.8242e-04,
           1.0969e-04,  2.4065e-04],
         [-3.1177e-05,  9.3573e-04, -5.4588e-04,  ..., -6.9520e-04,
           1.3407e-04,  1.9180e-04]],

        [[-7.2312e-04, -2.4550e-05, -9.0056e-04,  ..., -6.4394e-04,
          -1.7291e-04, -6.9641e-05],
         [-3.8669e-04,  9.6495e-05, -4.6896e-04,  ..., -4.4715e-04,
           1.9086e-04,  2.6506e-04],
         [-2.9857e-04,  9.8442e-04, -1.0588e-03,  ...,  3.1383e-04,
          -3.3362e-04,  4.2544e-04],
         ...,
         [-1.0071e-03,  2.6824e-04, -8.6676e-04,  ..., -2.6442e-04,
          -6.3814e-04,  5.2598e-04],
         [-9.8170e-04,  5.0066e-05, -1.1474e-03,  ..., -5.2409e-04,
          -7.5530e-04,  5.7274e-04],
         [-7.2661e-04,  7.1371e-04, -7.2805e-04,  ..., -5.3027e-04,
          -9.0194e-04,  3.5901e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 9.9802e-01, -2.2115e-01, -5.9944e-01,  ...,  6.5308e-01,
          -3.1287e-01,  1.9934e+00],
         [-7.9940e-01,  1.8677e-01,  3.0339e-01,  ...,  8.5706e-01,
          -7.8466e-02, -5.2119e-01],
         [ 6.3686e-01, -2.0971e-01, -1.0101e+00,  ..., -2.9253e-01,
           7.3312e-01,  1.2220e+00],
         ...,
         [ 3.1092e-02, -1.7600e-01,  3.3117e-02,  ...,  2.0052e-01,
          -8.5357e-02,  4.5681e-03],
         [ 5.5088e-01, -3.8398e-02,  9.4902e-03,  ...,  5.5113e-01,
          -1.8809e-01,  2.0825e-01],
         [ 5.4358e-01, -3.9859e-02,  1.0884e-02,  ...,  5.2835e-01,
          -1.6483e-01,  2.2030e-01]],

        [[ 1.5855e-01, -5.5103e-02, -7.6944e-01,  ...,  3.2807e-02,
          -8.7460e-02,  1.1104e+00],
         [ 4.5278e-02,  2.2651e-01, -1.5074e+00,  ..., -5.3503e-01,
          -2.3041e-01,  1.2412e+00],
         [ 5.4730e-01, -1.8869e-01, -4.8087e-01,  ..., -1.8092e+00,
          -5.9254e-01,  1.0476e+00],
         ...,
         [ 4.7290e-02, -1.8358e-01,  7.9927e-04,  ...,  2.2086e-01,
          -8.2801e-02, -7.6760e-04],
         [-3.0631e-02, -2.5468e-03,  3.1158e-01,  ...,  8.3370e-01,
          -2.9754e-03, -5.3911e-02],
         [-4.5093e-02, -3.1766e-02,  3.2022e-01,  ...,  8.5362e-01,
           2.0118e-02, -1.4337e-02]],

        [[-1.7500e-01,  3.8731e-02,  6.6873e-01,  ...,  7.1521e-01,
          -5.4319e-01,  3.5362e-01],
         [ 5.7883e-01,  1.0004e-01,  1.0189e+00,  ...,  2.7596e-01,
          -9.9543e-01,  1.3320e+00],
         [ 1.3237e+00,  8.6624e-01, -8.1171e-01,  ...,  1.9049e-01,
          -7.1175e-01,  9.9802e-01],
         ...,
         [ 4.1957e-03, -2.2432e-01,  1.6753e-02,  ...,  2.1283e-01,
          -7.0281e-02,  2.4673e-03],
         [-1.0918e-01,  4.8930e-01,  1.4210e-01,  ...,  7.5614e-01,
          -3.6689e-01,  1.6111e-02],
         [-9.4600e-02,  4.6835e-01,  1.4432e-01,  ...,  7.5416e-01,
          -3.5184e-01,  9.7699e-03]],

        [[ 2.1078e-01, -5.8529e-01, -2.2420e-01,  ...,  1.2704e+00,
          -1.2483e+00,  1.4965e+00],
         [ 1.0439e+00, -6.9784e-01, -9.1705e-01,  ..., -1.9965e-02,
          -1.8357e+00,  1.7209e+00],
         [ 5.3408e-01,  3.4388e-01, -4.4176e-01,  ..., -2.2240e-01,
          -1.5474e+00,  1.5160e+00],
         ...,
         [ 4.1063e-02, -1.4224e-01,  2.8322e-02,  ...,  1.8646e-01,
          -7.2451e-02,  6.0860e-02],
         [ 1.8121e-01, -4.9958e-02,  3.8209e-01,  ...,  7.8808e-01,
          -3.5489e-01, -1.4816e-01],
         [ 1.9030e-01, -1.3903e-02,  3.8587e-01,  ...,  7.3704e-01,
          -3.4018e-01, -1.5574e-01]],

        [[ 7.4402e-01, -5.4419e-02, -8.8683e-01,  ...,  1.8106e-02,
          -9.6611e-01,  1.2806e+00],
         [ 1.1323e+00, -4.5926e-02, -1.5574e+00,  ..., -2.7633e-01,
          -6.3826e-01,  1.3535e+00],
         [ 1.1206e+00, -3.4305e-02,  1.3460e-03,  ..., -1.9932e+00,
          -7.7409e-01,  1.4116e+00],
         ...,
         [ 4.0848e-02, -1.2586e-01, -1.5500e-02,  ...,  1.8590e-01,
          -9.3569e-02,  1.8559e-02],
         [ 6.5733e-01, -3.5222e-01,  5.6609e-01,  ...,  4.8250e-01,
           2.1358e-01,  1.6794e-01],
         [ 6.5814e-01, -3.1897e-01,  5.5315e-01,  ...,  5.3356e-01,
           2.3442e-01,  1.6850e-01]],

        [[ 1.2429e+00, -4.7367e-01, -5.4333e-01,  ..., -3.0107e-01,
           5.8676e-01,  1.7449e+00],
         [ 7.0115e-01,  4.8317e-01, -1.7162e+00,  ..., -5.8660e-01,
          -2.9646e-01,  1.5716e+00],
         [ 1.1938e+00,  1.4462e-01, -1.2289e+00,  ..., -8.7909e-01,
          -1.4151e-01,  1.7890e+00],
         ...,
         [ 2.2454e-02, -1.4747e-01,  1.3849e-02,  ...,  2.2264e-01,
          -6.0519e-02, -1.9740e-03],
         [ 1.1884e-01, -3.4469e-01, -4.1444e-02,  ...,  7.7531e-01,
           1.0897e-03,  1.7668e-01],
         [ 7.1447e-02, -3.6878e-01, -6.0006e-03,  ...,  8.7054e-01,
           2.4931e-02,  1.9604e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] Write a short description for the image.  ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ', '<Img><ImageHere></Img> [caption] Provide a description of what is presented in the photo. ', '<Img><ImageHere></Img> [caption] Please provide a short depiction of the picture. ', '<Img><ImageHere></Img> [caption] Write a description for the photo. ']
processed prompt_list:['Write a short description for the image.', 'Provide a description of what is presented in the photo.', 'Summarize this image in a few words.', 'Provide a description of what is presented in the photo.', 'Please provide a short depiction of the picture.', 'Write a description for the photo.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.2352e-03, -4.1458e-04, -1.0998e-03,  ..., -1.8311e-04,
           4.3007e-04,  4.6938e-04],
         [-8.9009e-04,  8.7197e-04, -1.2662e-03,  ...,  3.5947e-04,
           2.0298e-04,  5.3348e-04],
         [-1.4393e-03, -3.8447e-05, -4.9883e-04,  ..., -6.3170e-04,
          -8.9778e-05,  1.3996e-04],
         ...,
         [ 5.6583e-04, -1.0296e-03,  1.1222e-03,  ..., -3.0015e-04,
           1.1608e-05, -7.6183e-04],
         [-2.1351e-04,  6.3554e-04, -5.8757e-04,  ...,  4.4388e-04,
           3.2822e-04,  3.6860e-04],
         [-2.1777e-04,  6.4216e-04, -5.8801e-04,  ...,  4.6689e-04,
           3.3034e-04,  3.7665e-04]],

        [[-7.6448e-04,  7.2942e-05, -9.7176e-04,  ..., -1.0974e-04,
          -1.2339e-04,  4.3370e-04],
         [-9.4511e-04, -1.4766e-04, -8.2823e-04,  ...,  1.1317e-04,
           4.0813e-04,  5.8776e-04],
         [-5.3139e-04,  3.3272e-05, -4.6937e-04,  ..., -1.0314e-03,
           6.1790e-04,  7.5194e-04],
         ...,
         [ 5.6065e-04, -1.0587e-03,  1.1232e-03,  ..., -2.8270e-04,
           1.3896e-05, -7.6556e-04],
         [-4.0081e-04,  7.7697e-04, -7.2198e-04,  ...,  4.6244e-04,
           4.3067e-04,  3.9079e-05],
         [-3.9438e-04,  7.8449e-04, -7.2619e-04,  ...,  4.9677e-04,
           4.5908e-04,  3.0722e-05]],

        [[-8.8738e-04,  7.8284e-04, -1.3146e-03,  ..., -1.9802e-06,
           2.1301e-04,  4.9691e-04],
         [-1.6677e-03,  4.8555e-04, -2.7971e-04,  ..., -4.2194e-04,
          -4.0294e-05,  7.8337e-04],
         [-1.1036e-03,  5.7928e-05, -5.2498e-04,  ...,  2.0345e-04,
           2.6297e-04,  6.1407e-04],
         ...,
         [ 5.6422e-04, -1.0517e-03,  1.1275e-03,  ..., -2.8448e-04,
          -9.6079e-06, -7.6555e-04],
         [-4.9367e-04,  7.0666e-04, -6.1058e-04,  ...,  1.4969e-04,
           2.9937e-04,  1.0028e-04],
         [-4.9036e-04,  7.0477e-04, -6.1200e-04,  ...,  1.5868e-04,
           3.0198e-04,  9.3776e-05]],

        [[-6.6283e-04, -6.6473e-05, -8.1952e-04,  ..., -2.9052e-05,
           3.3260e-04,  4.5047e-05],
         [-8.7043e-04, -9.7469e-05, -9.3891e-04,  ..., -4.3333e-04,
           5.4313e-04,  4.6072e-04],
         [-8.2109e-04, -3.2299e-04, -5.5087e-04,  ..., -4.4107e-04,
           1.0061e-03,  5.6110e-05],
         ...,
         [ 5.5711e-04, -1.0574e-03,  1.1388e-03,  ..., -2.7595e-04,
           1.0777e-05, -7.8071e-04],
         [-4.3100e-04,  6.3014e-04, -5.7799e-04,  ...,  3.4162e-04,
           9.1866e-05,  6.1402e-04],
         [-4.0021e-04,  6.4726e-04, -6.0126e-04,  ...,  4.0353e-04,
           9.1992e-05,  6.1502e-04]],

        [[-9.3251e-04,  2.6384e-04, -1.0859e-03,  ..., -4.9230e-04,
          -1.7063e-04,  6.1323e-04],
         [-1.0663e-03,  2.7015e-04, -1.0844e-03,  ...,  6.3597e-05,
           4.2780e-04,  9.1866e-04],
         [-7.9497e-04, -6.9571e-05, -6.9856e-04,  ..., -1.1293e-03,
           6.1213e-04,  3.2293e-04],
         ...,
         [ 5.8328e-04, -1.0521e-03,  1.1495e-03,  ..., -2.8100e-04,
           1.5788e-05, -7.6588e-04],
         [-5.2547e-04,  8.9524e-04, -7.8274e-04,  ...,  3.9398e-04,
           6.1993e-04,  2.5087e-04],
         [-4.9782e-04,  9.2445e-04, -8.0249e-04,  ...,  4.4206e-04,
           6.0887e-04,  2.6884e-04]],

        [[-5.5425e-04,  1.8005e-05, -8.8898e-04,  ..., -4.2307e-04,
           9.1541e-05,  4.3354e-04],
         [-1.0305e-03, -7.4846e-05, -8.4304e-04,  ...,  3.2157e-04,
           4.6064e-04,  6.0640e-04],
         [-6.6283e-04, -3.6273e-04, -4.3342e-04,  ..., -2.9322e-04,
           6.3768e-04,  3.0579e-04],
         ...,
         [ 5.4602e-04, -1.0430e-03,  1.1344e-03,  ..., -2.8573e-04,
           5.9146e-06, -7.6555e-04],
         [-3.7405e-04,  7.3814e-04, -1.0816e-03,  ...,  6.5844e-04,
           2.7846e-04,  2.8629e-04],
         [-3.6238e-04,  7.5511e-04, -1.0985e-03,  ...,  7.1289e-04,
           2.7344e-04,  2.8862e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [identify] what object is in this location {<12><49><50><68>} ', '<Img><ImageHere></Img> [identify] what is it in {<28><48><49><81>} ', '<Img><ImageHere></Img> [identify] {<58><1><94><70>} ', '<Img><ImageHere></Img> [identify] describe this object in {<0><33><20><76>} ', '<Img><ImageHere></Img> [identify] identify the object present at this location {<50><2><63><97>} ', '<Img><ImageHere></Img> [identify] what is it in {<33><50><62><80>} ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[-7.1341e-01, -6.7455e-01,  4.0208e-02,  ...,  9.1264e-01,
          -1.3098e+00,  2.6433e-01],
         [-2.7650e-01, -6.5665e-01,  2.0121e-01,  ...,  7.8152e-01,
          -8.9502e-01,  4.4711e-01],
         [-1.1737e+00, -4.7703e-01, -3.9251e-01,  ...,  7.5171e-01,
          -8.6414e-01,  3.6295e-01],
         ...,
         [-4.3532e-01,  5.3024e-01, -8.7244e-01,  ...,  3.6018e-01,
          -6.5276e-01,  7.2560e-01],
         [-3.9618e-01,  3.5929e-01, -5.1435e-01,  ...,  1.7694e-01,
           5.7639e-01,  8.4347e-02],
         [ 1.6734e-01, -8.1822e-02,  6.1763e-01,  ...,  3.7379e-01,
           6.0051e-01,  9.5935e-01]],

        [[-7.4869e-01,  2.7731e-01, -2.2408e-01,  ...,  5.7798e-01,
           1.3406e+00,  2.0356e-01],
         [-5.5420e-01,  6.8163e-01, -1.3808e-01,  ...,  5.3164e-01,
           1.4855e+00,  3.1180e-01],
         [-5.5466e-01,  2.1346e-01,  1.5111e+00,  ...,  6.7394e-02,
          -2.1845e-02, -1.2444e-01],
         ...,
         [-4.1527e-01,  5.2727e-01,  2.7399e-01,  ...,  4.3307e-02,
          -6.7457e-01, -4.1668e-01],
         [-1.0011e+00,  4.8477e-01, -4.6075e-01,  ...,  4.5483e-01,
           1.2976e+00,  1.2127e-01],
         [-4.3982e-01, -3.7550e-02,  5.9091e-01,  ...,  2.1890e-01,
          -6.7329e-01, -2.9547e-01]],

        [[-4.5971e-01,  8.4969e-02,  6.8376e-01,  ..., -2.3361e-01,
           4.4838e-01,  9.2646e-01],
         [-6.9328e-01,  1.9912e-01,  3.9592e-01,  ..., -5.3107e-01,
          -1.6303e-01,  3.4520e-01],
         [-6.3665e-01,  1.6133e-01,  8.5441e-01,  ..., -1.3767e-01,
           1.0202e-01,  4.7953e-01],
         ...,
         [-1.7148e+00,  8.7282e-01,  8.8088e-01,  ...,  4.2516e-01,
          -5.9498e-01, -7.2974e-01],
         [-1.0587e+00,  1.5849e-01,  4.8763e-01,  ...,  8.4012e-01,
          -1.2686e+00, -7.1733e-01],
         [-2.6093e-01, -2.6602e-01,  9.1486e-02,  ...,  1.2552e-01,
          -3.0618e-01,  1.7281e-01]],

        [[ 5.3653e-01,  1.5703e+00,  2.4164e-01,  ...,  4.5779e-01,
          -9.8063e-01,  2.3542e-01],
         [-6.3935e-01, -8.1522e-01,  4.4235e-01,  ...,  5.0724e-01,
           8.7325e-01,  1.5029e+00],
         [ 3.8087e-01, -1.1351e-02,  8.1771e-01,  ...,  2.7337e-01,
          -1.2238e-01, -2.3085e-01],
         ...,
         [-1.5095e-01, -1.2506e-03,  9.7388e-01,  ...,  6.8803e-02,
          -9.0314e-01, -1.9250e-01],
         [ 2.3294e-01,  4.7962e-01,  7.1948e-01,  ..., -5.4365e-02,
          -8.7123e-01, -5.6903e-01],
         [-6.6947e-01, -6.9454e-01,  4.6766e-01,  ...,  5.0217e-01,
           4.7177e-01,  1.4226e+00]],

        [[-9.9805e-01, -2.7498e-01,  1.2666e-01,  ...,  4.6093e-01,
          -1.8551e+00, -1.1697e+00],
         [-1.0588e+00, -4.5922e-01,  5.0861e-01,  ..., -9.4774e-02,
          -1.6229e+00, -1.3348e+00],
         [-9.4641e-01,  7.6285e-01,  1.5604e+00,  ...,  1.0710e+00,
          -8.3430e-01, -6.0053e-01],
         ...,
         [ 2.5059e-01,  9.4986e-01,  1.2040e-01,  ...,  2.5173e-02,
          -1.0627e+00,  4.2750e-01],
         [-3.8193e-01,  4.9739e-02,  2.3681e-01,  ..., -4.1890e-01,
          -5.2170e-02, -1.7750e-01],
         [-3.0650e-01, -1.8843e-01,  9.7561e-01,  ...,  1.0251e+00,
           7.6204e-01,  3.9970e-01]],

        [[-3.9488e-01, -3.7028e-01,  1.8650e+00,  ...,  3.1772e-01,
           1.3313e+00,  4.9856e-01],
         [ 1.7556e-03,  1.1341e-01,  4.3790e-01,  ...,  4.0933e-01,
           1.6999e-01,  3.5538e-01],
         [ 1.5048e-01, -7.5879e-01,  9.3972e-01,  ...,  3.2685e-01,
           1.2766e+00,  1.2625e+00],
         ...,
         [-3.0465e-01, -1.3470e+00,  4.4354e-01,  ...,  7.0999e-02,
           4.3966e-01,  4.7245e-01],
         [-8.1223e-02, -1.1279e+00,  8.3284e-01,  ...,  2.5769e-01,
           9.6302e-01,  1.1842e+00],
         [-3.1341e-02,  7.5120e-01, -1.4478e-01,  ...,  1.1662e+00,
           1.6883e-01,  3.4474e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [identify] what object is in this location {<12><49><50><68>} ', '<Img><ImageHere></Img> [identify] what is it in {<28><48><49><81>} ', '<Img><ImageHere></Img> [identify] {<58><1><94><70>} ', '<Img><ImageHere></Img> [identify] describe this object in {<0><33><20><76>} ', '<Img><ImageHere></Img> [identify] identify the object present at this location {<50><2><63><97>} ', '<Img><ImageHere></Img> [identify] what is it in {<33><50><62><80>} ']
processed prompt_list:['what object is in this location {<12><49><50><68>}', 'what is it in {<28><48><49><81>}', '{<58><1><94><70>}', 'describe this object in {<0><33><20><76>}', 'identify the object present at this location {<50><2><63><97>}', 'what is it in {<33><50><62><80>}']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.4964e-03,  8.4686e-04, -4.8163e-04,  ..., -1.9267e-04,
          -7.1035e-04,  3.9924e-04],
         [-1.4034e-03,  6.3458e-04, -7.6687e-04,  ..., -1.0994e-04,
          -5.8761e-04,  2.5738e-04],
         [-1.2283e-03,  1.1441e-03, -2.1254e-04,  ..., -5.6785e-05,
          -8.7601e-04,  6.4145e-04],
         ...,
         [-1.0245e-03,  4.4379e-04, -1.0350e-03,  ..., -1.2758e-04,
          -6.5770e-04,  6.0094e-04],
         [-8.5276e-04,  2.0701e-04, -1.2223e-03,  ..., -3.9452e-04,
          -4.2900e-04,  5.2317e-04],
         [-9.3523e-04,  2.7276e-04, -1.1621e-03,  ..., -5.6493e-04,
          -4.0274e-04,  3.8498e-04]],

        [[-1.0398e-03,  1.0171e-04, -1.0198e-03,  ..., -7.5559e-04,
          -1.8390e-04,  1.1599e-04],
         [-1.0148e-03, -4.5768e-05, -9.2905e-04,  ..., -3.8663e-04,
          -9.4334e-05,  2.7871e-04],
         [-7.1009e-04,  2.5646e-04, -6.7723e-04,  ..., -3.6362e-04,
          -3.2599e-04, -1.2549e-04],
         ...,
         [-5.2842e-04,  6.8001e-04, -7.9739e-04,  ..., -5.8830e-04,
          -3.2979e-04, -2.3392e-04],
         [-1.3563e-03, -1.0319e-04, -8.8134e-04,  ..., -6.9391e-04,
          -1.4451e-04,  2.3929e-04],
         [-5.8151e-04,  5.8199e-04, -2.1492e-04,  ..., -2.5082e-04,
          -7.2606e-04, -6.0434e-04]],

        [[-1.2387e-03,  7.6011e-04, -1.1614e-03,  ..., -6.3080e-04,
          -1.8776e-04,  5.5684e-04],
         [-1.0934e-03,  3.4841e-04, -1.0848e-03,  ..., -8.1789e-04,
          -1.3107e-04,  5.9936e-05],
         [-1.3508e-03,  5.4260e-04, -8.4495e-04,  ..., -8.2584e-04,
          -1.6729e-04,  4.6737e-04],
         ...,
         [-5.4790e-04,  6.2630e-04, -6.8808e-04,  ..., -9.5371e-04,
          -4.6260e-04,  1.4375e-04],
         [-2.4923e-04,  3.1931e-04, -5.9586e-04,  ..., -7.4934e-04,
          -3.3167e-04, -9.7053e-05],
         [-7.7500e-04,  5.1112e-04, -1.1440e-03,  ...,  2.0397e-04,
           3.2379e-04,  5.9385e-04]],

        [[-8.2307e-04,  3.6173e-04, -8.2259e-04,  ..., -3.4243e-04,
          -2.7404e-04, -9.0194e-05],
         [-8.6131e-04,  1.0314e-04, -9.0464e-04,  ..., -2.5815e-05,
          -2.6330e-04,  6.0135e-04],
         [-4.1938e-05,  9.2645e-04, -6.3479e-04,  ..., -2.6759e-04,
          -2.1267e-04, -4.8312e-05],
         ...,
         [-1.0866e-03, -3.3723e-04, -6.5260e-04,  ..., -6.8635e-04,
          -1.7087e-04,  1.4141e-04],
         [-5.0693e-04,  3.7438e-04, -1.3046e-03,  ..., -7.1787e-04,
          -3.1024e-04,  7.3973e-04],
         [-8.7213e-04,  1.3168e-04, -8.3312e-04,  ..., -2.8881e-04,
          -2.1078e-04,  4.1822e-04]],

        [[-6.9946e-04,  9.1860e-04, -4.7630e-04,  ..., -3.4329e-05,
          -7.5896e-04, -2.3709e-04],
         [-8.1956e-04,  8.2525e-04, -5.1021e-04,  ..., -1.8902e-04,
          -7.9114e-04, -6.6974e-05],
         [-4.1162e-04,  4.5417e-04, -3.5115e-04,  ..., -9.6953e-04,
          -6.4492e-04,  8.8145e-05],
         ...,
         [-1.3844e-03,  6.7281e-04, -6.0444e-05,  ...,  9.2618e-05,
           1.7107e-05,  5.9711e-04],
         [-8.4778e-04,  2.8759e-04, -7.4074e-04,  ..., -1.4522e-04,
           2.0201e-06,  2.6594e-04],
         [-1.0034e-03,  2.0941e-04, -1.0597e-03,  ..., -7.0851e-04,
           1.3925e-04,  2.1572e-04]],

        [[-5.9983e-04,  6.6796e-04, -6.3699e-04,  ..., -5.8696e-04,
          -6.2222e-04, -4.1283e-04],
         [-5.6866e-04,  1.0280e-03, -1.0290e-03,  ..., -1.6283e-04,
           3.0689e-04,  3.1355e-04],
         [-7.4159e-04, -3.4680e-05, -8.6734e-04,  ..., -6.7872e-05,
          -3.3746e-04, -3.3674e-04],
         ...,
         [-6.0348e-04,  2.1177e-04, -1.4944e-04,  ..., -3.1723e-04,
          -6.5258e-04, -1.0553e-04],
         [-6.0895e-04, -1.7066e-05, -6.6751e-04,  ..., -9.8913e-05,
          -3.9232e-04, -4.2344e-05],
         [-5.3139e-04,  6.9205e-04, -4.3547e-04,  ..., -9.7597e-04,
          -6.3882e-04, -4.4122e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 1.2471e+00,  1.5984e-01, -8.5541e-01,  ...,  4.2528e-01,
           2.6203e-01,  1.2483e+00],
         [ 4.4020e-02, -2.7856e-01,  5.9727e-01,  ...,  1.1089e-01,
          -1.8210e+00,  1.1340e+00],
         [ 7.3924e-01,  7.8464e-01, -1.0415e+00,  ...,  2.9278e-01,
           1.8077e-01,  9.7492e-01],
         ...,
         [ 4.8022e-02, -1.7258e-01,  2.9823e-02,  ...,  1.7759e-01,
          -8.5115e-02,  9.0152e-04],
         [-2.8407e-02,  2.2157e-01,  5.9193e-01,  ...,  2.5387e-01,
          -3.4225e-01, -1.4095e-01],
         [ 1.4854e-01,  3.5850e-02,  1.8186e-01,  ...,  4.7945e-01,
          -3.1534e-01, -4.7225e-01]],

        [[ 7.0560e-01, -1.3204e-01, -1.4158e-01,  ..., -6.1438e-01,
          -1.0323e+00,  6.6276e-01],
         [ 8.7244e-01, -4.0266e-01,  5.9213e-01,  ..., -4.9895e-01,
          -8.9416e-01,  7.6109e-01],
         [ 4.6678e-01, -9.3942e-01,  1.3248e+00,  ..., -8.8264e-01,
          -1.8430e-01, -4.6280e-02],
         ...,
         [ 5.1666e-01,  3.6273e-02,  1.0103e+00,  ..., -2.1059e-01,
          -7.6030e-01, -4.4114e-01],
         [ 7.8013e-01, -3.8475e-01,  1.2633e+00,  ..., -2.2139e-01,
          -8.2862e-01,  3.3141e-01],
         [ 8.1292e-01, -7.5523e-01,  1.1714e+00,  ..., -1.7859e-01,
          -6.3058e-01, -1.8400e-01]],

        [[ 7.0881e-01, -5.7263e-01, -8.7286e-01,  ...,  2.6124e-01,
          -1.0496e+00,  6.9386e-01],
         [ 7.5146e-01, -6.9849e-01, -1.3240e+00,  ...,  5.8205e-02,
          -1.3491e+00,  7.6637e-01],
         [-5.2724e-01,  5.1832e-01, -1.4843e+00,  ...,  1.8704e-01,
          -3.4138e-01, -2.0677e-02],
         ...,
         [ 4.7520e-02, -1.6184e-01,  2.2247e-02,  ...,  1.9989e-01,
          -6.3724e-02,  7.9316e-03],
         [-1.0598e+00, -2.1171e-01,  1.0090e-02,  ...,  1.1065e+00,
          -3.2263e-01, -1.8648e-01],
         [-7.7939e-01, -1.5686e-01, -7.7112e-03,  ...,  1.2234e+00,
           1.7654e-01, -2.8830e-01]],

        [[ 3.9608e-01, -3.5296e-02, -3.2324e-01,  ...,  8.6503e-01,
          -1.7369e-01,  1.7031e+00],
         [ 5.5716e-01, -2.1368e-01,  4.3377e-01,  ...,  9.7750e-01,
          -7.0727e-01,  1.2992e+00],
         [-7.2499e-01,  2.9059e-01, -4.8487e-01,  ...,  5.1416e-01,
          -6.0277e-02,  7.0180e-01],
         ...,
         [-3.0208e-01,  5.8525e-01, -6.1191e-01,  ...,  1.2862e+00,
          -5.5656e-01,  5.5037e-01],
         [-7.2534e-02, -2.6587e-01, -6.6224e-01,  ...,  9.5239e-01,
          -3.8089e-01, -7.7214e-01],
         [ 2.0160e-01, -8.0639e-04,  6.8174e-02,  ...,  3.4140e-01,
          -2.1763e-01, -9.9453e-03]],

        [[ 9.8199e-01, -1.8553e+00,  2.7882e-01,  ...,  1.0370e+00,
           1.4082e-01,  9.2992e-01],
         [ 4.5404e-01, -1.4316e+00, -4.5565e-01,  ...,  1.1183e+00,
          -1.0574e+00,  1.2230e+00],
         [ 2.0154e+00, -6.2970e-01, -1.0163e-01,  ...,  1.1830e-01,
          -9.7383e-01,  4.8005e-01],
         ...,
         [ 3.2256e-02, -1.7599e-01,  3.7853e-02,  ...,  1.9726e-01,
          -6.9252e-02,  2.6886e-02],
         [ 7.9177e-02,  1.1965e-01,  3.0939e-02,  ...,  8.5491e-02,
           3.3450e-02, -3.2267e-01],
         [ 3.0909e-02,  1.4092e-01, -1.3010e-01,  ..., -6.1194e-02,
          -4.4287e-02, -2.0328e-01]],

        [[ 3.0430e-01, -2.3801e-01,  3.4569e-01,  ...,  1.0190e+00,
           1.6869e-02,  1.4960e-01],
         [-2.4980e-01,  1.6455e-01, -1.6449e-01,  ...,  6.1237e-01,
          -2.4793e-01,  3.2173e-01],
         [ 7.5277e-01,  7.7733e-01,  3.3414e-01,  ..., -7.3583e-01,
           5.9569e-02,  2.9751e-01],
         ...,
         [ 5.6650e-03, -2.2248e-01,  1.3862e-02,  ...,  1.6350e-01,
          -7.0711e-02,  1.9050e-02],
         [ 2.1407e-01,  3.3346e-01,  1.9558e-01,  ...,  6.5773e-01,
          -2.1870e-01,  1.3001e-01],
         [ 1.6526e-01,  3.0459e-01,  2.6005e-01,  ...,  5.9721e-01,
          -2.1106e-01,  1.4478e-01]]], device='cuda:0')
prompt:['<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] An image that shows  ', '<Img><ImageHere></Img> [caption] Could you use a few words to describe what you perceive in the photo? ', '<Img><ImageHere></Img> [caption] Using language, provide a short account of the image. ', '<Img><ImageHere></Img> [caption] A short image description: ', '<Img><ImageHere></Img> [caption] Summarize this image in a few words. ']
processed prompt_list:['A short image description:', 'An image that shows', 'Could you use a few words to describe what you perceive in the photo?', 'Using language, provide a short account of the image.', 'A short image description:', 'Summarize this image in a few words.']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-4.6670e-04,  9.0728e-05, -1.2274e-03,  ..., -2.1103e-04,
           4.4117e-05,  2.5580e-04],
         [-6.5707e-04, -2.4265e-04, -6.7705e-04,  ..., -9.9631e-04,
           3.4947e-04, -7.7852e-05],
         [-1.3327e-04,  6.3828e-04, -9.7486e-04,  ..., -5.7708e-04,
           9.5980e-05, -3.9372e-04],
         ...,
         [ 5.8941e-04, -1.0547e-03,  1.1215e-03,  ..., -2.7896e-04,
           3.2050e-05, -7.6379e-04],
         [-7.4979e-04,  8.9222e-04, -1.0508e-03,  ..., -4.2181e-04,
           2.0829e-04,  6.6154e-05],
         [-1.1136e-04,  4.1967e-06, -1.0089e-03,  ...,  3.3733e-04,
           8.6763e-04,  2.0224e-05]],

        [[-1.0573e-03,  7.3290e-04, -8.7634e-04,  ..., -2.3144e-04,
           4.9208e-04,  6.4408e-04],
         [-1.2664e-03,  6.7750e-04, -6.7655e-04,  ..., -5.3314e-04,
           4.5167e-04,  4.3666e-04],
         [-1.1873e-03,  6.3270e-04,  5.9318e-04,  ..., -7.0792e-04,
          -6.2984e-04, -1.5913e-04],
         ...,
         [-1.4474e-03,  7.4989e-05,  7.2037e-04,  ..., -6.7656e-04,
          -4.8564e-04, -6.2324e-04],
         [-1.3158e-03,  5.3399e-04, -3.5336e-04,  ..., -6.6079e-04,
          -4.4484e-06,  1.8242e-04],
         [-1.3452e-03,  6.9073e-04,  6.6398e-05,  ..., -6.7067e-04,
          -3.9361e-04, -3.5540e-04]],

        [[-1.1451e-03, -4.3341e-05, -1.0490e-03,  ..., -4.8428e-04,
           2.6748e-04,  3.9361e-04],
         [-1.1544e-03, -3.5658e-05, -9.5676e-04,  ..., -4.1813e-04,
           6.7054e-04,  4.9719e-04],
         [-1.5934e-04,  1.1846e-04, -1.7844e-04,  ..., -1.0701e-04,
          -2.0470e-04, -4.4640e-04],
         ...,
         [ 5.9746e-04, -1.0714e-03,  1.1712e-03,  ..., -2.8876e-04,
           1.6311e-05, -7.6322e-04],
         [-7.2254e-04,  6.3062e-04, -9.6465e-04,  ...,  2.6912e-04,
          -1.8904e-04, -1.4996e-04],
         [-6.0444e-04,  6.0682e-04, -9.3988e-04,  ...,  5.5320e-04,
          -7.7572e-05, -1.5360e-04]],

        [[-4.1286e-04,  7.6280e-05, -5.0488e-04,  ..., -4.4266e-04,
           3.5726e-05,  5.0869e-04],
         [ 1.6958e-04,  2.8993e-04, -6.8927e-04,  ..., -4.3526e-04,
          -1.7327e-04,  4.6903e-04],
         [-1.0165e-06, -1.6267e-04, -1.5921e-04,  ..., -5.8247e-04,
          -1.7233e-04, -2.8408e-04],
         ...,
         [ 3.2605e-04, -2.7485e-04, -7.0165e-04,  ..., -5.3540e-04,
          -6.9260e-04, -1.5386e-04],
         [-4.0782e-04,  4.3868e-04, -7.4870e-04,  ...,  4.0663e-04,
           7.7327e-05,  3.2545e-04],
         [-2.9694e-04,  1.4847e-04, -1.0585e-03,  ...,  2.3719e-04,
           8.8559e-04,  1.7032e-04]],

        [[-9.3281e-04,  1.2846e-04, -1.0002e-03,  ..., -1.7674e-04,
           7.5737e-05,  4.8230e-04],
         [-1.2416e-03, -7.9197e-05, -1.2151e-03,  ..., -2.0118e-04,
           2.5429e-05,  9.4895e-04],
         [-6.8114e-04,  2.7312e-04, -7.1286e-04,  ..., -9.8589e-06,
           4.9181e-04,  8.1356e-05],
         ...,
         [ 5.8982e-04, -1.0415e-03,  1.1270e-03,  ..., -2.8245e-04,
           1.6126e-05, -7.6606e-04],
         [-1.0015e-03,  7.7223e-04, -7.3331e-04,  ...,  7.4993e-05,
           8.1815e-05,  3.3035e-04],
         [-9.9590e-04,  9.9210e-04, -9.6074e-04,  ...,  2.9982e-04,
           1.1819e-04,  5.0508e-04]],

        [[-6.2307e-04,  3.9324e-04, -1.0808e-03,  ...,  1.8432e-04,
           1.5350e-04,  3.3614e-04],
         [-1.2314e-03, -2.1242e-05, -9.7422e-04,  ...,  2.8395e-04,
           5.5404e-04,  9.7231e-04],
         [-8.6831e-04,  8.9605e-05, -5.4585e-04,  ..., -3.4580e-04,
           5.2394e-04,  3.7366e-04],
         ...,
         [ 5.5864e-04, -1.0465e-03,  1.1314e-03,  ..., -2.7154e-04,
          -6.2959e-06, -7.8559e-04],
         [-6.6585e-04,  4.9939e-04, -5.8902e-04,  ...,  1.6919e-04,
           2.8929e-04,  1.0997e-04],
         [-6.2223e-04,  5.3022e-04, -5.6769e-04,  ...,  2.3689e-04,
           2.9807e-04,  6.9183e-05]]], device='cuda:0', grad_fn=<MulBackward0>)
instruction_input prompt:['<Img><ImageHere></Img> [refer] could you tell me the location for the horse is pulling the carriage ? ', '<Img><ImageHere></Img> [refer] where is a large green tree ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of a ladybug made of cake icing ', '<Img><ImageHere></Img> [refer] could you tell me the location for a spoon on the table ? ', '<Img><ImageHere></Img> [refer] where is shadow of the skater ? ', '<Img><ImageHere></Img> [refer] where is leash attached to the collar on a dog ? ']
this is encode_img_txt function!
image_embeds.shape:torch.Size([6, 1024, 1408])
image_embeds:tensor([[[ 0.4102,  0.2270,  0.8392,  ...,  1.0854, -0.2443,  1.2866],
         [ 0.5723,  0.2346,  1.1741,  ...,  1.3181, -0.0663,  1.2634],
         [ 0.1577,  0.2942,  0.8885,  ...,  1.1716, -0.5656,  0.5839],
         ...,
         [ 0.2404,  0.9083,  1.1411,  ...,  1.0029, -0.2468,  1.8447],
         [ 0.7688,  1.0891,  0.9145,  ...,  1.2373,  0.1140,  2.1499],
         [ 0.7585,  0.0557,  0.9381,  ...,  1.2371,  0.4350,  1.6825]],

        [[ 0.3495,  0.0213,  0.7705,  ...,  0.8903,  0.0200,  1.3873],
         [ 0.2614,  0.5286,  0.4002,  ...,  1.4250, -0.6207,  0.9987],
         [ 0.3299,  1.0448,  0.3915,  ...,  1.2702, -0.7613,  0.6797],
         ...,
         [ 0.5864,  0.3579, -0.2087,  ...,  1.2134, -0.6662,  1.1453],
         [-0.2959,  0.1464,  0.0758,  ...,  1.1830,  0.3054,  0.8242],
         [ 0.0329,  0.5207,  0.0601,  ...,  1.0144, -0.3846,  0.3091]],

        [[-1.5669,  0.0025,  0.7916,  ...,  0.8078,  0.1681,  0.4908],
         [-0.1141, -0.7350,  1.0499,  ..., -0.2213, -0.4948, -0.1506],
         [-0.1220, -0.0853,  0.2702,  ...,  0.3709, -0.2706, -0.0839],
         ...,
         [-1.2181, -0.0893,  0.5717,  ...,  0.7954, -0.3176,  0.5508],
         [-0.6908, -0.3508,  0.1554,  ...,  0.7354, -1.0682,  0.8787],
         [-0.0922, -0.1967,  1.3512,  ...,  0.8987,  0.2793,  1.0114]],

        [[ 0.5499,  2.3541, -0.3200,  ...,  1.5752, -0.9945,  1.6234],
         [ 0.6046,  2.1042, -0.4857,  ...,  1.7838, -1.1402,  1.7204],
         [-0.1502,  0.7103,  0.0691,  ...,  0.6726, -0.5388,  0.5138],
         ...,
         [-0.2201,  1.0550,  0.5284,  ...,  1.2396, -0.4481,  1.2463],
         [ 0.0597,  1.2468,  0.7738,  ...,  1.2604, -0.5744,  1.4523],
         [-0.3500,  0.8752,  0.5829,  ...,  1.6454, -0.1978,  1.3971]],

        [[-0.9095, -0.7527,  0.5714,  ...,  0.8235,  0.9863,  0.7169],
         [-0.9168, -0.7334,  0.5391,  ...,  0.8455,  1.0283,  0.6874],
         [ 0.3631,  0.7281,  0.2659,  ...,  0.2599,  0.2836,  0.7155],
         ...,
         [-0.0395,  1.4200,  0.3998,  ...,  1.5007, -0.3926, -0.8243],
         [-0.1509,  1.3073,  0.3453,  ...,  1.4785, -0.1783, -0.5564],
         [-1.1500, -0.6373,  0.5348,  ...,  0.6275,  0.6906,  0.7487]],

        [[-0.0845, -0.0213, -0.1101,  ...,  0.2454,  0.2409,  0.3500],
         [ 0.1649,  0.7791, -0.4344,  ..., -0.4802,  0.3013,  0.9748],
         [ 0.3925,  0.1179, -0.5005,  ...,  0.0350,  0.6825,  0.7814],
         ...,
         [-0.7322, -0.4382,  1.0157,  ...,  0.6694,  0.4587,  0.6460],
         [ 0.0039,  1.2482, -0.0991,  ..., -0.0703, -0.4048, -0.8120],
         [-0.4445,  1.6737,  0.0752,  ..., -0.2398, -1.1931, -0.5961]]],
       device='cuda:0')
prompt:['<Img><ImageHere></Img> [refer] could you tell me the location for the horse is pulling the carriage ? ', '<Img><ImageHere></Img> [refer] where is a large green tree ? ', '<Img><ImageHere></Img> [refer] from this image, tell me the location of a ladybug made of cake icing ', '<Img><ImageHere></Img> [refer] could you tell me the location for a spoon on the table ? ', '<Img><ImageHere></Img> [refer] where is shadow of the skater ? ', '<Img><ImageHere></Img> [refer] where is leash attached to the collar on a dog ? ']
processed prompt_list:['could you tell me the location for the horse is pulling the carriage ?', 'where is a large green tree ?', 'from this image, tell me the location of a ladybug made of cake icing', 'could you tell me the location for a spoon on the table ?', 'where is shadow of the skater ?', 'where is leash attached to the collar on a dog ?']
prompt_aware_image_embeds.shape:torch.Size([6, 1024, 1408])
prompt_aware_image_embeds:tensor([[[-1.0408e-03, -7.9285e-05, -1.4049e-03,  ..., -2.9879e-04,
          -2.6424e-04,  2.0039e-04],
         [-1.1515e-03, -9.0197e-05, -1.0622e-03,  ...,  9.1978e-05,
          -5.7034e-05,  2.3122e-04],
         [-1.1215e-03,  2.5210e-05, -1.2581e-03,  ..., -5.0582e-04,
           1.2251e-04,  2.4276e-04],
         ...,
         [-7.3708e-04, -1.4259e-04, -5.6326e-04,  ..., -3.4669e-04,
          -2.6596e-04, -2.1015e-05],
         [-1.0523e-03, -2.7686e-04, -5.3615e-04,  ..., -1.0958e-04,
          -1.1086e-05,  5.2772e-05],
         [-1.2897e-03,  1.9203e-04, -6.8149e-04,  ...,  2.7221e-04,
          -2.2593e-04,  2.2962e-04]],

        [[-7.7317e-04, -3.2748e-04, -6.9405e-04,  ..., -1.0468e-03,
           3.9731e-04,  6.6354e-04],
         [-6.6291e-04, -3.1409e-04, -7.4714e-04,  ..., -1.1478e-03,
           4.1462e-05,  5.9724e-04],
         [-4.9747e-04,  2.3694e-04, -8.0053e-04,  ..., -5.0986e-04,
           6.5877e-05,  4.3505e-04],
         ...,
         [-6.8389e-04,  6.7333e-05, -8.9698e-04,  ..., -3.5191e-04,
           1.9126e-04,  4.9215e-04],
         [-8.9082e-04, -5.3735e-04, -5.0067e-04,  ..., -1.1223e-03,
           5.6212e-04,  1.7138e-04],
         [-5.5766e-04,  8.6516e-04, -7.1022e-04,  ...,  3.4658e-04,
           1.3870e-04,  1.8745e-05]],

        [[-8.1874e-04,  3.4824e-04, -1.5908e-03,  ..., -9.7811e-04,
          -1.0323e-04,  3.0827e-04],
         [-6.4771e-04,  2.5961e-04, -2.8816e-04,  ..., -2.4700e-04,
          -7.7954e-04,  3.2570e-05],
         [-6.8627e-04,  6.9200e-04, -3.2333e-04,  ..., -7.8125e-04,
          -3.9540e-04,  1.5928e-04],
         ...,
         [-8.1144e-04,  3.4155e-04, -1.4365e-03,  ..., -1.1409e-03,
          -1.0226e-04,  2.2033e-04],
         [-9.5937e-04,  1.9209e-04, -8.5008e-04,  ..., -1.0055e-03,
          -2.9460e-04, -1.8603e-04],
         [-1.3163e-03,  1.3757e-04, -9.7987e-04,  ..., -1.0359e-03,
          -4.5929e-04,  1.4399e-04]],

        [[-9.2188e-04,  4.2926e-04, -3.5221e-04,  ..., -4.3116e-04,
          -1.1198e-05,  3.3140e-04],
         [-7.9138e-04,  6.0345e-04, -2.5333e-04,  ..., -2.7576e-04,
           1.2607e-04,  1.0040e-04],
         [-5.4602e-04,  4.4842e-04, -7.5525e-04,  ..., -4.5639e-04,
          -9.1133e-04,  4.1628e-04],
         ...,
         [-4.3873e-04,  7.1261e-04, -5.3066e-04,  ..., -6.0145e-04,
           3.3992e-04, -3.2424e-04],
         [-7.5526e-04,  5.7191e-04, -5.4578e-04,  ..., -5.0968e-04,
           4.7216e-04, -1.3977e-04],
         [-1.0837e-03,  1.6213e-04, -6.8138e-04,  ..., -8.1232e-04,
           2.6427e-04,  5.1473e-04]],

        [[-4.5040e-04,  3.3631e-04, -1.0325e-03,  ...,  1.8182e-04,
           2.1941e-05,  7.2539e-04],
         [-5.0531e-04,  2.5859e-04, -1.0211e-03,  ...,  1.5188e-04,
           4.7803e-05,  7.3871e-04],
         [-6.8405e-04, -1.8659e-04, -8.6149e-04,  ...,  4.1386e-04,
          -5.3088e-04, -1.7616e-06],
         ...,
         [-6.4087e-06, -1.6841e-05, -3.0577e-04,  ..., -3.3849e-04,
          -6.1201e-04, -5.1168e-04],
         [-1.2948e-04, -7.7865e-05, -2.5299e-04,  ..., -4.1910e-04,
          -5.6612e-04, -5.3843e-04],
         [-7.5083e-04,  1.5422e-04, -9.4915e-04,  ..., -2.1169e-05,
          -5.5061e-05,  5.7635e-04]],

        [[-3.6773e-06,  6.4971e-04, -9.5094e-04,  ...,  6.2477e-05,
          -5.9386e-04, -8.1035e-05],
         [-8.2700e-04,  9.9452e-04, -8.8124e-04,  ..., -8.0216e-05,
          -4.4950e-04, -8.5196e-05],
         [-4.9203e-04,  1.0464e-03, -1.0934e-03,  ...,  1.6377e-04,
          -5.7115e-04,  2.6304e-04],
         ...,
         [-1.0036e-03, -2.4779e-04, -4.7007e-04,  ..., -6.7731e-04,
          -4.2117e-04, -2.2621e-04],
         [-1.4487e-03,  9.3349e-06, -1.3403e-04,  ...,  1.7657e-04,
          -1.0409e-03, -1.8560e-04],
         [-1.1447e-03,  3.3037e-04, -3.4796e-04,  ..., -1.0155e-04,
          -1.1513e-03, -1.7802e-04]]], device='cuda:0', grad_fn=<MulBackward0>)
| distributed init (rank 0, world 4): env://
| distributed init (rank 1, world 4): env://
| distributed init (rank 2, world 4): env://
| distributed init (rank 3, world 4): env://
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/coco_captions/coco_karpathy_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.49s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.66s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.33s)
loading dataset refcoco into memory...
creating index...
index created.
DONE (t=2.44s)
loading dataset refcoco+ into memory...
creating index...
index created.
DONE (t=2.45s)
loading dataset refcocog into memory...
creating index...
index created.
DONE (t=2.26s)
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_train.json
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/vqav2/vqa_val.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/okvqa/okvqa_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/aokvqa/aokvqa_v1p0_train.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/coco/images/train2014
len(exist_annotation):11106
Using downloaded and verified file: /home/users/nus/idmwyk/scratch/temp/dataset/gqa/train_balanced_questions.json
vis_path:/home/users/nus/idmwyk/scratch/temp/dataset/gqa/images/train2014
trainable params: 27262976 || all params: 8057524224 || trainable%: 0.33835425426081844
Position interpolate from 16x16 to 32x32
model arch:
 MiniGPTv4(
  (llama_model): PeftModelForCausalLM(
    (base_model): LoraModel(
      (model): LlamaForCausalLM(
        (model): LlamaModel(
          (embed_tokens): Embedding(128256, 4096)
          (layers): ModuleList(
            (0-31): 32 x LlamaDecoderLayer(
              (self_attn): LlamaAttention(
                (q_proj): Linear(
                  in_features=4096, out_features=4096, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=4096, bias=False)
                )
                (k_proj): Linear(in_features=4096, out_features=1024, bias=False)
                (v_proj): Linear(
                  in_features=4096, out_features=1024, bias=False
                  (lora_dropout): Dropout(p=0.05, inplace=False)
                  (lora_A): Linear(in_features=4096, out_features=64, bias=False)
                  (lora_B): Linear(in_features=64, out_features=1024, bias=False)
                )
                (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
                (rotary_emb): LlamaRotaryEmbedding()
              )
              (mlp): LlamaMLP(
                (gate_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (up_proj): Linear(in_features=4096, out_features=14336, bias=False)
                (down_proj): Linear(in_features=14336, out_features=4096, bias=False)
                (act_fn): SiLU()
              )
              (input_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
              (post_attention_layernorm): LlamaRMSNorm((4096,), eps=1e-05)
            )
          )
          (norm): LlamaRMSNorm((4096,), eps=1e-05)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (lm_head): CastOutputToFloat(
          (0): Linear(in_features=4096, out_features=128256, bias=False)
        )
      )
    )
  )
  (visual_encoder): VisionTransformer(
    (patch_embed): PatchEmbed(
      (proj): Conv2d(3, 1408, kernel_size=(14, 14), stride=(14, 14))
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0-38): 39 x Block(
        (norm1): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=1408, out_features=4224, bias=False)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=1408, out_features=1408, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((1408,), eps=1e-06, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=1408, out_features=6144, bias=True)
          (act): GELU(approximate='none')
          (fc2): Linear(in_features=6144, out_features=1408, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (ln_vision): LayerNorm((1408,), eps=1e-05, elementwise_affine=True)
  (local_attn): LocalAttention(
    (txt): Linear(in_features=4096, out_features=1408, bias=True)
    (img): Linear(in_features=1408, out_features=1408, bias=True)
  )
  (llama_proj): Linear(in_features=5632, out_features=4096, bias=True)
)
batch sizes [[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.0.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.1.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.2.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.3.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.4.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.5.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.6.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.7.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.8.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.9.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.10.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.11.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.12.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.13.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.14.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.15.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.16.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.17.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.18.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.19.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.20.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.21.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.22.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.23.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.24.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.25.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.26.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.27.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.28.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.29.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.30.self_attn.v_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.q_proj.lora_B.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_A.weight
module.llama_model.base_model.model.model.layers.31.self_attn.v_proj.lora_B.weight
module.local_attn.txt.weight
module.local_attn.txt.bias
module.local_attn.img.weight
module.local_attn.img.bias
module.llama_proj.weight
module.llama_proj.bias
Train: data epoch: [0]  [   0/1000]  eta: 6:14:08  lr: 0.000001  loss: 5.9027  time: 22.4481  data: 0.0000  max mem: 29141
Train: data epoch: [0]  [  50/1000]  eta: 0:22:14  lr: 0.000001  loss: 5.7986  time: 0.7084  data: 0.0000  max mem: 30314
Train: data epoch: [0]  [ 100/1000]  eta: 0:14:41  lr: 0.000002  loss: 5.8089  time: 0.4863  data: 0.0000  max mem: 30433
Train: data epoch: [0]  [ 150/1000]  eta: 0:11:26  lr: 0.000002  loss: 3.3997  time: 0.4489  data: 0.0000  max mem: 30505
Train: data epoch: [0]  [ 200/1000]  eta: 0:09:34  lr: 0.000003  loss: 2.9804  time: 0.4485  data: 0.0000  max mem: 30505
Train: data epoch: [0]  [ 250/1000]  eta: 0:08:18  lr: 0.000003  loss: 4.1813  time: 0.4477  data: 0.0000  max mem: 30505
Train: data epoch: [0]  [ 300/1000]  eta: 0:07:20  lr: 0.000004  loss: 1.0854  time: 0.4491  data: 0.0000  max mem: 30643
Train: data epoch: [0]  [ 350/1000]  eta: 0:06:32  lr: 0.000004  loss: 1.8977  time: 0.4479  data: 0.0000  max mem: 30688
Train: data epoch: [0]  [ 400/1000]  eta: 0:05:50  lr: 0.000005  loss: 3.6146  time: 0.4503  data: 0.0000  max mem: 30688
Train: data epoch: [0]  [ 450/1000]  eta: 0:05:13  lr: 0.000005  loss: 0.8025  time: 0.4497  data: 0.0000  max mem: 30688
Train: data epoch: [0]  [ 500/1000]  eta: 0:04:38  lr: 0.000005  loss: 1.7445  time: 0.4487  data: 0.0000  max mem: 30688
Train: data epoch: [0]  [ 550/1000]  eta: 0:04:06  lr: 0.000006  loss: 3.4612  time: 0.4491  data: 0.0000  max mem: 30688
Train: data epoch: [0]  [ 600/1000]  eta: 0:03:35  lr: 0.000006  loss: 3.4199  time: 0.4512  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 650/1000]  eta: 0:03:06  lr: 0.000007  loss: 3.6842  time: 0.4503  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 700/1000]  eta: 0:02:37  lr: 0.000007  loss: 1.4913  time: 0.4501  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 750/1000]  eta: 0:02:10  lr: 0.000008  loss: 1.5116  time: 0.4487  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 800/1000]  eta: 0:01:43  lr: 0.000008  loss: 2.6213  time: 0.4490  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 850/1000]  eta: 0:01:16  lr: 0.000009  loss: 0.2685  time: 0.4491  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 900/1000]  eta: 0:00:50  lr: 0.000009  loss: 2.5005  time: 0.4496  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 950/1000]  eta: 0:00:25  lr: 0.000010  loss: 3.4543  time: 0.4489  data: 0.0000  max mem: 30974
Train: data epoch: [0]  [ 999/1000]  eta: 0:00:00  lr: 0.000010  loss: 0.4582  time: 0.5260  data: 0.0000  max mem: 31331
Train: data epoch: [0] Total time: 0:08:25 (0.5052 s / it)
Train: data epoch: [1]  [   0/1000]  eta: 0:07:23  lr: 0.000010  loss: 2.9595  time: 0.4437  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [  50/1000]  eta: 0:07:06  lr: 0.000010  loss: 1.9447  time: 0.4507  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 100/1000]  eta: 0:06:44  lr: 0.000010  loss: 1.5462  time: 0.4484  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 150/1000]  eta: 0:06:22  lr: 0.000010  loss: 3.1436  time: 0.4501  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 200/1000]  eta: 0:05:59  lr: 0.000010  loss: 0.6736  time: 0.4501  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 250/1000]  eta: 0:05:37  lr: 0.000010  loss: 1.3951  time: 0.4491  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 300/1000]  eta: 0:05:14  lr: 0.000010  loss: 1.5532  time: 0.4488  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 350/1000]  eta: 0:04:52  lr: 0.000010  loss: 1.5316  time: 0.4503  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 400/1000]  eta: 0:04:29  lr: 0.000010  loss: 1.4507  time: 0.4498  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 450/1000]  eta: 0:04:07  lr: 0.000010  loss: 3.2671  time: 0.4489  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 500/1000]  eta: 0:03:44  lr: 0.000010  loss: 2.7452  time: 0.4503  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 550/1000]  eta: 0:03:22  lr: 0.000010  loss: 1.6280  time: 0.4487  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 600/1000]  eta: 0:03:00  lr: 0.000010  loss: 2.3176  time: 0.4509  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 650/1000]  eta: 0:02:37  lr: 0.000010  loss: 1.4343  time: 0.4499  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 700/1000]  eta: 0:02:15  lr: 0.000010  loss: 1.3555  time: 0.4508  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 750/1000]  eta: 0:01:52  lr: 0.000010  loss: 1.4879  time: 0.4499  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 800/1000]  eta: 0:01:30  lr: 0.000010  loss: 1.3854  time: 0.4512  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 850/1000]  eta: 0:01:07  lr: 0.000010  loss: 2.3204  time: 0.4493  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 900/1000]  eta: 0:00:45  lr: 0.000010  loss: 3.5022  time: 0.4509  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 950/1000]  eta: 0:00:22  lr: 0.000010  loss: 1.5242  time: 0.4510  data: 0.0000  max mem: 31331
Train: data epoch: [1]  [ 999/1000]  eta: 0:00:00  lr: 0.000010  loss: 1.4681  time: 0.4550  data: 0.0000  max mem: 31331
Train: data epoch: [1] Total time: 0:07:30 (0.4502 s / it)
Train: data epoch: [2]  [   0/1000]  eta: 0:07:31  lr: 0.000010  loss: 2.7815  time: 0.4516  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [  50/1000]  eta: 0:07:06  lr: 0.000010  loss: 3.4560  time: 0.4496  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 100/1000]  eta: 0:06:44  lr: 0.000010  loss: 1.5103  time: 0.4492  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 150/1000]  eta: 0:06:21  lr: 0.000010  loss: 1.4512  time: 0.4499  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 200/1000]  eta: 0:05:59  lr: 0.000010  loss: 2.4379  time: 0.4493  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 250/1000]  eta: 0:05:37  lr: 0.000010  loss: 3.1029  time: 0.4506  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 300/1000]  eta: 0:05:14  lr: 0.000010  loss: 1.3443  time: 0.4490  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 350/1000]  eta: 0:04:52  lr: 0.000010  loss: 2.9272  time: 0.4495  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 400/1000]  eta: 0:04:29  lr: 0.000010  loss: 0.5776  time: 0.4500  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 450/1000]  eta: 0:04:07  lr: 0.000010  loss: 0.7124  time: 0.4507  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 500/1000]  eta: 0:03:44  lr: 0.000010  loss: 0.9977  time: 0.4487  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 550/1000]  eta: 0:03:22  lr: 0.000010  loss: 2.4691  time: 0.4517  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 600/1000]  eta: 0:03:00  lr: 0.000010  loss: 1.3833  time: 0.4512  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 650/1000]  eta: 0:02:37  lr: 0.000010  loss: 1.2555  time: 0.4510  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 700/1000]  eta: 0:02:15  lr: 0.000010  loss: 2.1811  time: 0.4498  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 750/1000]  eta: 0:01:52  lr: 0.000010  loss: 3.0279  time: 0.4492  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 800/1000]  eta: 0:01:30  lr: 0.000010  loss: 1.4127  time: 0.4494  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 850/1000]  eta: 0:01:08  lr: 0.000010  loss: 3.5395  time: 0.5769  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 900/1000]  eta: 0:00:45  lr: 0.000010  loss: 1.0817  time: 0.4816  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 950/1000]  eta: 0:00:22  lr: 0.000010  loss: 2.4208  time: 0.4509  data: 0.0000  max mem: 31331
Train: data epoch: [2]  [ 999/1000]  eta: 0:00:00  lr: 0.000010  loss: 2.5876  time: 0.4644  data: 0.0000  max mem: 31331
Train: data epoch: [2] Total time: 0:07:34 (0.4542 s / it)
Train: data epoch: [3]  [   0/1000]  eta: 0:07:27  lr: 0.000010  loss: 0.6522  time: 0.4474  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [  50/1000]  eta: 0:07:07  lr: 0.000010  loss: 1.4034  time: 0.4505  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 100/1000]  eta: 0:07:30  lr: 0.000010  loss: 3.1678  time: 0.5255  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 150/1000]  eta: 0:06:52  lr: 0.000010  loss: 0.9211  time: 0.4645  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 200/1000]  eta: 0:06:23  lr: 0.000010  loss: 1.3534  time: 0.4698  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 250/1000]  eta: 0:05:55  lr: 0.000010  loss: 2.3448  time: 0.4578  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 300/1000]  eta: 0:05:29  lr: 0.000010  loss: 3.0934  time: 0.4587  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 350/1000]  eta: 0:05:04  lr: 0.000010  loss: 1.4395  time: 0.4645  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 400/1000]  eta: 0:04:39  lr: 0.000010  loss: 1.9560  time: 0.4495  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 450/1000]  eta: 0:04:15  lr: 0.000010  loss: 2.6436  time: 0.4496  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 500/1000]  eta: 0:03:51  lr: 0.000010  loss: 1.7995  time: 0.4494  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 550/1000]  eta: 0:03:27  lr: 0.000010  loss: 1.1584  time: 0.4496  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 600/1000]  eta: 0:03:04  lr: 0.000010  loss: 1.3201  time: 0.4512  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 650/1000]  eta: 0:02:40  lr: 0.000010  loss: 1.3940  time: 0.4523  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 700/1000]  eta: 0:02:17  lr: 0.000010  loss: 1.3256  time: 0.4505  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 750/1000]  eta: 0:01:54  lr: 0.000010  loss: 1.3415  time: 0.4500  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 800/1000]  eta: 0:01:31  lr: 0.000010  loss: 3.4161  time: 0.4499  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 850/1000]  eta: 0:01:08  lr: 0.000010  loss: 3.0360  time: 0.4493  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 900/1000]  eta: 0:00:45  lr: 0.000010  loss: 3.0677  time: 0.4509  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 950/1000]  eta: 0:00:22  lr: 0.000010  loss: 2.9306  time: 0.4499  data: 0.0000  max mem: 31331
Train: data epoch: [3]  [ 999/1000]  eta: 0:00:00  lr: 0.000010  loss: 1.2876  time: 0.4599  data: 0.0000  max mem: 31331
Train: data epoch: [3] Total time: 0:07:36 (0.4568 s / it)
Train: data epoch: [4]  [   0/1000]  eta: 0:07:27  lr: 0.000010  loss: 4.1085  time: 0.4472  data: 0.0000  max mem: 31331
Train: data epoch: [4]  [  50/1000]  eta: 0:07:07  lr: 0.000010  loss: 1.4133  time: 0.4495  data: 0.0000  max mem: 31331
Train: data epoch: [4]  [ 100/1000]  eta: 0:06:45  lr: 0.000010  loss: 2.1906  time: 0.4501  data: 0.0000  max mem: 31331
Train: data epoch: [4]  [ 150/1000]  eta: 0:06:22  lr: 0.000010  loss: 1.7959  time: 0.4502  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 200/1000]  eta: 0:06:00  lr: 0.000010  loss: 1.3729  time: 0.4511  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 250/1000]  eta: 0:05:37  lr: 0.000010  loss: 3.2166  time: 0.4507  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 300/1000]  eta: 0:05:15  lr: 0.000010  loss: 2.6878  time: 0.4489  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 350/1000]  eta: 0:04:52  lr: 0.000010  loss: 3.3191  time: 0.4500  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 400/1000]  eta: 0:04:30  lr: 0.000010  loss: 2.4182  time: 0.4498  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 450/1000]  eta: 0:04:07  lr: 0.000010  loss: 1.7239  time: 0.4500  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 500/1000]  eta: 0:03:45  lr: 0.000010  loss: 3.2201  time: 0.4522  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 550/1000]  eta: 0:03:22  lr: 0.000010  loss: 2.3580  time: 0.4505  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 600/1000]  eta: 0:03:00  lr: 0.000010  loss: 0.3841  time: 0.4513  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 650/1000]  eta: 0:02:37  lr: 0.000010  loss: 2.4623  time: 0.4504  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 700/1000]  eta: 0:02:15  lr: 0.000010  loss: 3.2871  time: 0.4512  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 750/1000]  eta: 0:01:52  lr: 0.000010  loss: 2.7887  time: 0.4506  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 800/1000]  eta: 0:01:30  lr: 0.000010  loss: 1.3441  time: 0.4593  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 850/1000]  eta: 0:01:07  lr: 0.000010  loss: 2.8718  time: 0.4531  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 900/1000]  eta: 0:00:45  lr: 0.000010  loss: 2.7261  time: 0.4519  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 950/1000]  eta: 0:00:22  lr: 0.000010  loss: 3.0295  time: 0.4493  data: 0.0000  max mem: 31379
Train: data epoch: [4]  [ 999/1000]  eta: 0:00:00  lr: 0.000010  loss: 1.3577  time: 0.4536  data: 0.0000  max mem: 31379
Train: data epoch: [4] Total time: 0:07:30 (0.4507 s / it)
Train: data epoch: [5]  [   0/1000]  eta: 0:07:23  lr: 0.000010  loss: 3.1772  time: 0.4436  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [  50/1000]  eta: 0:07:07  lr: 0.000010  loss: 2.6843  time: 0.4501  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 100/1000]  eta: 0:06:45  lr: 0.000010  loss: 1.8913  time: 0.4503  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 150/1000]  eta: 0:06:22  lr: 0.000010  loss: 0.1710  time: 0.4505  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 200/1000]  eta: 0:06:00  lr: 0.000010  loss: 0.7345  time: 0.4524  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 250/1000]  eta: 0:05:37  lr: 0.000010  loss: 1.3909  time: 0.4506  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 300/1000]  eta: 0:05:15  lr: 0.000010  loss: 1.2728  time: 0.4502  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 350/1000]  eta: 0:04:53  lr: 0.000010  loss: 0.6227  time: 0.4665  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 400/1000]  eta: 0:04:30  lr: 0.000010  loss: 2.4496  time: 0.4505  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 450/1000]  eta: 0:04:08  lr: 0.000010  loss: 2.0490  time: 0.4648  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 500/1000]  eta: 0:03:45  lr: 0.000010  loss: 2.4021  time: 0.4512  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 550/1000]  eta: 0:03:23  lr: 0.000010  loss: 0.5893  time: 0.4501  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 600/1000]  eta: 0:03:01  lr: 0.000010  loss: 3.2067  time: 0.4503  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 650/1000]  eta: 0:02:38  lr: 0.000010  loss: 2.2856  time: 0.4497  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 700/1000]  eta: 0:02:16  lr: 0.000010  loss: 0.2047  time: 0.4622  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 750/1000]  eta: 0:01:53  lr: 0.000010  loss: 2.8938  time: 0.4503  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 800/1000]  eta: 0:01:30  lr: 0.000010  loss: 1.3180  time: 0.4506  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 850/1000]  eta: 0:01:07  lr: 0.000010  loss: 3.1136  time: 0.4504  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 900/1000]  eta: 0:00:45  lr: 0.000010  loss: 0.3060  time: 0.4501  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 950/1000]  eta: 0:00:22  lr: 0.000010  loss: 1.3134  time: 0.4511  data: 0.0000  max mem: 31379
Train: data epoch: [5]  [ 999/1000]  eta: 0:00:00  lr: 0.000010  loss: 2.5471  time: 0.4541  data: 0.0000  max mem: 31379
Train: data epoch: [5] Total time: 0:07:32 (0.4529 s / it)
Train: data epoch: [6]  [   0/1000]  eta: 0:07:46  lr: 0.000010  loss: 3.5126  time: 0.4665  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [  50/1000]  eta: 0:07:07  lr: 0.000010  loss: 1.4445  time: 0.4494  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 100/1000]  eta: 0:06:45  lr: 0.000010  loss: 2.1428  time: 0.4513  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 150/1000]  eta: 0:06:23  lr: 0.000010  loss: 1.0751  time: 0.4557  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 200/1000]  eta: 0:06:01  lr: 0.000010  loss: 2.4623  time: 0.4531  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 250/1000]  eta: 0:05:41  lr: 0.000010  loss: 1.9525  time: 0.4504  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 300/1000]  eta: 0:05:18  lr: 0.000010  loss: 1.3649  time: 0.4499  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 350/1000]  eta: 0:04:55  lr: 0.000010  loss: 2.3657  time: 0.4528  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 400/1000]  eta: 0:04:32  lr: 0.000010  loss: 1.4194  time: 0.4508  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 450/1000]  eta: 0:04:11  lr: 0.000010  loss: 1.4882  time: 0.5140  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 500/1000]  eta: 0:03:48  lr: 0.000010  loss: 3.1379  time: 0.4513  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 550/1000]  eta: 0:03:25  lr: 0.000010  loss: 1.3093  time: 0.4592  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 600/1000]  eta: 0:03:02  lr: 0.000010  loss: 0.3703  time: 0.4490  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 650/1000]  eta: 0:02:39  lr: 0.000010  loss: 1.4152  time: 0.4507  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 700/1000]  eta: 0:02:16  lr: 0.000010  loss: 2.9224  time: 0.4498  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 750/1000]  eta: 0:01:53  lr: 0.000010  loss: 1.3738  time: 0.4500  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 800/1000]  eta: 0:01:30  lr: 0.000010  loss: 0.5674  time: 0.4498  data: 0.0000  max mem: 31379
Train: data epoch: [6]  [ 850/1000]  eta: 0:01:08  lr: 0.000010  loss: 1.4056  time: 0.4527  data: 0.0000  max mem: 31520
Train: data epoch: [6]  [ 900/1000]  eta: 0:00:45  lr: 0.000010  loss: 2.6731  time: 0.4487  data: 0.0000  max mem: 31520
Train: data epoch: [6]  [ 950/1000]  eta: 0:00:22  lr: 0.000010  loss: 0.7061  time: 0.4507  data: 0.0000  max mem: 31520
Train: data epoch: [6]  [ 999/1000]  eta: 0:00:00  lr: 0.000010  loss: 2.6516  time: 0.4789  data: 0.0000  max mem: 31520
Train: data epoch: [6] Total time: 0:07:34 (0.4544 s / it)
Train: data epoch: [7]  [   0/1000]  eta: 0:07:26  lr: 0.000010  loss: 1.4193  time: 0.4468  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [  50/1000]  eta: 0:07:08  lr: 0.000010  loss: 1.4229  time: 0.4512  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 100/1000]  eta: 0:06:45  lr: 0.000010  loss: 0.4800  time: 0.4523  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 150/1000]  eta: 0:06:24  lr: 0.000010  loss: 2.1716  time: 0.4502  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 200/1000]  eta: 0:06:01  lr: 0.000010  loss: 2.3512  time: 0.4514  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 250/1000]  eta: 0:05:38  lr: 0.000010  loss: 2.6656  time: 0.4507  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 300/1000]  eta: 0:05:16  lr: 0.000010  loss: 2.8670  time: 0.4509  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 350/1000]  eta: 0:04:53  lr: 0.000010  loss: 2.3279  time: 0.4541  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 400/1000]  eta: 0:04:30  lr: 0.000010  loss: 2.4723  time: 0.4500  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 450/1000]  eta: 0:04:08  lr: 0.000010  loss: 2.3897  time: 0.4536  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 500/1000]  eta: 0:03:45  lr: 0.000010  loss: 1.8604  time: 0.4512  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 550/1000]  eta: 0:03:23  lr: 0.000010  loss: 2.5256  time: 0.4507  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 600/1000]  eta: 0:03:00  lr: 0.000009  loss: 2.9204  time: 0.4515  data: 0.0000  max mem: 31520
Train: data epoch: [7]  [ 650/1000]  eta: 0:02:38  lr: 0.000009  loss: 2.3051  time: 0.4509  data: 0.0000  max mem: 31656
Train: data epoch: [7]  [ 700/1000]  eta: 0:02:15  lr: 0.000009  loss: 1.3187  time: 0.4495  data: 0.0000  max mem: 31656
Train: data epoch: [7]  [ 750/1000]  eta: 0:01:53  lr: 0.000009  loss: 1.1327  time: 0.4520  data: 0.0000  max mem: 31656
Train: data epoch: [7]  [ 800/1000]  eta: 0:01:30  lr: 0.000009  loss: 2.3486  time: 0.4553  data: 0.0000  max mem: 31656
Train: data epoch: [7]  [ 850/1000]  eta: 0:01:07  lr: 0.000009  loss: 2.5925  time: 0.4797  data: 0.0000  max mem: 31656
Train: data epoch: [7]  [ 900/1000]  eta: 0:00:45  lr: 0.000009  loss: 3.3060  time: 0.4502  data: 0.0000  max mem: 31656
Train: data epoch: [7]  [ 950/1000]  eta: 0:00:22  lr: 0.000009  loss: 1.0003  time: 0.4498  data: 0.0000  max mem: 31656
Train: data epoch: [7]  [ 999/1000]  eta: 0:00:00  lr: 0.000009  loss: 1.0136  time: 0.4541  data: 0.0000  max mem: 31656
Train: data epoch: [7] Total time: 0:07:32 (0.4529 s / it)
Train: data epoch: [8]  [   0/1000]  eta: 0:07:27  lr: 0.000009  loss: 2.7452  time: 0.4476  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [  50/1000]  eta: 0:07:07  lr: 0.000009  loss: 0.4098  time: 0.4504  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 100/1000]  eta: 0:06:45  lr: 0.000009  loss: 1.9040  time: 0.4511  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 150/1000]  eta: 0:06:23  lr: 0.000009  loss: 1.2455  time: 0.4514  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 200/1000]  eta: 0:06:01  lr: 0.000009  loss: 2.5325  time: 0.4572  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 250/1000]  eta: 0:05:38  lr: 0.000009  loss: 0.5200  time: 0.4525  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 300/1000]  eta: 0:05:15  lr: 0.000009  loss: 0.4447  time: 0.4501  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 350/1000]  eta: 0:04:53  lr: 0.000009  loss: 1.3307  time: 0.4510  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 400/1000]  eta: 0:04:30  lr: 0.000009  loss: 2.7793  time: 0.4508  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 450/1000]  eta: 0:04:08  lr: 0.000009  loss: 0.8929  time: 0.4504  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 500/1000]  eta: 0:03:45  lr: 0.000009  loss: 1.2745  time: 0.4496  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 550/1000]  eta: 0:03:23  lr: 0.000009  loss: 2.8607  time: 0.4500  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 600/1000]  eta: 0:03:00  lr: 0.000009  loss: 2.6877  time: 0.4499  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 650/1000]  eta: 0:02:37  lr: 0.000009  loss: 0.3067  time: 0.4514  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 700/1000]  eta: 0:02:15  lr: 0.000009  loss: 3.2285  time: 0.4509  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 750/1000]  eta: 0:01:52  lr: 0.000009  loss: 1.3426  time: 0.4508  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 800/1000]  eta: 0:01:30  lr: 0.000009  loss: 0.2804  time: 0.4502  data: 0.0000  max mem: 31656
Train: data epoch: [8]  [ 850/1000]  eta: 0:01:07  lr: 0.000009  loss: 2.2197  time: 0.4525  data: 0.0000  max mem: 31850
Train: data epoch: [8]  [ 900/1000]  eta: 0:00:45  lr: 0.000009  loss: 1.6805  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [8]  [ 950/1000]  eta: 0:00:22  lr: 0.000009  loss: 1.2564  time: 0.4497  data: 0.0000  max mem: 31850
Train: data epoch: [8]  [ 999/1000]  eta: 0:00:00  lr: 0.000009  loss: 1.3833  time: 0.4642  data: 0.0000  max mem: 31850
Train: data epoch: [8] Total time: 0:07:34 (0.4542 s / it)
Train: data epoch: [9]  [   0/1000]  eta: 0:07:18  lr: 0.000009  loss: 1.2600  time: 0.4385  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [  50/1000]  eta: 0:07:08  lr: 0.000009  loss: 2.5270  time: 0.4522  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 100/1000]  eta: 0:06:46  lr: 0.000009  loss: 2.4982  time: 0.4531  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 150/1000]  eta: 0:06:23  lr: 0.000009  loss: 1.3605  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 200/1000]  eta: 0:06:03  lr: 0.000009  loss: 1.3029  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 250/1000]  eta: 0:05:40  lr: 0.000009  loss: 1.8763  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 300/1000]  eta: 0:05:18  lr: 0.000009  loss: 1.2514  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 350/1000]  eta: 0:04:55  lr: 0.000009  loss: 2.4224  time: 0.4522  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 400/1000]  eta: 0:04:32  lr: 0.000009  loss: 3.2417  time: 0.4500  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 450/1000]  eta: 0:04:09  lr: 0.000009  loss: 0.5005  time: 0.4491  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 500/1000]  eta: 0:03:47  lr: 0.000009  loss: 1.0565  time: 0.4492  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 550/1000]  eta: 0:03:24  lr: 0.000009  loss: 1.3371  time: 0.4701  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 600/1000]  eta: 0:03:01  lr: 0.000009  loss: 1.3197  time: 0.4500  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 650/1000]  eta: 0:02:38  lr: 0.000009  loss: 0.2717  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 700/1000]  eta: 0:02:16  lr: 0.000009  loss: 1.4062  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 750/1000]  eta: 0:01:53  lr: 0.000009  loss: 0.3792  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 800/1000]  eta: 0:01:30  lr: 0.000009  loss: 2.7644  time: 0.4527  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 850/1000]  eta: 0:01:08  lr: 0.000009  loss: 2.3059  time: 0.4513  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 900/1000]  eta: 0:00:45  lr: 0.000009  loss: 2.5875  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 950/1000]  eta: 0:00:22  lr: 0.000009  loss: 1.3568  time: 0.4503  data: 0.0000  max mem: 31850
Train: data epoch: [9]  [ 999/1000]  eta: 0:00:00  lr: 0.000009  loss: 1.9080  time: 0.4697  data: 0.0000  max mem: 31850
Train: data epoch: [9] Total time: 0:07:35 (0.4553 s / it)
Train: data epoch: [10]  [   0/1000]  eta: 0:07:37  lr: 0.000009  loss: 1.2542  time: 0.4578  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [  50/1000]  eta: 0:07:07  lr: 0.000009  loss: 2.3780  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 100/1000]  eta: 0:06:45  lr: 0.000009  loss: 2.8823  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 150/1000]  eta: 0:06:23  lr: 0.000009  loss: 3.1052  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 200/1000]  eta: 0:06:01  lr: 0.000009  loss: 2.4065  time: 0.4528  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 250/1000]  eta: 0:05:38  lr: 0.000009  loss: 1.3995  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 300/1000]  eta: 0:05:15  lr: 0.000009  loss: 2.9438  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 350/1000]  eta: 0:04:53  lr: 0.000009  loss: 2.4140  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 400/1000]  eta: 0:04:30  lr: 0.000009  loss: 2.0413  time: 0.4565  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 450/1000]  eta: 0:04:08  lr: 0.000009  loss: 1.9648  time: 0.4589  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 500/1000]  eta: 0:03:45  lr: 0.000009  loss: 2.5937  time: 0.4483  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 550/1000]  eta: 0:03:23  lr: 0.000009  loss: 2.7666  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 600/1000]  eta: 0:03:00  lr: 0.000009  loss: 2.3690  time: 0.4518  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 650/1000]  eta: 0:02:38  lr: 0.000009  loss: 2.0290  time: 0.4500  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 700/1000]  eta: 0:02:15  lr: 0.000009  loss: 3.5565  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 750/1000]  eta: 0:01:52  lr: 0.000009  loss: 0.8313  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 800/1000]  eta: 0:01:30  lr: 0.000009  loss: 0.6087  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 850/1000]  eta: 0:01:07  lr: 0.000009  loss: 1.5520  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 900/1000]  eta: 0:00:45  lr: 0.000009  loss: 2.1771  time: 0.4525  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 950/1000]  eta: 0:00:22  lr: 0.000009  loss: 2.2010  time: 0.4665  data: 0.0000  max mem: 31850
Train: data epoch: [10]  [ 999/1000]  eta: 0:00:00  lr: 0.000009  loss: 1.2918  time: 0.4557  data: 0.0000  max mem: 31850
Train: data epoch: [10] Total time: 0:07:31 (0.4518 s / it)
Train: data epoch: [11]  [   0/1000]  eta: 0:07:27  lr: 0.000009  loss: 0.4969  time: 0.4472  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [  50/1000]  eta: 0:07:25  lr: 0.000009  loss: 1.1076  time: 0.4994  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 100/1000]  eta: 0:06:54  lr: 0.000009  loss: 1.4142  time: 0.4540  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 150/1000]  eta: 0:06:28  lr: 0.000009  loss: 2.2173  time: 0.4500  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 200/1000]  eta: 0:06:05  lr: 0.000009  loss: 2.5007  time: 0.4635  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 250/1000]  eta: 0:05:41  lr: 0.000009  loss: 1.4014  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 300/1000]  eta: 0:05:18  lr: 0.000009  loss: 2.2284  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 350/1000]  eta: 0:04:55  lr: 0.000009  loss: 1.3047  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 400/1000]  eta: 0:04:33  lr: 0.000009  loss: 1.3564  time: 0.4689  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 450/1000]  eta: 0:04:10  lr: 0.000009  loss: 1.3177  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 500/1000]  eta: 0:03:47  lr: 0.000009  loss: 1.4908  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 550/1000]  eta: 0:03:24  lr: 0.000009  loss: 2.4479  time: 0.4499  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 600/1000]  eta: 0:03:01  lr: 0.000009  loss: 1.1352  time: 0.4498  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 650/1000]  eta: 0:02:38  lr: 0.000009  loss: 1.9500  time: 0.4522  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 700/1000]  eta: 0:02:15  lr: 0.000009  loss: 1.2633  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 750/1000]  eta: 0:01:53  lr: 0.000009  loss: 2.4671  time: 0.4601  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 800/1000]  eta: 0:01:30  lr: 0.000009  loss: 0.1852  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 850/1000]  eta: 0:01:07  lr: 0.000009  loss: 1.8232  time: 0.4520  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 900/1000]  eta: 0:00:45  lr: 0.000009  loss: 1.4279  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 950/1000]  eta: 0:00:22  lr: 0.000009  loss: 0.3521  time: 0.4500  data: 0.0000  max mem: 31850
Train: data epoch: [11]  [ 999/1000]  eta: 0:00:00  lr: 0.000009  loss: 2.4496  time: 0.4776  data: 0.0000  max mem: 31850
Train: data epoch: [11] Total time: 0:07:40 (0.4605 s / it)
Train: data epoch: [12]  [   0/1000]  eta: 0:07:28  lr: 0.000009  loss: 0.1483  time: 0.4483  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [  50/1000]  eta: 0:07:07  lr: 0.000009  loss: 2.4247  time: 0.4503  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 100/1000]  eta: 0:06:46  lr: 0.000009  loss: 3.3496  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 150/1000]  eta: 0:06:23  lr: 0.000009  loss: 1.2521  time: 0.4516  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 200/1000]  eta: 0:06:00  lr: 0.000009  loss: 2.5178  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 250/1000]  eta: 0:05:39  lr: 0.000009  loss: 2.4316  time: 0.4605  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 300/1000]  eta: 0:05:16  lr: 0.000009  loss: 2.7664  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 350/1000]  eta: 0:04:54  lr: 0.000009  loss: 0.2114  time: 0.4513  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 400/1000]  eta: 0:04:32  lr: 0.000009  loss: 1.3866  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 450/1000]  eta: 0:04:10  lr: 0.000009  loss: 0.3221  time: 0.4521  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 500/1000]  eta: 0:03:47  lr: 0.000009  loss: 1.3744  time: 0.4818  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 550/1000]  eta: 0:03:25  lr: 0.000009  loss: 1.7210  time: 0.4849  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 600/1000]  eta: 0:03:02  lr: 0.000009  loss: 1.5271  time: 0.4497  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 650/1000]  eta: 0:02:39  lr: 0.000009  loss: 0.7195  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 700/1000]  eta: 0:02:16  lr: 0.000009  loss: 0.3519  time: 0.4523  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 750/1000]  eta: 0:01:53  lr: 0.000009  loss: 1.3438  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 800/1000]  eta: 0:01:31  lr: 0.000009  loss: 0.3755  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 850/1000]  eta: 0:01:08  lr: 0.000009  loss: 2.0328  time: 0.4851  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 900/1000]  eta: 0:00:45  lr: 0.000009  loss: 0.7754  time: 0.4865  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 950/1000]  eta: 0:00:22  lr: 0.000009  loss: 3.5117  time: 0.4529  data: 0.0000  max mem: 31850
Train: data epoch: [12]  [ 999/1000]  eta: 0:00:00  lr: 0.000009  loss: 2.4041  time: 0.4700  data: 0.0000  max mem: 31850
Train: data epoch: [12] Total time: 0:07:37 (0.4570 s / it)
Train: data epoch: [13]  [   0/1000]  eta: 0:07:24  lr: 0.000009  loss: 1.8780  time: 0.4449  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [  50/1000]  eta: 0:07:08  lr: 0.000009  loss: 1.2476  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 100/1000]  eta: 0:06:46  lr: 0.000009  loss: 2.6140  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 150/1000]  eta: 0:06:23  lr: 0.000009  loss: 1.3267  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 200/1000]  eta: 0:06:01  lr: 0.000009  loss: 1.2941  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 250/1000]  eta: 0:05:38  lr: 0.000009  loss: 2.8897  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 300/1000]  eta: 0:05:16  lr: 0.000009  loss: 2.3917  time: 0.4566  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 350/1000]  eta: 0:04:53  lr: 0.000009  loss: 3.4413  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 400/1000]  eta: 0:04:31  lr: 0.000008  loss: 1.1364  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 450/1000]  eta: 0:04:08  lr: 0.000008  loss: 2.7582  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 500/1000]  eta: 0:03:46  lr: 0.000008  loss: 2.2384  time: 0.4523  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 550/1000]  eta: 0:03:23  lr: 0.000008  loss: 3.6568  time: 0.4503  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 600/1000]  eta: 0:03:01  lr: 0.000008  loss: 1.2965  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 650/1000]  eta: 0:02:38  lr: 0.000008  loss: 0.9217  time: 0.4516  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 700/1000]  eta: 0:02:15  lr: 0.000008  loss: 1.3239  time: 0.4539  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 750/1000]  eta: 0:01:53  lr: 0.000008  loss: 1.4541  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 800/1000]  eta: 0:01:30  lr: 0.000008  loss: 1.4526  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 850/1000]  eta: 0:01:08  lr: 0.000008  loss: 1.0847  time: 0.4496  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 900/1000]  eta: 0:00:45  lr: 0.000008  loss: 1.1275  time: 0.4499  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 950/1000]  eta: 0:00:22  lr: 0.000008  loss: 1.0728  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [13]  [ 999/1000]  eta: 0:00:00  lr: 0.000008  loss: 1.4062  time: 0.4599  data: 0.0000  max mem: 31850
Train: data epoch: [13] Total time: 0:07:33 (0.4534 s / it)
Train: data epoch: [14]  [   0/1000]  eta: 0:10:07  lr: 0.000008  loss: 1.4079  time: 0.6073  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [  50/1000]  eta: 0:07:19  lr: 0.000008  loss: 1.3798  time: 0.4751  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 100/1000]  eta: 0:06:51  lr: 0.000008  loss: 0.3183  time: 0.4498  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 150/1000]  eta: 0:06:26  lr: 0.000008  loss: 1.9755  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 200/1000]  eta: 0:06:02  lr: 0.000008  loss: 2.1170  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 250/1000]  eta: 0:05:39  lr: 0.000008  loss: 1.2165  time: 0.4518  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 300/1000]  eta: 0:05:17  lr: 0.000008  loss: 2.5910  time: 0.4512  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 350/1000]  eta: 0:04:54  lr: 0.000008  loss: 1.9107  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 400/1000]  eta: 0:04:31  lr: 0.000008  loss: 1.6685  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 450/1000]  eta: 0:04:08  lr: 0.000008  loss: 2.2804  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 500/1000]  eta: 0:03:46  lr: 0.000008  loss: 0.1388  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 550/1000]  eta: 0:03:24  lr: 0.000008  loss: 0.7791  time: 0.4924  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 600/1000]  eta: 0:03:01  lr: 0.000008  loss: 1.3849  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 650/1000]  eta: 0:02:38  lr: 0.000008  loss: 2.5083  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 700/1000]  eta: 0:02:16  lr: 0.000008  loss: 1.2726  time: 0.4527  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 750/1000]  eta: 0:01:53  lr: 0.000008  loss: 1.2826  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 800/1000]  eta: 0:01:31  lr: 0.000008  loss: 1.3583  time: 0.4725  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 850/1000]  eta: 0:01:08  lr: 0.000008  loss: 2.6144  time: 0.5192  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 900/1000]  eta: 0:00:45  lr: 0.000008  loss: 1.3209  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 950/1000]  eta: 0:00:22  lr: 0.000008  loss: 2.7816  time: 0.4527  data: 0.0000  max mem: 31850
Train: data epoch: [14]  [ 999/1000]  eta: 0:00:00  lr: 0.000008  loss: 3.0884  time: 0.4629  data: 0.0000  max mem: 31850
Train: data epoch: [14] Total time: 0:07:36 (0.4564 s / it)
Train: data epoch: [15]  [   0/1000]  eta: 0:07:28  lr: 0.000008  loss: 1.3778  time: 0.4485  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [  50/1000]  eta: 0:07:09  lr: 0.000008  loss: 0.7019  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 100/1000]  eta: 0:06:53  lr: 0.000008  loss: 1.3194  time: 0.4667  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 150/1000]  eta: 0:06:27  lr: 0.000008  loss: 2.3802  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 200/1000]  eta: 0:06:04  lr: 0.000008  loss: 1.1991  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 250/1000]  eta: 0:05:41  lr: 0.000008  loss: 1.6847  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 300/1000]  eta: 0:05:19  lr: 0.000008  loss: 2.9489  time: 0.4732  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 350/1000]  eta: 0:04:57  lr: 0.000008  loss: 2.3577  time: 0.4830  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 400/1000]  eta: 0:04:33  lr: 0.000008  loss: 3.0352  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 450/1000]  eta: 0:04:10  lr: 0.000008  loss: 2.0300  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 500/1000]  eta: 0:03:47  lr: 0.000008  loss: 1.2327  time: 0.4578  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 550/1000]  eta: 0:03:24  lr: 0.000008  loss: 2.2788  time: 0.4494  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 600/1000]  eta: 0:03:01  lr: 0.000008  loss: 1.1858  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 650/1000]  eta: 0:02:39  lr: 0.000008  loss: 1.3096  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 700/1000]  eta: 0:02:16  lr: 0.000008  loss: 1.3209  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 750/1000]  eta: 0:01:53  lr: 0.000008  loss: 3.1796  time: 0.4499  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 800/1000]  eta: 0:01:30  lr: 0.000008  loss: 2.0943  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 850/1000]  eta: 0:01:08  lr: 0.000008  loss: 1.3580  time: 0.4557  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 900/1000]  eta: 0:00:45  lr: 0.000008  loss: 2.0090  time: 0.4503  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 950/1000]  eta: 0:00:22  lr: 0.000008  loss: 2.0328  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [15]  [ 999/1000]  eta: 0:00:00  lr: 0.000008  loss: 3.1225  time: 0.4654  data: 0.0000  max mem: 31850
Train: data epoch: [15] Total time: 0:07:33 (0.4539 s / it)
Train: data epoch: [16]  [   0/1000]  eta: 0:08:11  lr: 0.000008  loss: 2.1398  time: 0.4917  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [  50/1000]  eta: 0:07:08  lr: 0.000008  loss: 2.0776  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 100/1000]  eta: 0:06:46  lr: 0.000008  loss: 2.3029  time: 0.4517  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 150/1000]  eta: 0:06:28  lr: 0.000008  loss: 1.1909  time: 0.4974  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 200/1000]  eta: 0:06:04  lr: 0.000008  loss: 1.2356  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 250/1000]  eta: 0:05:41  lr: 0.000008  loss: 2.5832  time: 0.4589  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 300/1000]  eta: 0:05:18  lr: 0.000008  loss: 2.5174  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 350/1000]  eta: 0:04:55  lr: 0.000008  loss: 1.4247  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 400/1000]  eta: 0:04:33  lr: 0.000008  loss: 0.6938  time: 0.4517  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 450/1000]  eta: 0:04:10  lr: 0.000008  loss: 1.1549  time: 0.4492  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 500/1000]  eta: 0:03:47  lr: 0.000008  loss: 2.1781  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 550/1000]  eta: 0:03:24  lr: 0.000008  loss: 1.0103  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 600/1000]  eta: 0:03:01  lr: 0.000008  loss: 2.5171  time: 0.4522  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 650/1000]  eta: 0:02:38  lr: 0.000008  loss: 1.5711  time: 0.4500  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 700/1000]  eta: 0:02:16  lr: 0.000008  loss: 1.3471  time: 0.4498  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 750/1000]  eta: 0:01:53  lr: 0.000008  loss: 2.5924  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 800/1000]  eta: 0:01:30  lr: 0.000008  loss: 1.8518  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 850/1000]  eta: 0:01:08  lr: 0.000008  loss: 2.4575  time: 0.4518  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 900/1000]  eta: 0:00:45  lr: 0.000008  loss: 0.5162  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 950/1000]  eta: 0:00:22  lr: 0.000008  loss: 1.4004  time: 0.4587  data: 0.0000  max mem: 31850
Train: data epoch: [16]  [ 999/1000]  eta: 0:00:00  lr: 0.000008  loss: 1.2521  time: 0.4657  data: 0.0000  max mem: 31850
Train: data epoch: [16] Total time: 0:07:34 (0.4545 s / it)
Train: data epoch: [17]  [   0/1000]  eta: 0:07:25  lr: 0.000008  loss: 1.3779  time: 0.4456  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [  50/1000]  eta: 0:07:29  lr: 0.000008  loss: 2.9257  time: 0.5059  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 100/1000]  eta: 0:06:55  lr: 0.000008  loss: 2.4417  time: 0.4493  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 150/1000]  eta: 0:06:29  lr: 0.000008  loss: 0.9535  time: 0.4528  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 200/1000]  eta: 0:06:07  lr: 0.000008  loss: 1.3491  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 250/1000]  eta: 0:05:46  lr: 0.000008  loss: 2.0962  time: 0.4503  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 300/1000]  eta: 0:05:22  lr: 0.000008  loss: 1.7361  time: 0.4522  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 350/1000]  eta: 0:04:58  lr: 0.000008  loss: 2.9137  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 400/1000]  eta: 0:04:34  lr: 0.000008  loss: 0.2755  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 450/1000]  eta: 0:04:11  lr: 0.000008  loss: 1.6949  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 500/1000]  eta: 0:03:50  lr: 0.000008  loss: 2.8007  time: 0.5193  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 550/1000]  eta: 0:03:27  lr: 0.000008  loss: 2.2740  time: 0.4784  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 600/1000]  eta: 0:03:03  lr: 0.000008  loss: 2.8306  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 650/1000]  eta: 0:02:40  lr: 0.000008  loss: 2.3267  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 700/1000]  eta: 0:02:17  lr: 0.000007  loss: 1.3045  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 750/1000]  eta: 0:01:54  lr: 0.000007  loss: 1.1727  time: 0.4491  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 800/1000]  eta: 0:01:31  lr: 0.000007  loss: 0.7056  time: 0.4518  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 850/1000]  eta: 0:01:08  lr: 0.000007  loss: 2.6185  time: 0.4533  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 900/1000]  eta: 0:00:45  lr: 0.000007  loss: 2.7636  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 950/1000]  eta: 0:00:22  lr: 0.000007  loss: 0.2443  time: 0.4542  data: 0.0000  max mem: 31850
Train: data epoch: [17]  [ 999/1000]  eta: 0:00:00  lr: 0.000007  loss: 1.8567  time: 0.4700  data: 0.0000  max mem: 31850
Train: data epoch: [17] Total time: 0:07:37 (0.4576 s / it)
Train: data epoch: [18]  [   0/1000]  eta: 0:07:26  lr: 0.000007  loss: 1.2303  time: 0.4462  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [  50/1000]  eta: 0:07:07  lr: 0.000007  loss: 1.6349  time: 0.4503  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 100/1000]  eta: 0:06:45  lr: 0.000007  loss: 2.5255  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 150/1000]  eta: 0:06:31  lr: 0.000007  loss: 0.7816  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 200/1000]  eta: 0:06:07  lr: 0.000007  loss: 1.1500  time: 0.4583  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 250/1000]  eta: 0:05:43  lr: 0.000007  loss: 2.0604  time: 0.4516  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 300/1000]  eta: 0:05:19  lr: 0.000007  loss: 0.2837  time: 0.4518  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 350/1000]  eta: 0:04:56  lr: 0.000007  loss: 2.6101  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 400/1000]  eta: 0:04:33  lr: 0.000007  loss: 2.2334  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 450/1000]  eta: 0:04:10  lr: 0.000007  loss: 1.3873  time: 0.4583  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 500/1000]  eta: 0:03:47  lr: 0.000007  loss: 1.3534  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 550/1000]  eta: 0:03:24  lr: 0.000007  loss: 0.9743  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 600/1000]  eta: 0:03:02  lr: 0.000007  loss: 1.2248  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 650/1000]  eta: 0:02:39  lr: 0.000007  loss: 2.6073  time: 0.4517  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 700/1000]  eta: 0:02:16  lr: 0.000007  loss: 1.3605  time: 0.4528  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 750/1000]  eta: 0:01:54  lr: 0.000007  loss: 1.2567  time: 0.4533  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 800/1000]  eta: 0:01:31  lr: 0.000007  loss: 2.6959  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 850/1000]  eta: 0:01:08  lr: 0.000007  loss: 1.0173  time: 0.4492  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 900/1000]  eta: 0:00:45  lr: 0.000007  loss: 0.4682  time: 0.4496  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 950/1000]  eta: 0:00:22  lr: 0.000007  loss: 0.1845  time: 0.4512  data: 0.0000  max mem: 31850
Train: data epoch: [18]  [ 999/1000]  eta: 0:00:00  lr: 0.000007  loss: 1.2944  time: 0.4873  data: 0.0000  max mem: 31850
Train: data epoch: [18] Total time: 0:07:35 (0.4556 s / it)
Train: data epoch: [19]  [   0/1000]  eta: 0:07:30  lr: 0.000007  loss: 2.6902  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [  50/1000]  eta: 0:07:11  lr: 0.000007  loss: 0.4290  time: 0.4580  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 100/1000]  eta: 0:06:47  lr: 0.000007  loss: 2.6128  time: 0.4525  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 150/1000]  eta: 0:06:27  lr: 0.000007  loss: 1.1922  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 200/1000]  eta: 0:06:05  lr: 0.000007  loss: 2.3714  time: 0.4779  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 250/1000]  eta: 0:05:42  lr: 0.000007  loss: 0.3585  time: 0.4701  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 300/1000]  eta: 0:05:20  lr: 0.000007  loss: 0.6118  time: 0.4498  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 350/1000]  eta: 0:04:59  lr: 0.000007  loss: 2.8572  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 400/1000]  eta: 0:04:36  lr: 0.000007  loss: 1.3109  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 450/1000]  eta: 0:04:13  lr: 0.000007  loss: 1.2892  time: 0.4883  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 500/1000]  eta: 0:03:50  lr: 0.000007  loss: 1.2102  time: 0.4528  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 550/1000]  eta: 0:03:26  lr: 0.000007  loss: 0.5735  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 600/1000]  eta: 0:03:03  lr: 0.000007  loss: 1.2949  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 650/1000]  eta: 0:02:40  lr: 0.000007  loss: 2.1902  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 700/1000]  eta: 0:02:17  lr: 0.000007  loss: 2.3774  time: 0.4651  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 750/1000]  eta: 0:01:54  lr: 0.000007  loss: 1.2931  time: 0.5115  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 800/1000]  eta: 0:01:31  lr: 0.000007  loss: 2.5962  time: 0.4516  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 850/1000]  eta: 0:01:08  lr: 0.000007  loss: 1.3101  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 900/1000]  eta: 0:00:45  lr: 0.000007  loss: 1.3489  time: 0.4517  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 950/1000]  eta: 0:00:22  lr: 0.000007  loss: 2.3543  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [19]  [ 999/1000]  eta: 0:00:00  lr: 0.000007  loss: 1.1651  time: 0.4536  data: 0.0000  max mem: 31850
Train: data epoch: [19] Total time: 0:07:38 (0.4582 s / it)
Train: data epoch: [20]  [   0/1000]  eta: 0:07:31  lr: 0.000007  loss: 0.1674  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [  50/1000]  eta: 0:07:10  lr: 0.000007  loss: 0.8960  time: 0.4578  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 100/1000]  eta: 0:06:46  lr: 0.000007  loss: 1.3043  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 150/1000]  eta: 0:06:24  lr: 0.000007  loss: 2.1931  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 200/1000]  eta: 0:06:02  lr: 0.000007  loss: 0.3914  time: 0.4541  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 250/1000]  eta: 0:05:39  lr: 0.000007  loss: 2.6358  time: 0.4520  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 300/1000]  eta: 0:05:16  lr: 0.000007  loss: 0.8909  time: 0.4533  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 350/1000]  eta: 0:04:53  lr: 0.000007  loss: 3.0480  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 400/1000]  eta: 0:04:31  lr: 0.000007  loss: 2.9188  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 450/1000]  eta: 0:04:09  lr: 0.000007  loss: 1.3889  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 500/1000]  eta: 0:03:46  lr: 0.000007  loss: 0.3010  time: 0.4528  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 550/1000]  eta: 0:03:24  lr: 0.000007  loss: 0.1302  time: 0.4677  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 600/1000]  eta: 0:03:01  lr: 0.000007  loss: 0.7685  time: 0.4512  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 650/1000]  eta: 0:02:38  lr: 0.000007  loss: 3.1741  time: 0.4594  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 700/1000]  eta: 0:02:16  lr: 0.000007  loss: 2.2257  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 750/1000]  eta: 0:01:53  lr: 0.000007  loss: 2.5339  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 800/1000]  eta: 0:01:30  lr: 0.000007  loss: 1.9659  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 850/1000]  eta: 0:01:08  lr: 0.000007  loss: 1.3363  time: 0.4845  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 900/1000]  eta: 0:00:45  lr: 0.000007  loss: 2.6843  time: 0.5361  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 950/1000]  eta: 0:00:22  lr: 0.000007  loss: 2.5671  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [20]  [ 999/1000]  eta: 0:00:00  lr: 0.000007  loss: 1.3500  time: 0.4904  data: 0.0000  max mem: 31850
Train: data epoch: [20] Total time: 0:07:36 (0.4566 s / it)
Train: data epoch: [21]  [   0/1000]  eta: 0:07:25  lr: 0.000007  loss: 1.9032  time: 0.4451  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [  50/1000]  eta: 0:07:08  lr: 0.000007  loss: 1.4270  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 100/1000]  eta: 0:06:45  lr: 0.000007  loss: 1.4077  time: 0.4518  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 150/1000]  eta: 0:06:31  lr: 0.000007  loss: 1.1591  time: 0.4538  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 200/1000]  eta: 0:06:07  lr: 0.000007  loss: 1.8047  time: 0.4529  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 250/1000]  eta: 0:05:43  lr: 0.000007  loss: 1.2937  time: 0.4516  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 300/1000]  eta: 0:05:19  lr: 0.000007  loss: 1.1709  time: 0.4526  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 350/1000]  eta: 0:04:56  lr: 0.000007  loss: 0.3200  time: 0.4523  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 400/1000]  eta: 0:04:34  lr: 0.000007  loss: 1.2600  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 450/1000]  eta: 0:04:11  lr: 0.000006  loss: 2.2365  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 500/1000]  eta: 0:03:49  lr: 0.000006  loss: 2.0742  time: 0.5094  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 550/1000]  eta: 0:03:26  lr: 0.000006  loss: 0.8432  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 600/1000]  eta: 0:03:03  lr: 0.000006  loss: 1.2067  time: 0.4617  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 650/1000]  eta: 0:02:40  lr: 0.000006  loss: 1.3620  time: 0.4528  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 700/1000]  eta: 0:02:17  lr: 0.000006  loss: 2.4574  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 750/1000]  eta: 0:01:54  lr: 0.000006  loss: 2.0476  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 800/1000]  eta: 0:01:31  lr: 0.000006  loss: 1.3568  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 850/1000]  eta: 0:01:08  lr: 0.000006  loss: 2.5241  time: 0.5025  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 900/1000]  eta: 0:00:45  lr: 0.000006  loss: 2.4721  time: 0.4791  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 950/1000]  eta: 0:00:22  lr: 0.000006  loss: 1.2295  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [21]  [ 999/1000]  eta: 0:00:00  lr: 0.000006  loss: 0.6395  time: 0.4594  data: 0.0000  max mem: 31850
Train: data epoch: [21] Total time: 0:07:38 (0.4588 s / it)
Train: data epoch: [22]  [   0/1000]  eta: 0:07:24  lr: 0.000006  loss: 1.3388  time: 0.4442  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [  50/1000]  eta: 0:07:09  lr: 0.000006  loss: 0.7045  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 100/1000]  eta: 0:06:46  lr: 0.000006  loss: 2.2620  time: 0.4541  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 150/1000]  eta: 0:06:26  lr: 0.000006  loss: 1.1238  time: 0.4761  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 200/1000]  eta: 0:06:03  lr: 0.000006  loss: 2.2749  time: 0.4521  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 250/1000]  eta: 0:05:40  lr: 0.000006  loss: 2.5638  time: 0.4523  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 300/1000]  eta: 0:05:17  lr: 0.000006  loss: 2.4743  time: 0.4525  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 350/1000]  eta: 0:04:55  lr: 0.000006  loss: 1.9816  time: 0.4802  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 400/1000]  eta: 0:04:32  lr: 0.000006  loss: 1.9177  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 450/1000]  eta: 0:04:09  lr: 0.000006  loss: 3.0404  time: 0.4521  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 500/1000]  eta: 0:03:48  lr: 0.000006  loss: 0.2410  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 550/1000]  eta: 0:03:25  lr: 0.000006  loss: 0.3689  time: 0.4497  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 600/1000]  eta: 0:03:02  lr: 0.000006  loss: 1.3295  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 650/1000]  eta: 0:02:39  lr: 0.000006  loss: 2.3397  time: 0.4802  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 700/1000]  eta: 0:02:16  lr: 0.000006  loss: 0.6177  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 750/1000]  eta: 0:01:54  lr: 0.000006  loss: 2.4982  time: 0.4520  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 800/1000]  eta: 0:01:31  lr: 0.000006  loss: 2.6166  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 850/1000]  eta: 0:01:08  lr: 0.000006  loss: 2.4455  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 900/1000]  eta: 0:00:45  lr: 0.000006  loss: 1.3178  time: 0.4532  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 950/1000]  eta: 0:00:22  lr: 0.000006  loss: 2.7345  time: 0.4531  data: 0.0000  max mem: 31850
Train: data epoch: [22]  [ 999/1000]  eta: 0:00:00  lr: 0.000006  loss: 1.3574  time: 0.4609  data: 0.0000  max mem: 31850
Train: data epoch: [22] Total time: 0:07:37 (0.4576 s / it)
Train: data epoch: [23]  [   0/1000]  eta: 0:07:22  lr: 0.000006  loss: 2.9974  time: 0.4422  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [  50/1000]  eta: 0:07:09  lr: 0.000006  loss: 2.7154  time: 0.4516  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 100/1000]  eta: 0:06:47  lr: 0.000006  loss: 3.1749  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 150/1000]  eta: 0:06:27  lr: 0.000006  loss: 0.7018  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 200/1000]  eta: 0:06:03  lr: 0.000006  loss: 0.6461  time: 0.4517  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 250/1000]  eta: 0:05:41  lr: 0.000006  loss: 3.3051  time: 0.4750  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 300/1000]  eta: 0:05:18  lr: 0.000006  loss: 1.1939  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 350/1000]  eta: 0:04:57  lr: 0.000006  loss: 0.4372  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 400/1000]  eta: 0:04:34  lr: 0.000006  loss: 0.2881  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 450/1000]  eta: 0:04:11  lr: 0.000006  loss: 0.2908  time: 0.4631  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 500/1000]  eta: 0:03:55  lr: 0.000006  loss: 2.7681  time: 0.7855  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 550/1000]  eta: 0:03:30  lr: 0.000006  loss: 2.9187  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 600/1000]  eta: 0:03:06  lr: 0.000006  loss: 2.3568  time: 0.4579  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 650/1000]  eta: 0:02:43  lr: 0.000006  loss: 1.2720  time: 0.4499  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 700/1000]  eta: 0:02:19  lr: 0.000006  loss: 2.4409  time: 0.4525  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 750/1000]  eta: 0:01:56  lr: 0.000006  loss: 2.1218  time: 0.4522  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 800/1000]  eta: 0:01:32  lr: 0.000006  loss: 1.6143  time: 0.4499  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 850/1000]  eta: 0:01:09  lr: 0.000006  loss: 3.0823  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 900/1000]  eta: 0:00:46  lr: 0.000006  loss: 1.7559  time: 0.4503  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 950/1000]  eta: 0:00:23  lr: 0.000006  loss: 0.9902  time: 0.4499  data: 0.0000  max mem: 31850
Train: data epoch: [23]  [ 999/1000]  eta: 0:00:00  lr: 0.000006  loss: 2.8188  time: 0.4813  data: 0.0000  max mem: 31850
Train: data epoch: [23] Total time: 0:07:46 (0.4666 s / it)
Train: data epoch: [24]  [   0/1000]  eta: 0:07:37  lr: 0.000006  loss: 3.0758  time: 0.4570  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [  50/1000]  eta: 0:07:16  lr: 0.000006  loss: 0.8532  time: 0.4504  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 100/1000]  eta: 0:06:53  lr: 0.000006  loss: 1.2723  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 150/1000]  eta: 0:06:28  lr: 0.000006  loss: 2.1808  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 200/1000]  eta: 0:06:04  lr: 0.000006  loss: 1.9957  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 250/1000]  eta: 0:05:41  lr: 0.000006  loss: 2.6774  time: 0.4542  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 300/1000]  eta: 0:05:17  lr: 0.000006  loss: 3.0646  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 350/1000]  eta: 0:04:54  lr: 0.000006  loss: 3.2137  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 400/1000]  eta: 0:04:32  lr: 0.000006  loss: 1.3596  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 450/1000]  eta: 0:04:09  lr: 0.000006  loss: 0.5298  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 500/1000]  eta: 0:03:46  lr: 0.000006  loss: 3.1582  time: 0.4521  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 550/1000]  eta: 0:03:26  lr: 0.000006  loss: 0.9188  time: 0.4512  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 600/1000]  eta: 0:03:03  lr: 0.000006  loss: 2.1522  time: 0.4639  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 650/1000]  eta: 0:02:40  lr: 0.000006  loss: 1.7866  time: 0.4502  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 700/1000]  eta: 0:02:17  lr: 0.000006  loss: 1.2918  time: 0.4521  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 750/1000]  eta: 0:01:54  lr: 0.000006  loss: 1.2962  time: 0.4525  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 800/1000]  eta: 0:01:31  lr: 0.000006  loss: 3.1885  time: 0.4494  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 850/1000]  eta: 0:01:08  lr: 0.000006  loss: 1.3289  time: 0.4991  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 900/1000]  eta: 0:00:45  lr: 0.000006  loss: 1.2466  time: 0.4970  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 950/1000]  eta: 0:00:22  lr: 0.000006  loss: 1.3319  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [24]  [ 999/1000]  eta: 0:00:00  lr: 0.000006  loss: 1.3567  time: 0.4653  data: 0.0000  max mem: 31850
Train: data epoch: [24] Total time: 0:07:39 (0.4595 s / it)
Train: data epoch: [25]  [   0/1000]  eta: 0:10:05  lr: 0.000005  loss: 1.7651  time: 0.6052  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [  50/1000]  eta: 0:07:11  lr: 0.000005  loss: 2.3696  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 100/1000]  eta: 0:06:49  lr: 0.000005  loss: 1.3397  time: 0.4508  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 150/1000]  eta: 0:06:25  lr: 0.000005  loss: 1.5879  time: 0.4516  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 200/1000]  eta: 0:06:06  lr: 0.000005  loss: 0.1852  time: 0.5063  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 250/1000]  eta: 0:05:42  lr: 0.000005  loss: 1.1930  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 300/1000]  eta: 0:05:19  lr: 0.000005  loss: 2.1575  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 350/1000]  eta: 0:04:58  lr: 0.000005  loss: 3.1921  time: 0.5225  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 400/1000]  eta: 0:04:36  lr: 0.000005  loss: 2.0985  time: 0.4954  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 450/1000]  eta: 0:04:12  lr: 0.000005  loss: 0.3905  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 500/1000]  eta: 0:03:49  lr: 0.000005  loss: 2.5506  time: 0.4515  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 550/1000]  eta: 0:03:26  lr: 0.000005  loss: 1.2498  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 600/1000]  eta: 0:03:03  lr: 0.000005  loss: 2.2478  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 650/1000]  eta: 0:02:40  lr: 0.000005  loss: 0.9909  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 700/1000]  eta: 0:02:17  lr: 0.000005  loss: 0.5589  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 750/1000]  eta: 0:01:54  lr: 0.000005  loss: 2.7119  time: 0.4661  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 800/1000]  eta: 0:01:31  lr: 0.000005  loss: 1.3476  time: 0.4731  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 850/1000]  eta: 0:01:08  lr: 0.000005  loss: 0.8169  time: 0.4495  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 900/1000]  eta: 0:00:45  lr: 0.000005  loss: 2.7262  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 950/1000]  eta: 0:00:22  lr: 0.000005  loss: 1.4059  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [25]  [ 999/1000]  eta: 0:00:00  lr: 0.000005  loss: 1.3575  time: 0.4808  data: 0.0000  max mem: 31850
Train: data epoch: [25] Total time: 0:07:37 (0.4579 s / it)
Train: data epoch: [26]  [   0/1000]  eta: 0:07:30  lr: 0.000005  loss: 1.4645  time: 0.4501  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [  50/1000]  eta: 0:07:07  lr: 0.000005  loss: 1.2749  time: 0.4491  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 100/1000]  eta: 0:06:45  lr: 0.000005  loss: 2.3964  time: 0.4512  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 150/1000]  eta: 0:06:26  lr: 0.000005  loss: 0.2279  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 200/1000]  eta: 0:06:03  lr: 0.000005  loss: 1.2915  time: 0.4514  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 250/1000]  eta: 0:05:40  lr: 0.000005  loss: 1.3077  time: 0.4637  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 300/1000]  eta: 0:05:17  lr: 0.000005  loss: 0.9683  time: 0.4519  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 350/1000]  eta: 0:04:55  lr: 0.000005  loss: 2.7339  time: 0.4664  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 400/1000]  eta: 0:04:32  lr: 0.000005  loss: 2.0768  time: 0.4509  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 450/1000]  eta: 0:04:09  lr: 0.000005  loss: 1.2528  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 500/1000]  eta: 0:03:46  lr: 0.000005  loss: 2.5548  time: 0.4517  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 550/1000]  eta: 0:03:23  lr: 0.000005  loss: 1.9102  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 600/1000]  eta: 0:03:01  lr: 0.000005  loss: 1.9827  time: 0.4495  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 650/1000]  eta: 0:02:38  lr: 0.000005  loss: 2.0413  time: 0.4499  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 700/1000]  eta: 0:02:16  lr: 0.000005  loss: 0.8330  time: 0.4560  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 750/1000]  eta: 0:01:53  lr: 0.000005  loss: 2.2242  time: 0.4513  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 800/1000]  eta: 0:01:30  lr: 0.000005  loss: 2.5995  time: 0.4507  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 850/1000]  eta: 0:01:08  lr: 0.000005  loss: 1.1834  time: 0.4528  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 900/1000]  eta: 0:00:45  lr: 0.000005  loss: 1.9095  time: 0.4510  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 950/1000]  eta: 0:00:22  lr: 0.000005  loss: 1.9276  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [26]  [ 999/1000]  eta: 0:00:00  lr: 0.000005  loss: 2.7994  time: 0.5009  data: 0.0000  max mem: 31850
Train: data epoch: [26] Total time: 0:07:36 (0.4565 s / it)
Train: data epoch: [27]  [   0/1000]  eta: 0:07:23  lr: 0.000005  loss: 1.2589  time: 0.4436  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [  50/1000]  eta: 0:07:14  lr: 0.000005  loss: 1.2340  time: 0.4677  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [ 100/1000]  eta: 0:06:48  lr: 0.000005  loss: 1.2117  time: 0.4524  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [ 150/1000]  eta: 0:06:25  lr: 0.000005  loss: 2.0003  time: 0.4511  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [ 200/1000]  eta: 0:06:03  lr: 0.000005  loss: 2.2799  time: 0.4520  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [ 250/1000]  eta: 0:05:40  lr: 0.000005  loss: 0.6703  time: 0.4513  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [ 300/1000]  eta: 0:05:21  lr: 0.000005  loss: 0.3807  time: 0.4505  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [ 350/1000]  eta: 0:04:57  lr: 0.000005  loss: 1.4533  time: 0.4506  data: 0.0000  max mem: 31850
Train: data epoch: [27]  [ 400/1000]  eta: 0:04:34  lr: 0.000005  loss: 2.0820  time: 0.4505  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 450/1000]  eta: 0:04:11  lr: 0.000005  loss: 2.0765  time: 0.4514  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 500/1000]  eta: 0:03:48  lr: 0.000005  loss: 1.3958  time: 0.4801  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 550/1000]  eta: 0:03:25  lr: 0.000005  loss: 3.0137  time: 0.4504  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 600/1000]  eta: 0:03:02  lr: 0.000005  loss: 1.3046  time: 0.4497  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 650/1000]  eta: 0:02:40  lr: 0.000005  loss: 1.3324  time: 0.4515  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 700/1000]  eta: 0:02:17  lr: 0.000005  loss: 1.3398  time: 0.4548  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 750/1000]  eta: 0:01:54  lr: 0.000005  loss: 1.0498  time: 0.4698  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 800/1000]  eta: 0:01:31  lr: 0.000005  loss: 2.0272  time: 0.4612  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 850/1000]  eta: 0:01:08  lr: 0.000005  loss: 2.0786  time: 0.4526  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 900/1000]  eta: 0:00:45  lr: 0.000005  loss: 2.7135  time: 0.4496  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 950/1000]  eta: 0:00:22  lr: 0.000005  loss: 2.0784  time: 0.4490  data: 0.0000  max mem: 32791
Train: data epoch: [27]  [ 999/1000]  eta: 0:00:00  lr: 0.000005  loss: 3.1810  time: 0.4929  data: 0.0000  max mem: 32791
Train: data epoch: [27] Total time: 0:07:39 (0.4595 s / it)
Train: data epoch: [28]  [   0/1000]  eta: 0:07:27  lr: 0.000005  loss: 1.3601  time: 0.4473  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [  50/1000]  eta: 0:07:09  lr: 0.000005  loss: 1.8056  time: 0.4501  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 100/1000]  eta: 0:06:46  lr: 0.000005  loss: 2.3483  time: 0.4519  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 150/1000]  eta: 0:06:24  lr: 0.000005  loss: 2.4271  time: 0.4590  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 200/1000]  eta: 0:06:01  lr: 0.000005  loss: 2.3369  time: 0.4508  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 250/1000]  eta: 0:05:39  lr: 0.000005  loss: 0.4127  time: 0.4512  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 300/1000]  eta: 0:05:16  lr: 0.000005  loss: 2.2975  time: 0.4505  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 350/1000]  eta: 0:04:54  lr: 0.000005  loss: 0.5480  time: 0.4620  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 400/1000]  eta: 0:04:31  lr: 0.000005  loss: 0.9457  time: 0.4499  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 450/1000]  eta: 0:04:08  lr: 0.000005  loss: 2.2073  time: 0.4514  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 500/1000]  eta: 0:03:46  lr: 0.000005  loss: 2.0806  time: 0.4497  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 550/1000]  eta: 0:03:23  lr: 0.000005  loss: 1.5535  time: 0.4521  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 600/1000]  eta: 0:03:01  lr: 0.000004  loss: 0.6895  time: 0.4513  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 650/1000]  eta: 0:02:38  lr: 0.000004  loss: 1.4307  time: 0.4530  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 700/1000]  eta: 0:02:15  lr: 0.000004  loss: 2.9171  time: 0.4741  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 750/1000]  eta: 0:01:53  lr: 0.000004  loss: 1.7812  time: 0.4515  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 800/1000]  eta: 0:01:30  lr: 0.000004  loss: 1.9955  time: 0.4518  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 850/1000]  eta: 0:01:08  lr: 0.000004  loss: 2.5471  time: 0.4498  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 900/1000]  eta: 0:00:45  lr: 0.000004  loss: 1.2562  time: 0.4496  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 950/1000]  eta: 0:00:22  lr: 0.000004  loss: 0.1592  time: 0.4506  data: 0.0000  max mem: 32791
Train: data epoch: [28]  [ 999/1000]  eta: 0:00:00  lr: 0.000004  loss: 1.7225  time: 0.6254  data: 0.0000  max mem: 32791
Train: data epoch: [28] Total time: 0:07:38 (0.4587 s / it)
Train: data epoch: [29]  [   0/1000]  eta: 0:07:25  lr: 0.000004  loss: 1.1875  time: 0.4452  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [  50/1000]  eta: 0:07:29  lr: 0.000004  loss: 0.4288  time: 0.5081  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 100/1000]  eta: 0:06:56  lr: 0.000004  loss: 2.2534  time: 0.4526  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 150/1000]  eta: 0:06:29  lr: 0.000004  loss: 1.7838  time: 0.4500  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 200/1000]  eta: 0:06:09  lr: 0.000004  loss: 1.4528  time: 0.4519  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 250/1000]  eta: 0:05:44  lr: 0.000004  loss: 2.5968  time: 0.4507  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 300/1000]  eta: 0:05:22  lr: 0.000004  loss: 1.9500  time: 0.4947  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 350/1000]  eta: 0:04:58  lr: 0.000004  loss: 1.4511  time: 0.4521  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 400/1000]  eta: 0:04:35  lr: 0.000004  loss: 0.4292  time: 0.4505  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 450/1000]  eta: 0:04:12  lr: 0.000004  loss: 2.5241  time: 0.4662  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 500/1000]  eta: 0:03:48  lr: 0.000004  loss: 1.3379  time: 0.4537  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 550/1000]  eta: 0:03:28  lr: 0.000004  loss: 1.2834  time: 0.4512  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 600/1000]  eta: 0:03:04  lr: 0.000004  loss: 0.2679  time: 0.4495  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 650/1000]  eta: 0:02:41  lr: 0.000004  loss: 2.7258  time: 0.4517  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 700/1000]  eta: 0:02:18  lr: 0.000004  loss: 1.1130  time: 0.4514  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 750/1000]  eta: 0:01:55  lr: 0.000004  loss: 1.1363  time: 0.4500  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 800/1000]  eta: 0:01:32  lr: 0.000004  loss: 2.3617  time: 0.4518  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 850/1000]  eta: 0:01:09  lr: 0.000004  loss: 0.6282  time: 0.5847  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 900/1000]  eta: 0:00:46  lr: 0.000004  loss: 2.0347  time: 0.4529  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 950/1000]  eta: 0:00:23  lr: 0.000004  loss: 1.3144  time: 0.5139  data: 0.0000  max mem: 32791
Train: data epoch: [29]  [ 999/1000]  eta: 0:00:00  lr: 0.000004  loss: 0.2214  time: 0.4936  data: 0.0000  max mem: 32791
Train: data epoch: [29] Total time: 0:07:43 (0.4639 s / it)
Train: data epoch: [30]  [   0/1000]  eta: 0:07:26  lr: 0.000004  loss: 1.3643  time: 0.4466  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [  50/1000]  eta: 0:07:08  lr: 0.000004  loss: 1.2605  time: 0.4521  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 100/1000]  eta: 0:07:03  lr: 0.000004  loss: 1.1759  time: 0.4506  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 150/1000]  eta: 0:06:34  lr: 0.000004  loss: 2.8057  time: 0.4517  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 200/1000]  eta: 0:06:13  lr: 0.000004  loss: 0.8277  time: 0.4509  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 250/1000]  eta: 0:05:49  lr: 0.000004  loss: 1.3656  time: 0.4840  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 300/1000]  eta: 0:05:25  lr: 0.000004  loss: 2.1835  time: 0.4580  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 350/1000]  eta: 0:05:00  lr: 0.000004  loss: 1.3304  time: 0.4504  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 400/1000]  eta: 0:04:36  lr: 0.000004  loss: 1.8302  time: 0.4508  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 450/1000]  eta: 0:04:13  lr: 0.000004  loss: 2.7946  time: 0.4504  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 500/1000]  eta: 0:03:50  lr: 0.000004  loss: 1.3838  time: 0.4518  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 550/1000]  eta: 0:03:26  lr: 0.000004  loss: 1.1174  time: 0.4515  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 600/1000]  eta: 0:03:03  lr: 0.000004  loss: 2.2193  time: 0.4775  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 650/1000]  eta: 0:02:40  lr: 0.000004  loss: 2.4522  time: 0.4519  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 700/1000]  eta: 0:02:17  lr: 0.000004  loss: 1.4655  time: 0.4515  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 750/1000]  eta: 0:01:54  lr: 0.000004  loss: 0.8267  time: 0.4507  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 800/1000]  eta: 0:01:31  lr: 0.000004  loss: 0.5018  time: 0.4523  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 850/1000]  eta: 0:01:08  lr: 0.000004  loss: 0.4549  time: 0.4517  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 900/1000]  eta: 0:00:45  lr: 0.000004  loss: 1.2971  time: 0.4529  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 950/1000]  eta: 0:00:22  lr: 0.000004  loss: 1.0510  time: 0.4509  data: 0.0000  max mem: 32791
Train: data epoch: [30]  [ 999/1000]  eta: 0:00:00  lr: 0.000004  loss: 1.2536  time: 0.4796  data: 0.0000  max mem: 32791
Train: data epoch: [30] Total time: 0:07:39 (0.4592 s / it)
Train: data epoch: [31]  [   0/1000]  eta: 0:07:28  lr: 0.000004  loss: 2.6746  time: 0.4480  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [  50/1000]  eta: 0:07:08  lr: 0.000004  loss: 2.5775  time: 0.4518  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 100/1000]  eta: 0:06:47  lr: 0.000004  loss: 1.2322  time: 0.4510  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 150/1000]  eta: 0:06:24  lr: 0.000004  loss: 0.2072  time: 0.4507  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 200/1000]  eta: 0:06:05  lr: 0.000004  loss: 1.3583  time: 0.5015  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 250/1000]  eta: 0:05:41  lr: 0.000004  loss: 2.3925  time: 0.4516  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 300/1000]  eta: 0:05:19  lr: 0.000004  loss: 2.2445  time: 0.4512  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 350/1000]  eta: 0:04:56  lr: 0.000004  loss: 1.5595  time: 0.4572  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 400/1000]  eta: 0:04:38  lr: 0.000004  loss: 1.9150  time: 0.4513  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 450/1000]  eta: 0:04:14  lr: 0.000004  loss: 1.4238  time: 0.4522  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 500/1000]  eta: 0:03:52  lr: 0.000004  loss: 0.4254  time: 0.4528  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 550/1000]  eta: 0:03:28  lr: 0.000004  loss: 1.4186  time: 0.4514  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 600/1000]  eta: 0:03:05  lr: 0.000004  loss: 1.3892  time: 0.4523  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 650/1000]  eta: 0:02:41  lr: 0.000004  loss: 2.3938  time: 0.4502  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 700/1000]  eta: 0:02:18  lr: 0.000004  loss: 2.2251  time: 0.4529  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 750/1000]  eta: 0:01:55  lr: 0.000004  loss: 1.2590  time: 0.4524  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 800/1000]  eta: 0:01:32  lr: 0.000004  loss: 0.3558  time: 0.4503  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 850/1000]  eta: 0:01:09  lr: 0.000004  loss: 2.2190  time: 0.5004  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 900/1000]  eta: 0:00:46  lr: 0.000004  loss: 1.1027  time: 0.4495  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 950/1000]  eta: 0:00:23  lr: 0.000004  loss: 1.2600  time: 0.4517  data: 0.0000  max mem: 32791
Train: data epoch: [31]  [ 999/1000]  eta: 0:00:00  lr: 0.000004  loss: 1.3842  time: 0.4577  data: 0.0000  max mem: 32791
Train: data epoch: [31] Total time: 0:07:39 (0.4598 s / it)
Train: data epoch: [32]  [   0/1000]  eta: 0:07:26  lr: 0.000004  loss: 2.6020  time: 0.4461  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [  50/1000]  eta: 0:07:07  lr: 0.000004  loss: 1.7109  time: 0.4511  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 100/1000]  eta: 0:06:48  lr: 0.000004  loss: 3.0793  time: 0.4496  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 150/1000]  eta: 0:06:35  lr: 0.000004  loss: 2.0065  time: 0.4506  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 200/1000]  eta: 0:06:10  lr: 0.000004  loss: 2.4482  time: 0.4676  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 250/1000]  eta: 0:05:45  lr: 0.000004  loss: 2.6708  time: 0.4509  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 300/1000]  eta: 0:05:22  lr: 0.000004  loss: 1.6494  time: 0.4507  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 350/1000]  eta: 0:05:02  lr: 0.000003  loss: 2.9143  time: 0.4513  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 400/1000]  eta: 0:04:38  lr: 0.000003  loss: 2.4491  time: 0.4506  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 450/1000]  eta: 0:04:14  lr: 0.000003  loss: 1.9303  time: 0.4509  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 500/1000]  eta: 0:03:50  lr: 0.000003  loss: 1.3844  time: 0.4522  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 550/1000]  eta: 0:03:27  lr: 0.000003  loss: 2.5045  time: 0.4503  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 600/1000]  eta: 0:03:03  lr: 0.000003  loss: 1.2475  time: 0.4510  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 650/1000]  eta: 0:02:41  lr: 0.000003  loss: 3.0668  time: 0.4895  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 700/1000]  eta: 0:02:17  lr: 0.000003  loss: 2.1311  time: 0.4526  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 750/1000]  eta: 0:01:54  lr: 0.000003  loss: 2.7291  time: 0.4520  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 800/1000]  eta: 0:01:31  lr: 0.000003  loss: 1.3706  time: 0.4503  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 850/1000]  eta: 0:01:08  lr: 0.000003  loss: 2.1481  time: 0.4498  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 900/1000]  eta: 0:00:45  lr: 0.000003  loss: 2.1354  time: 0.4502  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 950/1000]  eta: 0:00:22  lr: 0.000003  loss: 2.7592  time: 0.4494  data: 0.0000  max mem: 32791
Train: data epoch: [32]  [ 999/1000]  eta: 0:00:00  lr: 0.000003  loss: 0.3981  time: 0.4743  data: 0.0000  max mem: 32791
Train: data epoch: [32] Total time: 0:07:38 (0.4587 s / it)
Train: data epoch: [33]  [   0/1000]  eta: 0:07:24  lr: 0.000003  loss: 2.1334  time: 0.4442  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [  50/1000]  eta: 0:07:09  lr: 0.000003  loss: 0.1546  time: 0.4514  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 100/1000]  eta: 0:06:45  lr: 0.000003  loss: 1.2803  time: 0.4510  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 150/1000]  eta: 0:06:28  lr: 0.000003  loss: 0.3050  time: 0.4500  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 200/1000]  eta: 0:06:04  lr: 0.000003  loss: 1.2456  time: 0.4500  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 250/1000]  eta: 0:05:44  lr: 0.000003  loss: 2.0565  time: 0.4848  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 300/1000]  eta: 0:05:20  lr: 0.000003  loss: 0.7056  time: 0.4504  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 350/1000]  eta: 0:04:59  lr: 0.000003  loss: 2.3031  time: 0.5164  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 400/1000]  eta: 0:04:35  lr: 0.000003  loss: 2.7330  time: 0.4504  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 450/1000]  eta: 0:04:12  lr: 0.000003  loss: 0.1956  time: 0.4507  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 500/1000]  eta: 0:03:48  lr: 0.000003  loss: 2.0745  time: 0.4495  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 550/1000]  eta: 0:03:25  lr: 0.000003  loss: 1.1958  time: 0.4523  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 600/1000]  eta: 0:03:02  lr: 0.000003  loss: 0.1454  time: 0.4522  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 650/1000]  eta: 0:02:40  lr: 0.000003  loss: 2.5722  time: 0.4795  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 700/1000]  eta: 0:02:17  lr: 0.000003  loss: 1.1477  time: 0.4502  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 750/1000]  eta: 0:01:54  lr: 0.000003  loss: 2.9706  time: 0.4522  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 800/1000]  eta: 0:01:31  lr: 0.000003  loss: 2.5053  time: 0.4516  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 850/1000]  eta: 0:01:08  lr: 0.000003  loss: 1.5606  time: 0.4492  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 900/1000]  eta: 0:00:45  lr: 0.000003  loss: 0.7542  time: 0.4499  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 950/1000]  eta: 0:00:22  lr: 0.000003  loss: 2.6689  time: 0.4497  data: 0.0000  max mem: 32791
Train: data epoch: [33]  [ 999/1000]  eta: 0:00:00  lr: 0.000003  loss: 1.4588  time: 0.4638  data: 0.0000  max mem: 32791
Train: data epoch: [33] Total time: 0:07:36 (0.4562 s / it)
Train: data epoch: [34]  [   0/1000]  eta: 0:07:20  lr: 0.000003  loss: 1.6838  time: 0.4408  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [  50/1000]  eta: 0:07:41  lr: 0.000003  loss: 2.5363  time: 0.5388  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 100/1000]  eta: 0:07:01  lr: 0.000003  loss: 2.9231  time: 0.4535  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 150/1000]  eta: 0:06:33  lr: 0.000003  loss: 0.2842  time: 0.4495  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 200/1000]  eta: 0:06:07  lr: 0.000003  loss: 2.7034  time: 0.4502  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 250/1000]  eta: 0:05:43  lr: 0.000003  loss: 1.4631  time: 0.4508  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 300/1000]  eta: 0:05:19  lr: 0.000003  loss: 3.0237  time: 0.4500  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 350/1000]  eta: 0:04:58  lr: 0.000003  loss: 0.7592  time: 0.4502  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 400/1000]  eta: 0:04:34  lr: 0.000003  loss: 1.2251  time: 0.4510  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 450/1000]  eta: 0:04:13  lr: 0.000003  loss: 2.3423  time: 0.5220  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 500/1000]  eta: 0:03:49  lr: 0.000003  loss: 1.2603  time: 0.4506  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 550/1000]  eta: 0:03:26  lr: 0.000003  loss: 1.8619  time: 0.4510  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 600/1000]  eta: 0:03:03  lr: 0.000003  loss: 2.5008  time: 0.4506  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 650/1000]  eta: 0:02:40  lr: 0.000003  loss: 1.2131  time: 0.4513  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 700/1000]  eta: 0:02:17  lr: 0.000003  loss: 1.2870  time: 0.4671  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 750/1000]  eta: 0:01:54  lr: 0.000003  loss: 1.5599  time: 0.4500  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 800/1000]  eta: 0:01:31  lr: 0.000003  loss: 2.5903  time: 0.4493  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 850/1000]  eta: 0:01:08  lr: 0.000003  loss: 2.9211  time: 0.4516  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 900/1000]  eta: 0:00:45  lr: 0.000003  loss: 1.5939  time: 0.4519  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 950/1000]  eta: 0:00:22  lr: 0.000003  loss: 2.7578  time: 0.4501  data: 0.0000  max mem: 32791
Train: data epoch: [34]  [ 999/1000]  eta: 0:00:00  lr: 0.000003  loss: 1.8286  time: 0.4995  data: 0.0000  max mem: 32791
Train: data epoch: [34] Total time: 0:07:39 (0.4596 s / it)
Train: data epoch: [35]  [   0/1000]  eta: 0:07:26  lr: 0.000003  loss: 1.3052  time: 0.4462  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [  50/1000]  eta: 0:07:09  lr: 0.000003  loss: 0.5188  time: 0.4515  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 100/1000]  eta: 0:06:51  lr: 0.000003  loss: 1.3590  time: 0.4771  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 150/1000]  eta: 0:06:26  lr: 0.000003  loss: 2.1958  time: 0.4517  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 200/1000]  eta: 0:06:03  lr: 0.000003  loss: 0.4309  time: 0.4529  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 250/1000]  eta: 0:05:40  lr: 0.000003  loss: 2.4765  time: 0.4503  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 300/1000]  eta: 0:05:17  lr: 0.000003  loss: 1.3165  time: 0.4502  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 350/1000]  eta: 0:04:54  lr: 0.000003  loss: 1.1944  time: 0.4520  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 400/1000]  eta: 0:04:33  lr: 0.000003  loss: 1.2529  time: 0.4499  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 450/1000]  eta: 0:04:10  lr: 0.000003  loss: 0.9888  time: 0.4513  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 500/1000]  eta: 0:03:47  lr: 0.000003  loss: 2.8819  time: 0.4509  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 550/1000]  eta: 0:03:24  lr: 0.000003  loss: 2.2117  time: 0.4516  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 600/1000]  eta: 0:03:02  lr: 0.000003  loss: 3.3130  time: 0.4684  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 650/1000]  eta: 0:02:39  lr: 0.000003  loss: 2.2163  time: 0.4512  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 700/1000]  eta: 0:02:16  lr: 0.000003  loss: 1.1530  time: 0.4509  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 750/1000]  eta: 0:01:53  lr: 0.000003  loss: 1.5729  time: 0.4519  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 800/1000]  eta: 0:01:30  lr: 0.000003  loss: 0.2855  time: 0.4543  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 850/1000]  eta: 0:01:08  lr: 0.000003  loss: 1.1259  time: 0.4508  data: 0.0000  max mem: 32791
Train: data epoch: [35]  [ 900/1000]  eta: 0:00:45  lr: 0.000003  loss: 1.3854  time: 0.5085  data: 0.0000  max mem: 33314
Train: data epoch: [35]  [ 950/1000]  eta: 0:00:22  lr: 0.000003  loss: 2.0035  time: 0.4515  data: 0.0000  max mem: 33314
Train: data epoch: [35]  [ 999/1000]  eta: 0:00:00  lr: 0.000003  loss: 0.6859  time: 0.4733  data: 0.0000  max mem: 33314
Train: data epoch: [35] Total time: 0:07:35 (0.4556 s / it)
Train: data epoch: [36]  [   0/1000]  eta: 0:07:23  lr: 0.000003  loss: 1.8054  time: 0.4439  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [  50/1000]  eta: 0:07:07  lr: 0.000003  loss: 0.1615  time: 0.4508  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 100/1000]  eta: 0:06:45  lr: 0.000003  loss: 2.7486  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 150/1000]  eta: 0:06:27  lr: 0.000003  loss: 2.5438  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 200/1000]  eta: 0:06:09  lr: 0.000003  loss: 0.2250  time: 0.4504  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 250/1000]  eta: 0:05:44  lr: 0.000003  loss: 1.3404  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 300/1000]  eta: 0:05:20  lr: 0.000003  loss: 0.8060  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 350/1000]  eta: 0:04:57  lr: 0.000003  loss: 1.2084  time: 0.4504  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 400/1000]  eta: 0:04:33  lr: 0.000003  loss: 1.9538  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 450/1000]  eta: 0:04:11  lr: 0.000003  loss: 0.5444  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 500/1000]  eta: 0:03:48  lr: 0.000003  loss: 1.8459  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 550/1000]  eta: 0:03:25  lr: 0.000003  loss: 1.3854  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 600/1000]  eta: 0:03:02  lr: 0.000003  loss: 0.4617  time: 0.4500  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 650/1000]  eta: 0:02:39  lr: 0.000002  loss: 0.3818  time: 0.4809  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 700/1000]  eta: 0:02:17  lr: 0.000002  loss: 2.2312  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 750/1000]  eta: 0:01:54  lr: 0.000002  loss: 2.7008  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 800/1000]  eta: 0:01:31  lr: 0.000002  loss: 2.8254  time: 0.4515  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 850/1000]  eta: 0:01:08  lr: 0.000002  loss: 2.5348  time: 0.4508  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 900/1000]  eta: 0:00:45  lr: 0.000002  loss: 0.3335  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 950/1000]  eta: 0:00:22  lr: 0.000002  loss: 1.3932  time: 0.4525  data: 0.0000  max mem: 33314
Train: data epoch: [36]  [ 999/1000]  eta: 0:00:00  lr: 0.000002  loss: 1.9367  time: 0.5019  data: 0.0000  max mem: 33314
Train: data epoch: [36] Total time: 0:07:39 (0.4590 s / it)
Train: data epoch: [37]  [   0/1000]  eta: 0:07:26  lr: 0.000002  loss: 1.2651  time: 0.4463  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [  50/1000]  eta: 0:07:16  lr: 0.000002  loss: 0.7669  time: 0.4716  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 100/1000]  eta: 0:06:49  lr: 0.000002  loss: 2.8454  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 150/1000]  eta: 0:06:25  lr: 0.000002  loss: 1.3017  time: 0.4516  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 200/1000]  eta: 0:06:05  lr: 0.000002  loss: 0.2866  time: 0.4532  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 250/1000]  eta: 0:05:41  lr: 0.000002  loss: 1.1987  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 300/1000]  eta: 0:05:19  lr: 0.000002  loss: 1.3089  time: 0.4797  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 350/1000]  eta: 0:04:56  lr: 0.000002  loss: 1.3135  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 400/1000]  eta: 0:04:32  lr: 0.000002  loss: 1.7036  time: 0.4495  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 450/1000]  eta: 0:04:10  lr: 0.000002  loss: 2.6171  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 500/1000]  eta: 0:03:47  lr: 0.000002  loss: 2.0274  time: 0.4496  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 550/1000]  eta: 0:03:24  lr: 0.000002  loss: 1.1700  time: 0.4656  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 600/1000]  eta: 0:03:01  lr: 0.000002  loss: 0.4641  time: 0.4498  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 650/1000]  eta: 0:02:38  lr: 0.000002  loss: 2.4270  time: 0.4508  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 700/1000]  eta: 0:02:16  lr: 0.000002  loss: 2.2771  time: 0.4518  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 750/1000]  eta: 0:01:53  lr: 0.000002  loss: 2.6640  time: 0.4497  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 800/1000]  eta: 0:01:30  lr: 0.000002  loss: 1.1840  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 850/1000]  eta: 0:01:08  lr: 0.000002  loss: 0.4636  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 900/1000]  eta: 0:00:45  lr: 0.000002  loss: 0.2141  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 950/1000]  eta: 0:00:22  lr: 0.000002  loss: 2.1409  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [37]  [ 999/1000]  eta: 0:00:00  lr: 0.000002  loss: 1.2098  time: 0.4712  data: 0.0000  max mem: 33314
Train: data epoch: [37] Total time: 0:07:36 (0.4564 s / it)
Train: data epoch: [38]  [   0/1000]  eta: 0:09:34  lr: 0.000002  loss: 1.3254  time: 0.5747  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [  50/1000]  eta: 0:07:37  lr: 0.000002  loss: 2.6031  time: 0.4519  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 100/1000]  eta: 0:06:59  lr: 0.000002  loss: 2.6116  time: 0.4500  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 150/1000]  eta: 0:06:36  lr: 0.000002  loss: 0.4616  time: 0.4885  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 200/1000]  eta: 0:06:09  lr: 0.000002  loss: 1.2994  time: 0.4514  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 250/1000]  eta: 0:05:49  lr: 0.000002  loss: 0.3498  time: 0.5236  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 300/1000]  eta: 0:05:24  lr: 0.000002  loss: 1.5252  time: 0.4529  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 350/1000]  eta: 0:05:00  lr: 0.000002  loss: 2.6177  time: 0.4508  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 400/1000]  eta: 0:04:38  lr: 0.000002  loss: 0.7858  time: 0.4494  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 450/1000]  eta: 0:04:14  lr: 0.000002  loss: 0.2373  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 500/1000]  eta: 0:03:50  lr: 0.000002  loss: 3.3251  time: 0.4512  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 550/1000]  eta: 0:03:27  lr: 0.000002  loss: 1.3928  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 600/1000]  eta: 0:03:03  lr: 0.000002  loss: 2.4891  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 650/1000]  eta: 0:02:41  lr: 0.000002  loss: 2.9855  time: 0.4495  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 700/1000]  eta: 0:02:17  lr: 0.000002  loss: 1.6112  time: 0.4495  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 750/1000]  eta: 0:01:54  lr: 0.000002  loss: 1.1099  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 800/1000]  eta: 0:01:32  lr: 0.000002  loss: 0.9151  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 850/1000]  eta: 0:01:08  lr: 0.000002  loss: 0.3592  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 900/1000]  eta: 0:00:45  lr: 0.000002  loss: 2.0123  time: 0.4632  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 950/1000]  eta: 0:00:22  lr: 0.000002  loss: 2.9010  time: 0.4500  data: 0.0000  max mem: 33314
Train: data epoch: [38]  [ 999/1000]  eta: 0:00:00  lr: 0.000002  loss: 2.7576  time: 0.4674  data: 0.0000  max mem: 33314
Train: data epoch: [38] Total time: 0:07:40 (0.4605 s / it)
Train: data epoch: [39]  [   0/1000]  eta: 0:07:24  lr: 0.000002  loss: 1.0372  time: 0.4440  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [  50/1000]  eta: 0:07:12  lr: 0.000002  loss: 1.3075  time: 0.4518  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 100/1000]  eta: 0:06:47  lr: 0.000002  loss: 1.2807  time: 0.4501  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 150/1000]  eta: 0:06:26  lr: 0.000002  loss: 1.2494  time: 0.4710  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 200/1000]  eta: 0:06:03  lr: 0.000002  loss: 0.8781  time: 0.4521  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 250/1000]  eta: 0:05:40  lr: 0.000002  loss: 1.1692  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 300/1000]  eta: 0:05:18  lr: 0.000002  loss: 1.3594  time: 0.4499  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 350/1000]  eta: 0:04:55  lr: 0.000002  loss: 2.2312  time: 0.4515  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 400/1000]  eta: 0:04:32  lr: 0.000002  loss: 1.3008  time: 0.4530  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 450/1000]  eta: 0:04:09  lr: 0.000002  loss: 0.5120  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 500/1000]  eta: 0:03:47  lr: 0.000002  loss: 1.7159  time: 0.4574  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 550/1000]  eta: 0:03:24  lr: 0.000002  loss: 0.5006  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 600/1000]  eta: 0:03:02  lr: 0.000002  loss: 1.6048  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 650/1000]  eta: 0:02:39  lr: 0.000002  loss: 0.1410  time: 0.4523  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 700/1000]  eta: 0:02:16  lr: 0.000002  loss: 1.2633  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 750/1000]  eta: 0:01:53  lr: 0.000002  loss: 2.2456  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 800/1000]  eta: 0:01:31  lr: 0.000002  loss: 0.9953  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 850/1000]  eta: 0:01:08  lr: 0.000002  loss: 0.8376  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 900/1000]  eta: 0:00:45  lr: 0.000002  loss: 0.3895  time: 0.4606  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 950/1000]  eta: 0:00:22  lr: 0.000002  loss: 1.9158  time: 0.4508  data: 0.0000  max mem: 33314
Train: data epoch: [39]  [ 999/1000]  eta: 0:00:00  lr: 0.000002  loss: 2.4717  time: 0.4899  data: 0.0000  max mem: 33314
Train: data epoch: [39] Total time: 0:07:36 (0.4569 s / it)
Train: data epoch: [40]  [   0/1000]  eta: 0:07:27  lr: 0.000002  loss: 1.2514  time: 0.4480  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [  50/1000]  eta: 0:07:08  lr: 0.000002  loss: 2.2087  time: 0.4520  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 100/1000]  eta: 0:06:46  lr: 0.000002  loss: 2.7650  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 150/1000]  eta: 0:06:30  lr: 0.000002  loss: 1.6162  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 200/1000]  eta: 0:06:10  lr: 0.000002  loss: 1.9102  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 250/1000]  eta: 0:05:45  lr: 0.000002  loss: 1.3111  time: 0.4520  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 300/1000]  eta: 0:05:21  lr: 0.000002  loss: 2.3072  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 350/1000]  eta: 0:04:57  lr: 0.000002  loss: 3.1243  time: 0.4589  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 400/1000]  eta: 0:04:34  lr: 0.000002  loss: 2.4430  time: 0.4496  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 450/1000]  eta: 0:04:12  lr: 0.000002  loss: 3.1588  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 500/1000]  eta: 0:03:49  lr: 0.000002  loss: 3.4689  time: 0.4602  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 550/1000]  eta: 0:03:26  lr: 0.000002  loss: 0.5035  time: 0.4560  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 600/1000]  eta: 0:03:03  lr: 0.000002  loss: 2.6826  time: 0.4524  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 650/1000]  eta: 0:02:40  lr: 0.000002  loss: 0.1820  time: 0.4789  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 700/1000]  eta: 0:02:17  lr: 0.000002  loss: 2.1932  time: 0.4512  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 750/1000]  eta: 0:01:54  lr: 0.000002  loss: 2.5401  time: 0.4498  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 800/1000]  eta: 0:01:32  lr: 0.000002  loss: 3.0129  time: 0.5654  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 850/1000]  eta: 0:01:09  lr: 0.000002  loss: 1.0010  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 900/1000]  eta: 0:00:45  lr: 0.000002  loss: 0.7970  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 950/1000]  eta: 0:00:22  lr: 0.000002  loss: 1.3227  time: 0.4619  data: 0.0000  max mem: 33314
Train: data epoch: [40]  [ 999/1000]  eta: 0:00:00  lr: 0.000002  loss: 0.3859  time: 0.4869  data: 0.0000  max mem: 33314
Train: data epoch: [40] Total time: 0:07:40 (0.4606 s / it)
Train: data epoch: [41]  [   0/1000]  eta: 0:07:19  lr: 0.000002  loss: 2.6523  time: 0.4398  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [  50/1000]  eta: 0:07:08  lr: 0.000002  loss: 1.2890  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 100/1000]  eta: 0:06:46  lr: 0.000002  loss: 0.1549  time: 0.4543  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 150/1000]  eta: 0:06:24  lr: 0.000002  loss: 2.8806  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 200/1000]  eta: 0:06:01  lr: 0.000002  loss: 2.1899  time: 0.4508  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 250/1000]  eta: 0:05:40  lr: 0.000002  loss: 1.4863  time: 0.4784  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 300/1000]  eta: 0:05:22  lr: 0.000002  loss: 2.6219  time: 0.5321  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 350/1000]  eta: 0:04:58  lr: 0.000002  loss: 1.3186  time: 0.4512  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 400/1000]  eta: 0:04:35  lr: 0.000002  loss: 2.2931  time: 0.4569  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 450/1000]  eta: 0:04:12  lr: 0.000002  loss: 0.1983  time: 0.4524  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 500/1000]  eta: 0:03:48  lr: 0.000002  loss: 2.4174  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 550/1000]  eta: 0:03:25  lr: 0.000002  loss: 1.3013  time: 0.4518  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 600/1000]  eta: 0:03:02  lr: 0.000002  loss: 2.4569  time: 0.4526  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 650/1000]  eta: 0:02:41  lr: 0.000002  loss: 2.1841  time: 0.5844  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 700/1000]  eta: 0:02:18  lr: 0.000002  loss: 2.0968  time: 0.4642  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 750/1000]  eta: 0:01:54  lr: 0.000002  loss: 1.1876  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 800/1000]  eta: 0:01:31  lr: 0.000002  loss: 0.1816  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 850/1000]  eta: 0:01:08  lr: 0.000002  loss: 1.4498  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 900/1000]  eta: 0:00:45  lr: 0.000002  loss: 2.3128  time: 0.4523  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 950/1000]  eta: 0:00:22  lr: 0.000002  loss: 1.2545  time: 0.4515  data: 0.0000  max mem: 33314
Train: data epoch: [41]  [ 999/1000]  eta: 0:00:00  lr: 0.000002  loss: 3.0538  time: 0.4764  data: 0.0000  max mem: 33314
Train: data epoch: [41] Total time: 0:07:39 (0.4591 s / it)
Train: data epoch: [42]  [   0/1000]  eta: 0:07:24  lr: 0.000002  loss: 2.5152  time: 0.4449  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [  50/1000]  eta: 0:07:13  lr: 0.000002  loss: 2.3589  time: 0.4515  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 100/1000]  eta: 0:07:06  lr: 0.000002  loss: 2.1959  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 150/1000]  eta: 0:06:42  lr: 0.000002  loss: 1.3916  time: 0.4521  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 200/1000]  eta: 0:06:16  lr: 0.000002  loss: 1.9546  time: 0.4496  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 250/1000]  eta: 0:05:52  lr: 0.000002  loss: 2.5310  time: 0.4972  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 300/1000]  eta: 0:05:29  lr: 0.000002  loss: 1.9360  time: 0.5012  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 350/1000]  eta: 0:05:04  lr: 0.000002  loss: 0.4942  time: 0.4512  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 400/1000]  eta: 0:04:39  lr: 0.000002  loss: 2.6912  time: 0.4495  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 450/1000]  eta: 0:04:15  lr: 0.000001  loss: 1.3572  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 500/1000]  eta: 0:03:51  lr: 0.000001  loss: 2.2830  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 550/1000]  eta: 0:03:28  lr: 0.000001  loss: 2.7762  time: 0.4498  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 600/1000]  eta: 0:03:04  lr: 0.000001  loss: 0.5456  time: 0.4598  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 650/1000]  eta: 0:02:41  lr: 0.000001  loss: 1.2128  time: 0.4522  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 700/1000]  eta: 0:02:18  lr: 0.000001  loss: 1.9472  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 750/1000]  eta: 0:01:55  lr: 0.000001  loss: 0.1787  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 800/1000]  eta: 0:01:32  lr: 0.000001  loss: 1.4776  time: 0.4519  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 850/1000]  eta: 0:01:09  lr: 0.000001  loss: 2.5424  time: 0.4989  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 900/1000]  eta: 0:00:46  lr: 0.000001  loss: 1.8802  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 950/1000]  eta: 0:00:23  lr: 0.000001  loss: 1.1571  time: 0.4515  data: 0.0000  max mem: 33314
Train: data epoch: [42]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 2.6611  time: 0.4632  data: 0.0000  max mem: 33314
Train: data epoch: [42] Total time: 0:07:41 (0.4614 s / it)
Train: data epoch: [43]  [   0/1000]  eta: 0:07:18  lr: 0.000001  loss: 1.8813  time: 0.4389  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [  50/1000]  eta: 0:07:32  lr: 0.000001  loss: 1.3033  time: 0.4494  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 100/1000]  eta: 0:07:07  lr: 0.000001  loss: 2.6228  time: 0.5109  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 150/1000]  eta: 0:06:41  lr: 0.000001  loss: 2.2795  time: 0.4894  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 200/1000]  eta: 0:06:13  lr: 0.000001  loss: 1.1060  time: 0.4543  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 250/1000]  eta: 0:05:49  lr: 0.000001  loss: 2.3734  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 300/1000]  eta: 0:05:25  lr: 0.000001  loss: 2.8740  time: 0.4572  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 350/1000]  eta: 0:05:01  lr: 0.000001  loss: 2.3807  time: 0.4521  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 400/1000]  eta: 0:04:37  lr: 0.000001  loss: 3.4208  time: 0.4562  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 450/1000]  eta: 0:04:14  lr: 0.000001  loss: 1.3994  time: 0.4753  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 500/1000]  eta: 0:03:50  lr: 0.000001  loss: 1.1658  time: 0.4525  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 550/1000]  eta: 0:03:27  lr: 0.000001  loss: 2.0127  time: 0.4497  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 600/1000]  eta: 0:03:04  lr: 0.000001  loss: 0.2727  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 650/1000]  eta: 0:02:41  lr: 0.000001  loss: 1.7006  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 700/1000]  eta: 0:02:18  lr: 0.000001  loss: 2.3439  time: 0.4750  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 750/1000]  eta: 0:01:54  lr: 0.000001  loss: 1.3061  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 800/1000]  eta: 0:01:31  lr: 0.000001  loss: 1.2510  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 850/1000]  eta: 0:01:09  lr: 0.000001  loss: 1.6864  time: 0.4519  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 900/1000]  eta: 0:00:45  lr: 0.000001  loss: 0.9929  time: 0.4501  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 950/1000]  eta: 0:00:23  lr: 0.000001  loss: 1.3805  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [43]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 1.2538  time: 0.6129  data: 0.0000  max mem: 33314
Train: data epoch: [43] Total time: 0:07:50 (0.4703 s / it)
Train: data epoch: [44]  [   0/1000]  eta: 0:08:15  lr: 0.000001  loss: 1.9522  time: 0.4960  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [  50/1000]  eta: 0:07:11  lr: 0.000001  loss: 1.2424  time: 0.4540  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 100/1000]  eta: 0:06:47  lr: 0.000001  loss: 1.1328  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 150/1000]  eta: 0:06:24  lr: 0.000001  loss: 1.4984  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 200/1000]  eta: 0:06:04  lr: 0.000001  loss: 0.5883  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 250/1000]  eta: 0:05:42  lr: 0.000001  loss: 0.1202  time: 0.4499  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 300/1000]  eta: 0:05:19  lr: 0.000001  loss: 1.2544  time: 0.4536  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 350/1000]  eta: 0:04:56  lr: 0.000001  loss: 1.7709  time: 0.4724  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 400/1000]  eta: 0:04:33  lr: 0.000001  loss: 1.7932  time: 0.4604  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 450/1000]  eta: 0:04:10  lr: 0.000001  loss: 2.1015  time: 0.4497  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 500/1000]  eta: 0:03:48  lr: 0.000001  loss: 2.5687  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 550/1000]  eta: 0:03:28  lr: 0.000001  loss: 0.9803  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 600/1000]  eta: 0:03:04  lr: 0.000001  loss: 1.1995  time: 0.4499  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 650/1000]  eta: 0:02:41  lr: 0.000001  loss: 3.1487  time: 0.4518  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 700/1000]  eta: 0:02:19  lr: 0.000001  loss: 1.2655  time: 0.4501  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 750/1000]  eta: 0:01:55  lr: 0.000001  loss: 2.8304  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 800/1000]  eta: 0:01:32  lr: 0.000001  loss: 1.4276  time: 0.4499  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 850/1000]  eta: 0:01:09  lr: 0.000001  loss: 2.6001  time: 0.4524  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 900/1000]  eta: 0:00:46  lr: 0.000001  loss: 1.2905  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 950/1000]  eta: 0:00:23  lr: 0.000001  loss: 0.7852  time: 0.4518  data: 0.0000  max mem: 33314
Train: data epoch: [44]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 1.1918  time: 0.5170  data: 0.0000  max mem: 33314
Train: data epoch: [44] Total time: 0:07:42 (0.4627 s / it)
Train: data epoch: [45]  [   0/1000]  eta: 0:07:23  lr: 0.000001  loss: 1.7820  time: 0.4438  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [  50/1000]  eta: 0:07:44  lr: 0.000001  loss: 0.8600  time: 0.5512  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 100/1000]  eta: 0:07:03  lr: 0.000001  loss: 1.9896  time: 0.4525  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 150/1000]  eta: 0:06:34  lr: 0.000001  loss: 2.1932  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 200/1000]  eta: 0:06:08  lr: 0.000001  loss: 1.8996  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 250/1000]  eta: 0:05:53  lr: 0.000001  loss: 0.3824  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 300/1000]  eta: 0:05:28  lr: 0.000001  loss: 2.1466  time: 0.4517  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 350/1000]  eta: 0:05:03  lr: 0.000001  loss: 2.2835  time: 0.4539  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 400/1000]  eta: 0:04:38  lr: 0.000001  loss: 1.1414  time: 0.4504  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 450/1000]  eta: 0:04:15  lr: 0.000001  loss: 0.4298  time: 0.4517  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 500/1000]  eta: 0:03:52  lr: 0.000001  loss: 1.2384  time: 0.4513  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 550/1000]  eta: 0:03:28  lr: 0.000001  loss: 1.2171  time: 0.4734  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 600/1000]  eta: 0:03:05  lr: 0.000001  loss: 1.9519  time: 0.4916  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 650/1000]  eta: 0:02:43  lr: 0.000001  loss: 2.4820  time: 0.4498  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 700/1000]  eta: 0:02:21  lr: 0.000001  loss: 2.1994  time: 0.4514  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 750/1000]  eta: 0:01:57  lr: 0.000001  loss: 0.1950  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 800/1000]  eta: 0:01:34  lr: 0.000001  loss: 2.2245  time: 0.5981  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 850/1000]  eta: 0:01:11  lr: 0.000001  loss: 2.2681  time: 0.4709  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 900/1000]  eta: 0:00:47  lr: 0.000001  loss: 1.6359  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 950/1000]  eta: 0:00:23  lr: 0.000001  loss: 2.6384  time: 0.4585  data: 0.0000  max mem: 33314
Train: data epoch: [45]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 1.0755  time: 0.4627  data: 0.0000  max mem: 33314
Train: data epoch: [45] Total time: 0:07:57 (0.4779 s / it)
Train: data epoch: [46]  [   0/1000]  eta: 0:07:42  lr: 0.000001  loss: 2.2184  time: 0.4622  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [  50/1000]  eta: 0:07:07  lr: 0.000001  loss: 1.2128  time: 0.4494  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 100/1000]  eta: 0:06:55  lr: 0.000001  loss: 1.5984  time: 0.5081  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 150/1000]  eta: 0:06:30  lr: 0.000001  loss: 2.9231  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 200/1000]  eta: 0:06:06  lr: 0.000001  loss: 1.9797  time: 0.4527  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 250/1000]  eta: 0:05:45  lr: 0.000001  loss: 1.3143  time: 0.4501  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 300/1000]  eta: 0:05:21  lr: 0.000001  loss: 1.3248  time: 0.4508  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 350/1000]  eta: 0:04:57  lr: 0.000001  loss: 0.4897  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 400/1000]  eta: 0:04:34  lr: 0.000001  loss: 0.2258  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 450/1000]  eta: 0:04:14  lr: 0.000001  loss: 1.3365  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 500/1000]  eta: 0:03:50  lr: 0.000001  loss: 1.3581  time: 0.4501  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 550/1000]  eta: 0:03:27  lr: 0.000001  loss: 1.2822  time: 0.4517  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 600/1000]  eta: 0:03:06  lr: 0.000001  loss: 1.3302  time: 0.5921  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 650/1000]  eta: 0:02:42  lr: 0.000001  loss: 0.5776  time: 0.4494  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 700/1000]  eta: 0:02:19  lr: 0.000001  loss: 1.4304  time: 0.4514  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 750/1000]  eta: 0:01:55  lr: 0.000001  loss: 2.1373  time: 0.4517  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 800/1000]  eta: 0:01:32  lr: 0.000001  loss: 0.5496  time: 0.4521  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 850/1000]  eta: 0:01:09  lr: 0.000001  loss: 2.4153  time: 0.5085  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 900/1000]  eta: 0:00:46  lr: 0.000001  loss: 0.2044  time: 0.4512  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 950/1000]  eta: 0:00:23  lr: 0.000001  loss: 2.0250  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [46]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 2.2338  time: 0.4626  data: 0.0000  max mem: 33314
Train: data epoch: [46] Total time: 0:07:44 (0.4644 s / it)
Train: data epoch: [47]  [   0/1000]  eta: 0:07:19  lr: 0.000001  loss: 0.2083  time: 0.4398  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [  50/1000]  eta: 0:07:08  lr: 0.000001  loss: 1.2745  time: 0.4522  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 100/1000]  eta: 0:06:45  lr: 0.000001  loss: 1.8526  time: 0.4511  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 150/1000]  eta: 0:06:23  lr: 0.000001  loss: 0.2891  time: 0.4520  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 200/1000]  eta: 0:06:01  lr: 0.000001  loss: 1.7585  time: 0.4566  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 250/1000]  eta: 0:05:38  lr: 0.000001  loss: 0.2139  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 300/1000]  eta: 0:05:16  lr: 0.000001  loss: 1.1470  time: 0.4524  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 350/1000]  eta: 0:04:55  lr: 0.000001  loss: 1.3597  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 400/1000]  eta: 0:04:33  lr: 0.000001  loss: 3.0225  time: 0.4838  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 450/1000]  eta: 0:04:10  lr: 0.000001  loss: 1.4958  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 500/1000]  eta: 0:03:47  lr: 0.000001  loss: 2.4943  time: 0.4521  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 550/1000]  eta: 0:03:24  lr: 0.000001  loss: 2.2525  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 600/1000]  eta: 0:03:01  lr: 0.000001  loss: 2.4869  time: 0.4507  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 650/1000]  eta: 0:02:38  lr: 0.000001  loss: 2.2745  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 700/1000]  eta: 0:02:16  lr: 0.000001  loss: 2.1012  time: 0.4544  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 750/1000]  eta: 0:01:53  lr: 0.000001  loss: 1.3884  time: 0.4853  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 800/1000]  eta: 0:01:30  lr: 0.000001  loss: 1.1995  time: 0.4738  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 850/1000]  eta: 0:01:08  lr: 0.000001  loss: 0.4933  time: 0.4651  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 900/1000]  eta: 0:00:45  lr: 0.000001  loss: 2.4174  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 950/1000]  eta: 0:00:22  lr: 0.000001  loss: 2.3680  time: 0.4571  data: 0.0000  max mem: 33314
Train: data epoch: [47]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 1.1916  time: 0.5100  data: 0.0000  max mem: 33314
Train: data epoch: [47] Total time: 0:07:39 (0.4594 s / it)
Train: data epoch: [48]  [   0/1000]  eta: 0:07:27  lr: 0.000001  loss: 1.1824  time: 0.4474  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [  50/1000]  eta: 0:07:13  lr: 0.000001  loss: 1.8090  time: 0.4645  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 100/1000]  eta: 0:07:15  lr: 0.000001  loss: 2.0454  time: 0.4534  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 150/1000]  eta: 0:06:41  lr: 0.000001  loss: 2.4262  time: 0.4512  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 200/1000]  eta: 0:06:13  lr: 0.000001  loss: 1.3419  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 250/1000]  eta: 0:05:56  lr: 0.000001  loss: 0.8611  time: 0.5934  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 300/1000]  eta: 0:05:29  lr: 0.000001  loss: 2.3545  time: 0.4500  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 350/1000]  eta: 0:05:04  lr: 0.000001  loss: 2.5578  time: 0.4519  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 400/1000]  eta: 0:04:40  lr: 0.000001  loss: 2.5383  time: 0.4505  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 450/1000]  eta: 0:04:19  lr: 0.000001  loss: 1.3221  time: 0.6010  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 500/1000]  eta: 0:03:56  lr: 0.000001  loss: 1.1280  time: 0.5059  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 550/1000]  eta: 0:03:32  lr: 0.000001  loss: 1.2767  time: 0.4958  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 600/1000]  eta: 0:03:08  lr: 0.000001  loss: 1.9767  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 650/1000]  eta: 0:02:44  lr: 0.000001  loss: 2.1310  time: 0.4501  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 700/1000]  eta: 0:02:20  lr: 0.000001  loss: 1.2251  time: 0.4502  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 750/1000]  eta: 0:01:56  lr: 0.000001  loss: 1.8724  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 800/1000]  eta: 0:01:33  lr: 0.000001  loss: 1.9119  time: 0.4510  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 850/1000]  eta: 0:01:09  lr: 0.000001  loss: 2.2928  time: 0.4528  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 900/1000]  eta: 0:00:46  lr: 0.000001  loss: 2.4837  time: 0.4521  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 950/1000]  eta: 0:00:23  lr: 0.000001  loss: 1.3384  time: 0.4565  data: 0.0000  max mem: 33314
Train: data epoch: [48]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 1.0310  time: 0.4731  data: 0.0000  max mem: 33314
Train: data epoch: [48] Total time: 0:07:45 (0.4654 s / it)
Train: data epoch: [49]  [   0/1000]  eta: 0:07:32  lr: 0.000001  loss: 1.1683  time: 0.4528  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [  50/1000]  eta: 0:07:08  lr: 0.000001  loss: 2.0975  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 100/1000]  eta: 0:06:46  lr: 0.000001  loss: 1.1949  time: 0.4517  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 150/1000]  eta: 0:06:23  lr: 0.000001  loss: 0.3707  time: 0.4512  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 200/1000]  eta: 0:06:01  lr: 0.000001  loss: 1.4617  time: 0.4550  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 250/1000]  eta: 0:05:38  lr: 0.000001  loss: 1.3668  time: 0.4538  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 300/1000]  eta: 0:05:15  lr: 0.000001  loss: 0.5729  time: 0.4497  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 350/1000]  eta: 0:04:54  lr: 0.000001  loss: 2.6911  time: 0.4492  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 400/1000]  eta: 0:04:33  lr: 0.000001  loss: 0.3436  time: 0.5355  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 450/1000]  eta: 0:04:10  lr: 0.000001  loss: 0.1663  time: 0.4503  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 500/1000]  eta: 0:03:49  lr: 0.000001  loss: 2.4267  time: 0.4520  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 550/1000]  eta: 0:03:25  lr: 0.000001  loss: 2.0533  time: 0.4514  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 600/1000]  eta: 0:03:02  lr: 0.000001  loss: 2.1834  time: 0.4520  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 650/1000]  eta: 0:02:39  lr: 0.000001  loss: 2.2636  time: 0.4514  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 700/1000]  eta: 0:02:17  lr: 0.000001  loss: 0.6179  time: 0.4531  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 750/1000]  eta: 0:01:54  lr: 0.000001  loss: 2.4619  time: 0.4499  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 800/1000]  eta: 0:01:31  lr: 0.000001  loss: 1.2818  time: 0.4509  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 850/1000]  eta: 0:01:08  lr: 0.000001  loss: 2.6206  time: 0.4506  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 900/1000]  eta: 0:00:45  lr: 0.000001  loss: 1.4432  time: 0.4515  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 950/1000]  eta: 0:00:22  lr: 0.000001  loss: 0.5691  time: 0.4531  data: 0.0000  max mem: 33314
Train: data epoch: [49]  [ 999/1000]  eta: 0:00:00  lr: 0.000001  loss: 0.4456  time: 0.4864  data: 0.0000  max mem: 33314
Train: data epoch: [49] Total time: 0:07:36 (0.4565 s / it)
